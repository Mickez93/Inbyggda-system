***********************************************************************************************
***                                                                                         ***
***                                    LINK INFORMATION                                     ***
***                                                                                         ***
***********************************************************************************************

Linker version:

  SEGGER ARM Linker 4.38.5 compiled Jun 15 2023 00:38:16
  Copyright (c) 2017-2022 SEGGER Microcontroller GmbH    www.segger.com


***********************************************************************************************
***                                                                                         ***
***                                     MODULE SUMMARY                                      ***
***                                                                                         ***
***********************************************************************************************

Memory use by input file:

  Object File                                       RX Code     RO Data     RW Data     ZI Data
  ---------------------------------------------  ----------  ----------  ----------  ----------
  main.o                                                100          23                        
  SEGGER_RTT.o                                          784          26                   1 208
  SEGGER_THUMB_Startup.o                                 20                                    
  stm32l053xx_Vectors.o                                 256                                    
  STM32L0xx_Startup.o                                    56                                    
  system_stm32l0xx.o                                    368          25           4            
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (6 objects)                                1 584          74           4       1 208
  ---------------------------------------------  ----------  ----------  ----------  ----------
  libc_v6m_t_le_eabi_balanced.a                         210                                    
  prinops_rtt_v6m_t_le_eabi_balanced.a                   62                      12          12
  SEGGER_crtinit_v6m_t_le_eabi_balanced.a                74                                    
  strops_v6m_t_le_eabi_balanced.a                       128                                    
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (4 archives)                                 474                      12          12
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Linker created (shared data, fills, blocks):                       52                     512
  =============================================  ==========  ==========  ==========  ==========
  Total:                                              2 058         126          16       1 732
  =============================================  ==========  ==========  ==========  ==========

Memory use by archive member:

  Archive member                                    RX Code     RO Data     RW Data     ZI Data
  ---------------------------------------------  ----------  ----------  ----------  ----------
  fileops.o (libc_v6m_t_le_eabi_balanced.a)             146                                    
  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
                                                         64                                    
  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
                                                         62                      12          12
  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
                                                         74                                    
  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
                                                         16                                    
  strops.o (strops_v6m_t_le_eabi_balanced.a)            112                                    
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (6 members from 4 archives)                  474                      12          12
  Objects (6 files)                                   1 584          74           4       1 208
  Linker created (shared data, fills, blocks):                       52                     512
  =============================================  ==========  ==========  ==========  ==========
  Total:                                              2 058         126          16       1 732
  =============================================  ==========  ==========  ==========  ==========

Memory use by linker:

  Description                                       RX Code     RO Data     RW Data     ZI Data
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Initialization table                                               52                        
  Memory for block 'stack'                                                                  512
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (linker created):                                         52                     512
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Objects (6 files)                                   1 584          74           4       1 208
  Archives (4 files)                                    474                      12          12
  =============================================  ==========  ==========  ==========  ==========
  Total:                                              2 058         126          16       1 732
  =============================================  ==========  ==========  ==========  ==========


***********************************************************************************************
***                                                                                         ***
***                                     SECTION DETAIL                                      ***
***                                                                                         ***
***********************************************************************************************

Sections by address:

  Range              Symbol or [section] Name         Size  Al  Init  Ac  Object File
  -----------------  -------------------------  ----------  --  ----  --  -----------
  08000000-080000bf  _vectors                          192  256
                                                                Code  RX  stm32l053xx_Vectors.o
  080000c0-080000cf  AHBPrescTable                      16   4  Cnst  RO  system_stm32l0xx.o
  080000d0-0800023b  SystemCoreClockUpdate             364   4  Code  RX  system_stm32l0xx.o
  0800023c-080002db  _DoInit                           160   4  Code  RX  SEGGER_RTT.o
  080002dc-08000387  SEGGER_RTT_WriteNoLock            172   4  Code  RX  SEGGER_RTT.o
  08000388-080003d3  SEGGER_RTT_Write                   76   4  Code  RX  SEGGER_RTT.o
  080003d4-08000437  main                              100   4  Code  RX  main.o
  08000438-0800044b  _start                             20   4  Code  RX  SEGGER_THUMB_Startup.o
  0800044c-0800047b  HardFault_Handler                  48   4  Code  RX  STM32L0xx_Startup.o
  0800047c-0800048b  putchar                            16   4  Code  RX  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  0800048c-080004b7  puts                               44   4  Code  RX  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  080004b8-080004ef  __aeabi_uidiv                      56   4  Code  RX  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  080004f0-080004f7  __aeabi_idiv0                       8   4  Code  RX  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  080004f8-0800052b  __SEGGER_RTL_X_file_stat           52   4  Code  RX  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0800052c-0800059b  strlen                            112   4  Code  RX  strops.o (strops_v6m_t_le_eabi_balanced.a)
  0800059c-080005ab  memcpy                             16   4  Code  RX  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  080005ac-080005b4  PLLMulTable                         9   4  Cnst  RO  system_stm32l0xx.o
  080005b5-080005b5  ( ALIGN .=.+1 )                     1   -  ----  -   -
  080005b6-080005b7  NMI_Handler                         2   2  Code  RX  stm32l053xx_Vectors.o
  080005b8-080005c0  [.rodata]                           9   4  Cnst  RO  SEGGER_RTT.o
  080005c1-080005c1  ( ALIGN .=.+1 )                     1   -  ----  -   -
  080005c2-080005c3  SVC_Handler                         2   2  Code  RX  stm32l053xx_Vectors.o
  080005c4-080005d4  _aInitStr.0                        17   4  Cnst  RO  SEGGER_RTT.o
  080005d5-080005d5  ( ALIGN .=.+1 )                     1   -  ----  -   -
  080005d6-080005d7  PendSV_Handler                      2   2  Code  RX  stm32l053xx_Vectors.o
  080005d8-080005ee  [.rodata]                          23   4  Cnst  RO  main.o
  080005ef-080005ef  ( ALIGN .=.+1 )                     1   -  ----  -   -
  080005f0-080005f1  SysTick_Handler                     2   2  Code  RX  stm32l053xx_Vectors.o
  080005f2-080005f3  WWDG_IRQHandler                     2   2  Code  RX  stm32l053xx_Vectors.o
  080005f4-080005f5  PVD_IRQHandler                      2   2  Code  RX  stm32l053xx_Vectors.o
  080005f6-080005f7  RTC_IRQHandler                      2   2  Code  RX  stm32l053xx_Vectors.o
  080005f8-080005f9  FLASH_IRQHandler                    2   2  Code  RX  stm32l053xx_Vectors.o
  080005fa-080005fb  RCC_CRS_IRQHandler                  2   2  Code  RX  stm32l053xx_Vectors.o
  080005fc-080005fd  EXTI0_1_IRQHandler                  2   2  Code  RX  stm32l053xx_Vectors.o
  080005fe-080005ff  EXTI2_3_IRQHandler                  2   2  Code  RX  stm32l053xx_Vectors.o
  08000600-08000601  EXTI4_15_IRQHandler                 2   2  Code  RX  stm32l053xx_Vectors.o
  08000602-08000603  TSC_IRQHandler                      2   2  Code  RX  stm32l053xx_Vectors.o
  08000604-08000605  DMA1_Channel1_IRQHandler            2   2  Code  RX  stm32l053xx_Vectors.o
  08000606-08000607  DMA1_Channel2_3_IRQHandler
                                                         2   2  Code  RX  stm32l053xx_Vectors.o
  08000608-08000609  DMA1_Channel4_5_6_7_IRQHandler
                                                         2   2  Code  RX  stm32l053xx_Vectors.o
  0800060a-0800060b  ADC1_COMP_IRQHandler                2   2  Code  RX  stm32l053xx_Vectors.o
  0800060c-0800060d  LPTIM1_IRQHandler                   2   2  Code  RX  stm32l053xx_Vectors.o
  0800060e-0800060f  TIM2_IRQHandler                     2   2  Code  RX  stm32l053xx_Vectors.o
  08000610-08000611  TIM6_DAC_IRQHandler                 2   2  Code  RX  stm32l053xx_Vectors.o
  08000612-08000613  TIM21_IRQHandler                    2   2  Code  RX  stm32l053xx_Vectors.o
  08000614-08000615  TIM22_IRQHandler                    2   2  Code  RX  stm32l053xx_Vectors.o
  08000616-08000617  I2C1_IRQHandler                     2   2  Code  RX  stm32l053xx_Vectors.o
  08000618-08000619  I2C2_IRQHandler                     2   2  Code  RX  stm32l053xx_Vectors.o
  0800061a-0800061b  SPI1_IRQHandler                     2   2  Code  RX  stm32l053xx_Vectors.o
  0800061c-0800061d  SPI2_IRQHandler                     2   2  Code  RX  stm32l053xx_Vectors.o
  0800061e-0800061f  USART1_IRQHandler                   2   2  Code  RX  stm32l053xx_Vectors.o
  08000620-08000621  USART2_IRQHandler                   2   2  Code  RX  stm32l053xx_Vectors.o
  08000622-08000623  RNG_LPUART1_IRQHandler              2   2  Code  RX  stm32l053xx_Vectors.o
  08000624-08000625  LCD_IRQHandler                      2   2  Code  RX  stm32l053xx_Vectors.o
  08000626-08000627  USB_IRQHandler                      2   2  Code  RX  stm32l053xx_Vectors.o
  08000628-08000629  Dummy_Handler                       2   2  Code  RX  stm32l053xx_Vectors.o
  0800062a-0800064b  fputc                              34   2  Code  RX  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  0800064c-08000655  __SEGGER_RTL_X_file_write          10   2  Code  RX  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  08000656-08000659  SystemInit                          4   2  Code  RX  system_stm32l0xx.o
  0800065a-0800070d  _WriteBlocking                    180   2  Code  RX  SEGGER_RTT.o
  0800070e-08000795  _WriteNoCheck                     136   2  Code  RX  SEGGER_RTT.o
  08000796-080007d1  _GetAvailWriteSpace                60   2  Code  RX  SEGGER_RTT.o
  080007d2-080007d9  reset_handler                       8   2  Code  RX  STM32L0xx_Startup.o
  080007da-0800080d  fwrite                             52   2  Code  RX  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  0800080e-0800080f  ( UNUSED .=.+2 )                    2   -  ----  -   -
  08000810-08000813  [.init_array]                       4   4  ----  --  STM32L0xx_Startup.o
  08000814-08000837  __SEGGER_init_ctors                36   4  Code  RX  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  08000838-0800085b  __SEGGER_init_table__              36   4  Cnst  RO  [ Linker created ]
  0800085c-0800086b  __SEGGER_init_data__               16   4  Cnst  RO  [ Linker created ]
  0800086c-0800087d  __SEGGER_init_zero                 18   2  Code  RX  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  0800087e-08000891  __SEGGER_init_copy                 20   2  Code  RX  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  08000892-1fffffff  ( UNUSED .=.+402650990 )   402 650 990
                                                             -  ----  -   -
  20000000-200003ff  _acUpBuffer                     1 024   4  Zero  ZI  SEGGER_RTT.o
  20000400-200004a7  _SEGGER_RTT                       168   4  Zero  ZI  SEGGER_RTT.o
  200004a8-200004b7  _acDownBuffer                      16   4  Zero  ZI  SEGGER_RTT.o
  200004b8-200004bb  __SEGGER_RTL_stdout_file            4   4  Zero  ZI  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004bc-200004bf  __SEGGER_RTL_stdin_file             4   4  Zero  ZI  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004c0-200004c3  __SEGGER_RTL_stderr_file            4   4  Zero  ZI  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004c4-200004c7  stdout                              4   4  Init  RW  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004c8-200004cb  stdin                               4   4  Init  RW  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004cc-200004cf  stderr                              4   4  Init  RW  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004d0-200004d3  SystemCoreClock                     4   4  Init  RW  system_stm32l0xx.o
  200004d4-20001dff  ( UNUSED .=.+6444 )             6 444   -  ----  -   -
  20001e00-20001fff  [.bss.block.stack]                512   8  None  ZI  [ Linker created ]


***********************************************************************************************
***                                                                                         ***
***                                       SYMBOL LIST                                       ***
***                                                                                         ***
***********************************************************************************************

Function symbols by name:

  Symbol name                   Address        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  ADC1_COMP_IRQHandler       0x0800060B                  2  Code  Wk  stm32l053xx_Vectors.o
  DMA1_Channel1_IRQHandler   0x08000605                  2  Code  Wk  stm32l053xx_Vectors.o
  DMA1_Channel2_3_IRQHandler
                             0x08000607                  2  Code  Wk  stm32l053xx_Vectors.o
  DMA1_Channel4_5_6_7_IRQHandler
                             0x08000609                  2  Code  Wk  stm32l053xx_Vectors.o
  Dummy_Handler              0x08000629                  2  Code  Wk  stm32l053xx_Vectors.o
  EXTI0_1_IRQHandler         0x080005FD                  2  Code  Wk  stm32l053xx_Vectors.o
  EXTI2_3_IRQHandler         0x080005FF                  2  Code  Wk  stm32l053xx_Vectors.o
  EXTI4_15_IRQHandler        0x08000601                  2  Code  Wk  stm32l053xx_Vectors.o
  FLASH_IRQHandler           0x080005F9                  2  Code  Wk  stm32l053xx_Vectors.o
  HardFault_Handler          0x0800044D                  4  Code  Wk  STM32L0xx_Startup.o
  I2C1_IRQHandler            0x08000617                  2  Code  Wk  stm32l053xx_Vectors.o
  I2C2_IRQHandler            0x08000619                  2  Code  Wk  stm32l053xx_Vectors.o
  LCD_IRQHandler             0x08000625                  2  Code  Wk  stm32l053xx_Vectors.o
  LPTIM1_IRQHandler          0x0800060D                  2  Code  Wk  stm32l053xx_Vectors.o
  NMI_Handler                0x080005B7                  2  Code  Wk  stm32l053xx_Vectors.o
  PVD_IRQHandler             0x080005F5                  2  Code  Wk  stm32l053xx_Vectors.o
  PendSV_Handler             0x080005D7                  2  Code  Wk  stm32l053xx_Vectors.o
  RCC_CRS_IRQHandler         0x080005FB                  2  Code  Wk  stm32l053xx_Vectors.o
  RNG_LPUART1_IRQHandler     0x08000623                  2  Code  Wk  stm32l053xx_Vectors.o
  RTC_IRQHandler             0x080005F7                  2  Code  Wk  stm32l053xx_Vectors.o
  Reset_Handler              0x080007D3                  2  Code  Gb  STM32L0xx_Startup.o
  SEGGER_RTT_Write           0x08000389          76      4  Code  Gb  SEGGER_RTT.o
  SEGGER_RTT_WriteNoLock     0x080002DD         172      4  Code  Gb  SEGGER_RTT.o
  SPI1_IRQHandler            0x0800061B                  2  Code  Wk  stm32l053xx_Vectors.o
  SPI2_IRQHandler            0x0800061D                  2  Code  Wk  stm32l053xx_Vectors.o
  SVC_Handler                0x080005C3                  2  Code  Wk  stm32l053xx_Vectors.o
  SysTick_Handler            0x080005F1                  2  Code  Wk  stm32l053xx_Vectors.o
  SystemCoreClockUpdate      0x080000D1         364      4  Code  Gb  system_stm32l0xx.o
  SystemInit                 0x08000657           4      2  Code  Gb  system_stm32l0xx.o
  TIM21_IRQHandler           0x08000613                  2  Code  Wk  stm32l053xx_Vectors.o
  TIM22_IRQHandler           0x08000615                  2  Code  Wk  stm32l053xx_Vectors.o
  TIM2_IRQHandler            0x0800060F                  2  Code  Wk  stm32l053xx_Vectors.o
  TIM6_DAC_IRQHandler        0x08000611                  2  Code  Wk  stm32l053xx_Vectors.o
  TSC_IRQHandler             0x08000603                  2  Code  Wk  stm32l053xx_Vectors.o
  USART1_IRQHandler          0x0800061F                  2  Code  Wk  stm32l053xx_Vectors.o
  USART2_IRQHandler          0x08000621                  2  Code  Wk  stm32l053xx_Vectors.o
  USB_IRQHandler             0x08000627                  2  Code  Wk  stm32l053xx_Vectors.o
  WWDG_IRQHandler            0x080005F3                  2  Code  Wk  stm32l053xx_Vectors.o
  _DoInit                    0x0800023D         160      4  Code  Lc  SEGGER_RTT.o
  _GetAvailWriteSpace        0x08000797          60      2  Code  Lc  SEGGER_RTT.o
  _WriteBlocking             0x0800065B         180      2  Code  Lc  SEGGER_RTT.o
  _WriteNoCheck              0x0800070F         136      2  Code  Lc  SEGGER_RTT.o
  __SEGGER_RTL_X_file_stat   0x080004F9          52      4  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_X_file_write  0x0800064D          10      2  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_copy         0x0800087F          20      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_ctors        0x08000815          26      4  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_done         0x08000443                  4  Code  Gb  SEGGER_THUMB_Startup.o
  __SEGGER_init_zero         0x0800086D          18      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  __aeabi_idiv0              0x080004F1           6      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __aeabi_memcpy             0x0800059D                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memcpy4            0x0800059D                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memcpy8            0x0800059D                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_uidiv              0x080004B9          56      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __startup_complete         0x08000443                  4  Code  Gb  SEGGER_THUMB_Startup.o
  _start                     0x08000439          14      4  Code  Gb  SEGGER_THUMB_Startup.o
  exit                       0x08000447           2      4  Code  Gb  SEGGER_THUMB_Startup.o
  fputc                      0x0800062B          34      2  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  fwrite                     0x080007DB          52      2  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  main                       0x080003D5         100      4  Code  Gb  main.o
  memcpy                     0x0800059D          14      4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  putchar                    0x0800047D          16      4  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  puts                       0x0800048D          44      4  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  reset_handler              0x080007D3                  2  Code  Gb  STM32L0xx_Startup.o
  strlen                     0x0800052D         112      4  Code  Wk  strops.o (strops_v6m_t_le_eabi_balanced.a)

Function symbols by address:

     Address  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x080000D1  SystemCoreClockUpdate             364      4  Code  Gb  system_stm32l0xx.o
  0x0800023D  _DoInit                           160      4  Code  Lc  SEGGER_RTT.o
  0x080002DD  SEGGER_RTT_WriteNoLock            172      4  Code  Gb  SEGGER_RTT.o
  0x08000389  SEGGER_RTT_Write                   76      4  Code  Gb  SEGGER_RTT.o
  0x080003D5  main                              100      4  Code  Gb  main.o
  0x08000439  _start                             14      4  Code  Gb  SEGGER_THUMB_Startup.o
  0x08000443  __startup_complete                         4  Code  Gb  SEGGER_THUMB_Startup.o
  0x08000443  __SEGGER_init_done                         4  Code  Gb  SEGGER_THUMB_Startup.o
  0x08000447  exit                                2      4  Code  Gb  SEGGER_THUMB_Startup.o
  0x0800044D  HardFault_Handler                          4  Code  Wk  STM32L0xx_Startup.o
  0x0800047D  putchar                            16      4  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  0x0800048D  puts                               44      4  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  0x080004B9  __aeabi_uidiv                      56      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  0x080004F1  __aeabi_idiv0                       6      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  0x080004F9  __SEGGER_RTL_X_file_stat           52      4  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x0800052D  strlen                            112      4  Code  Wk  strops.o (strops_v6m_t_le_eabi_balanced.a)
  0x0800059D  memcpy                             14      4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x0800059D  __aeabi_memcpy8                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x0800059D  __aeabi_memcpy4                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x0800059D  __aeabi_memcpy                             4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x080005B7  NMI_Handler                                2  Code  Wk  stm32l053xx_Vectors.o
  0x080005C3  SVC_Handler                                2  Code  Wk  stm32l053xx_Vectors.o
  0x080005D7  PendSV_Handler                             2  Code  Wk  stm32l053xx_Vectors.o
  0x080005F1  SysTick_Handler                            2  Code  Wk  stm32l053xx_Vectors.o
  0x080005F3  WWDG_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  0x080005F5  PVD_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  0x080005F7  RTC_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  0x080005F9  FLASH_IRQHandler                           2  Code  Wk  stm32l053xx_Vectors.o
  0x080005FB  RCC_CRS_IRQHandler                         2  Code  Wk  stm32l053xx_Vectors.o
  0x080005FD  EXTI0_1_IRQHandler                         2  Code  Wk  stm32l053xx_Vectors.o
  0x080005FF  EXTI2_3_IRQHandler                         2  Code  Wk  stm32l053xx_Vectors.o
  0x08000601  EXTI4_15_IRQHandler                        2  Code  Wk  stm32l053xx_Vectors.o
  0x08000603  TSC_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  0x08000605  DMA1_Channel1_IRQHandler                   2  Code  Wk  stm32l053xx_Vectors.o
  0x08000607  DMA1_Channel2_3_IRQHandler
                                                         2  Code  Wk  stm32l053xx_Vectors.o
  0x08000609  DMA1_Channel4_5_6_7_IRQHandler
                                                         2  Code  Wk  stm32l053xx_Vectors.o
  0x0800060B  ADC1_COMP_IRQHandler                       2  Code  Wk  stm32l053xx_Vectors.o
  0x0800060D  LPTIM1_IRQHandler                          2  Code  Wk  stm32l053xx_Vectors.o
  0x0800060F  TIM2_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  0x08000611  TIM6_DAC_IRQHandler                        2  Code  Wk  stm32l053xx_Vectors.o
  0x08000613  TIM21_IRQHandler                           2  Code  Wk  stm32l053xx_Vectors.o
  0x08000615  TIM22_IRQHandler                           2  Code  Wk  stm32l053xx_Vectors.o
  0x08000617  I2C1_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  0x08000619  I2C2_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  0x0800061B  SPI1_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  0x0800061D  SPI2_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  0x0800061F  USART1_IRQHandler                          2  Code  Wk  stm32l053xx_Vectors.o
  0x08000621  USART2_IRQHandler                          2  Code  Wk  stm32l053xx_Vectors.o
  0x08000623  RNG_LPUART1_IRQHandler                     2  Code  Wk  stm32l053xx_Vectors.o
  0x08000625  LCD_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  0x08000627  USB_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  0x08000629  Dummy_Handler                              2  Code  Wk  stm32l053xx_Vectors.o
  0x0800062B  fputc                              34      2  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  0x0800064D  __SEGGER_RTL_X_file_write          10      2  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x08000657  SystemInit                          4      2  Code  Gb  system_stm32l0xx.o
  0x0800065B  _WriteBlocking                    180      2  Code  Lc  SEGGER_RTT.o
  0x0800070F  _WriteNoCheck                     136      2  Code  Lc  SEGGER_RTT.o
  0x08000797  _GetAvailWriteSpace                60      2  Code  Lc  SEGGER_RTT.o
  0x080007D3  reset_handler                              2  Code  Gb  STM32L0xx_Startup.o
  0x080007D3  Reset_Handler                              2  Code  Gb  STM32L0xx_Startup.o
  0x080007DB  fwrite                             52      2  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000815  __SEGGER_init_ctors                26      4  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  0x0800086D  __SEGGER_init_zero                 18      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  0x0800087F  __SEGGER_init_copy                 20      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)

Function symbols by descending size:

  Symbol name                      Size  Align  Type  Bd  Object File
  -------------------------  ----------  -----  ----  --  -----------
  SystemCoreClockUpdate             364      4  Code  Gb  system_stm32l0xx.o
  _WriteBlocking                    180      2  Code  Lc  SEGGER_RTT.o
  SEGGER_RTT_WriteNoLock            172      4  Code  Gb  SEGGER_RTT.o
  _DoInit                           160      4  Code  Lc  SEGGER_RTT.o
  _WriteNoCheck                     136      2  Code  Lc  SEGGER_RTT.o
  strlen                            112      4  Code  Wk  strops.o (strops_v6m_t_le_eabi_balanced.a)
  main                              100      4  Code  Gb  main.o
  SEGGER_RTT_Write                   76      4  Code  Gb  SEGGER_RTT.o
  _GetAvailWriteSpace                60      2  Code  Lc  SEGGER_RTT.o
  __aeabi_uidiv                      56      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_X_file_stat           52      4  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  fwrite                             52      2  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  puts                               44      4  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  fputc                              34      2  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_ctors                26      4  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_copy                 20      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_zero                 18      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  putchar                            16      4  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  _start                             14      4  Code  Gb  SEGGER_THUMB_Startup.o
  memcpy                             14      4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_X_file_write          10      2  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __aeabi_idiv0                       6      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  SystemInit                          4      2  Code  Gb  system_stm32l0xx.o
  exit                                2      4  Code  Gb  SEGGER_THUMB_Startup.o
  ADC1_COMP_IRQHandler                       2  Code  Wk  stm32l053xx_Vectors.o
  DMA1_Channel1_IRQHandler                   2  Code  Wk  stm32l053xx_Vectors.o
  DMA1_Channel2_3_IRQHandler
                                             2  Code  Wk  stm32l053xx_Vectors.o
  DMA1_Channel4_5_6_7_IRQHandler
                                             2  Code  Wk  stm32l053xx_Vectors.o
  Dummy_Handler                              2  Code  Wk  stm32l053xx_Vectors.o
  EXTI0_1_IRQHandler                         2  Code  Wk  stm32l053xx_Vectors.o
  EXTI2_3_IRQHandler                         2  Code  Wk  stm32l053xx_Vectors.o
  EXTI4_15_IRQHandler                        2  Code  Wk  stm32l053xx_Vectors.o
  FLASH_IRQHandler                           2  Code  Wk  stm32l053xx_Vectors.o
  HardFault_Handler                          4  Code  Wk  STM32L0xx_Startup.o
  I2C1_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  I2C2_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  LCD_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  LPTIM1_IRQHandler                          2  Code  Wk  stm32l053xx_Vectors.o
  NMI_Handler                                2  Code  Wk  stm32l053xx_Vectors.o
  PVD_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  PendSV_Handler                             2  Code  Wk  stm32l053xx_Vectors.o
  RCC_CRS_IRQHandler                         2  Code  Wk  stm32l053xx_Vectors.o
  RNG_LPUART1_IRQHandler                     2  Code  Wk  stm32l053xx_Vectors.o
  RTC_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  Reset_Handler                              2  Code  Gb  STM32L0xx_Startup.o
  SPI1_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  SPI2_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  SVC_Handler                                2  Code  Wk  stm32l053xx_Vectors.o
  SysTick_Handler                            2  Code  Wk  stm32l053xx_Vectors.o
  TIM21_IRQHandler                           2  Code  Wk  stm32l053xx_Vectors.o
  TIM22_IRQHandler                           2  Code  Wk  stm32l053xx_Vectors.o
  TIM2_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  TIM6_DAC_IRQHandler                        2  Code  Wk  stm32l053xx_Vectors.o
  TSC_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  USART1_IRQHandler                          2  Code  Wk  stm32l053xx_Vectors.o
  USART2_IRQHandler                          2  Code  Wk  stm32l053xx_Vectors.o
  USB_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  WWDG_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  __SEGGER_init_done                         4  Code  Gb  SEGGER_THUMB_Startup.o
  __aeabi_memcpy                             4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memcpy4                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memcpy8                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __startup_complete                         4  Code  Gb  SEGGER_THUMB_Startup.o
  reset_handler                              2  Code  Gb  STM32L0xx_Startup.o

Read-write data symbols by name:

  Symbol name                   Address        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  SystemCoreClock            0x200004D0           4      4  Init  Gb  system_stm32l0xx.o
  _SEGGER_RTT                0x20000400         168      4  Zero  Gb  SEGGER_RTT.o
  __SEGGER_RTL_stderr_file   0x200004C0           4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stdin_file    0x200004BC           4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stdout_file   0x200004B8           4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  _acDownBuffer              0x200004A8          16      4  Zero  Lc  SEGGER_RTT.o
  _acUpBuffer                0x20000000       1 024      4  Zero  Lc  SEGGER_RTT.o
  stderr                     0x200004CC           4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  stdin                      0x200004C8           4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  stdout                     0x200004C4           4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)

Read-write data symbols by address:

     Address  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x20000000  _acUpBuffer                     1 024      4  Zero  Lc  SEGGER_RTT.o
  0x20000400  _SEGGER_RTT                       168      4  Zero  Gb  SEGGER_RTT.o
  0x200004A8  _acDownBuffer                      16      4  Zero  Lc  SEGGER_RTT.o
  0x200004B8  __SEGGER_RTL_stdout_file            4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004BC  __SEGGER_RTL_stdin_file             4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004C0  __SEGGER_RTL_stderr_file            4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004C4  stdout                              4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004C8  stdin                               4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004CC  stderr                              4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004D0  SystemCoreClock                     4      4  Init  Gb  system_stm32l0xx.o

Read-write data symbols by descending size:

  Symbol name                      Size  Align  Type  Bd  Object File
  -------------------------  ----------  -----  ----  --  -----------
  _acUpBuffer                     1 024      4  Zero  Lc  SEGGER_RTT.o
  _SEGGER_RTT                       168      4  Zero  Gb  SEGGER_RTT.o
  _acDownBuffer                      16      4  Zero  Lc  SEGGER_RTT.o
  SystemCoreClock                     4      4  Init  Gb  system_stm32l0xx.o
  __SEGGER_RTL_stderr_file            4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stdin_file             4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stdout_file            4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  stderr                              4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  stdin                               4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  stdout                              4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)

Read-only data symbols by name:

  Symbol name                   Address        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  AHBPrescTable              0x080000C0          16      4  Cnst  Gb  system_stm32l0xx.o
  PLLMulTable                0x080005AC           9      4  Cnst  Gb  system_stm32l0xx.o
  __SEGGER_init_data__       0x0800085C        [16]      4  Cnst  Lc  [ Linker created ]
  __SEGGER_init_table__      0x08000838        [36]      4  Cnst  Lc  [ Linker created ]
  _aInitStr.0                0x080005C4          17      4  Cnst  Lc  SEGGER_RTT.o

Read-only data symbols by address:

     Address  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x080000C0  AHBPrescTable                      16      4  Cnst  Gb  system_stm32l0xx.o
  0x080005AC  PLLMulTable                         9      4  Cnst  Gb  system_stm32l0xx.o
  0x080005C4  _aInitStr.0                        17      4  Cnst  Lc  SEGGER_RTT.o
  0x08000838  __SEGGER_init_table__            [36]      4  Cnst  Lc  [ Linker created ]
  0x0800085C  __SEGGER_init_data__             [16]      4  Cnst  Lc  [ Linker created ]

Untyped symbols by name:

  Symbol name                     Value        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  __FLASH1_segment_end__     0x08010000                     ----  Gb  [ Linker created ]
  __FLASH1_segment_size__    0x00010000                     ----  Gb  [ Linker created ]
  __FLASH1_segment_start__   0x08000000                     ----  Gb  [ Linker created ]
  __FLASH1_segment_used_end__
                             0x08000892                     ----  Gb  [ Linker created ]
  __FLASH1_segment_used_size__
                             0x00000892                     ----  Gb  [ Linker created ]
  __FLASH1_segment_used_start__
                             0x08000000                     ----  Gb  [ Linker created ]
  __FLASH_segment_end__      0x08010000                     ----  Gb  [ Linker created ]
  __FLASH_segment_size__     0x00010000                     ----  Gb  [ Linker created ]
  __FLASH_segment_start__    0x08000000                     ----  Gb  [ Linker created ]
  __FLASH_segment_used_end__
                             0x08000892                     ----  Gb  [ Linker created ]
  __FLASH_segment_used_size__
                             0x00000892                     ----  Gb  [ Linker created ]
  __FLASH_segment_used_start__
                             0x08000000                     ----  Gb  [ Linker created ]
  __HEAPSIZE__               0x00000400                     ----  Gb  [ Linker created ]
  __RAM1_segment_end__       0x20002000                     ----  Gb  [ Linker created ]
  __RAM1_segment_size__      0x00002000                     ----  Gb  [ Linker created ]
  __RAM1_segment_start__     0x20000000                     ----  Gb  [ Linker created ]
  __RAM1_segment_used_end__  0x20002000                     ----  Gb  [ Linker created ]
  __RAM1_segment_used_size__
                             0x00002000                     ----  Gb  [ Linker created ]
  __RAM1_segment_used_start__
                             0x20000000                     ----  Gb  [ Linker created ]
  __RAM_segment_end__        0x20002000                     ----  Gb  [ Linker created ]
  __RAM_segment_size__       0x00002000                     ----  Gb  [ Linker created ]
  __RAM_segment_start__      0x20000000                     ----  Gb  [ Linker created ]
  __RAM_segment_used_end__   0x20002000                     ----  Gb  [ Linker created ]
  __RAM_segment_used_size__  0x00002000                     ----  Gb  [ Linker created ]
  __RAM_segment_used_start__
                             0x20000000                     ----  Gb  [ Linker created ]
  __STACKSIZE_PROCESS__      0x00000000                     ----  Gb  [ Linker created ]
  __STACKSIZE__              0x00000200                     ----  Gb  [ Linker created ]
  __ctors_end__              0x08000814                     ----  Gb  [ Linker created ]
  __ctors_start__            0x08000810                     ----  Gb  [ Linker created ]
  __stack_end__              0x20002000                     ----  Gb  [ Linker created ]
  __thread_pointer$          0x00000000                     ----  Gb  [ Linker created ]
  _vectors                   0x08000000       [192]    256  Code  Gb  stm32l053xx_Vectors.o
  _vectors_end               0x080000C0                256  Code  Lc  stm32l053xx_Vectors.o

Untyped symbols by address:

       Value  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x00000000  __thread_pointer$                             ----  Gb  [ Linker created ]
  0x00000000  __STACKSIZE_PROCESS__                         ----  Gb  [ Linker created ]
  0x00000200  __STACKSIZE__                                 ----  Gb  [ Linker created ]
  0x00000400  __HEAPSIZE__                                  ----  Gb  [ Linker created ]
  0x00000892  __FLASH_segment_used_size__
                                                            ----  Gb  [ Linker created ]
  0x00000892  __FLASH1_segment_used_size__
                                                            ----  Gb  [ Linker created ]
  0x00002000  __RAM_segment_used_size__                     ----  Gb  [ Linker created ]
  0x00002000  __RAM_segment_size__                          ----  Gb  [ Linker created ]
  0x00002000  __RAM1_segment_used_size__
                                                            ----  Gb  [ Linker created ]
  0x00002000  __RAM1_segment_size__                         ----  Gb  [ Linker created ]
  0x00010000  __FLASH_segment_size__                        ----  Gb  [ Linker created ]
  0x00010000  __FLASH1_segment_size__                       ----  Gb  [ Linker created ]
  0x08000000  _vectors                        [192]    256  Code  Gb  stm32l053xx_Vectors.o
  0x08000000  __FLASH_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x08000000  __FLASH_segment_start__                       ----  Gb  [ Linker created ]
  0x08000000  __FLASH1_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x08000000  __FLASH1_segment_start__                      ----  Gb  [ Linker created ]
  0x080000C0  _vectors_end                             256  Code  Lc  stm32l053xx_Vectors.o
  0x08000810  __ctors_start__                               ----  Gb  [ Linker created ]
  0x08000814  __ctors_end__                                 ----  Gb  [ Linker created ]
  0x08000892  __FLASH_segment_used_end__
                                                            ----  Gb  [ Linker created ]
  0x08000892  __FLASH1_segment_used_end__
                                                            ----  Gb  [ Linker created ]
  0x08010000  __FLASH_segment_end__                         ----  Gb  [ Linker created ]
  0x08010000  __FLASH1_segment_end__                        ----  Gb  [ Linker created ]
  0x20000000  __RAM_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x20000000  __RAM_segment_start__                         ----  Gb  [ Linker created ]
  0x20000000  __RAM1_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x20000000  __RAM1_segment_start__                        ----  Gb  [ Linker created ]
  0x20002000  __stack_end__                                 ----  Gb  [ Linker created ]
  0x20002000  __RAM_segment_used_end__                      ----  Gb  [ Linker created ]
  0x20002000  __RAM_segment_end__                           ----  Gb  [ Linker created ]
  0x20002000  __RAM1_segment_used_end__                     ----  Gb  [ Linker created ]
  0x20002000  __RAM1_segment_end__                          ----  Gb  [ Linker created ]


***********************************************************************************************
***                                                                                         ***
***                                      LINK SUMMARY                                       ***
***                                                                                         ***
***********************************************************************************************

Memory breakdown:

    2 058 bytes read-only  code    + 
      126 bytes read-only  data    =   2 184 bytes read-only (total)
    1 748 bytes read-write data

Region summary:

  Name        Range                     Size                 Used               Unused       Alignment Loss
  ----------  -----------------  -----------  -------------------  -------------------  -------------------
  FLASH       08000000-0800ffff       65 536        2 188   3.34%       63 344  96.66%            4   0.01%
  RAM         20000000-20001fff        8 192        1 748  21.34%        6 444  78.66%            0   0.00%

Link complete: 0 errors, 0 warnings, 0 remarks
