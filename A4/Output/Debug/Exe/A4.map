***********************************************************************************************
***                                                                                         ***
***                                    LINK INFORMATION                                     ***
***                                                                                         ***
***********************************************************************************************

Linker version:

  SEGGER ARM Linker 4.38.5 compiled Jun 15 2023 00:38:16
  Copyright (c) 2017-2022 SEGGER Microcontroller GmbH    www.segger.com


***********************************************************************************************
***                                                                                         ***
***                                     MODULE SUMMARY                                      ***
***                                                                                         ***
***********************************************************************************************

Memory use by input file:

  Object File                                       RX Code     RO Data     RW Data     ZI Data
  ---------------------------------------------  ----------  ----------  ----------  ----------
  main.o                                                352           5                        
  SEGGER_RTT.o                                          784          26                   1 208
  SEGGER_THUMB_Startup.o                                 20                                    
  stm32l053xx_Vectors.o                                 256                                    
  STM32L0xx_Startup.o                                    56                                    
  system_stm32l0xx.o                                    368          25           4            
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (6 objects)                                1 836          56           4       1 208
  ---------------------------------------------  ----------  ----------  ----------  ----------
  libc_v6m_t_le_eabi_balanced.a                       1 874         573          20           4
  prinops_rtt_v6m_t_le_eabi_balanced.a                   66                      12          12
  SEGGER_crtinit_v6m_t_le_eabi_balanced.a                74                                    
  strops_v6m_t_le_eabi_balanced.a                        36                                    
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (4 archives)                               2 050         573          32          16
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Linker created (shared data, fills, blocks):                       72                     512
  =============================================  ==========  ==========  ==========  ==========
  Total:                                              3 886         701          36       1 736
  =============================================  ==========  ==========  ==========  ==========

Memory use by archive member:

  Archive member                                    RX Code     RO Data     RW Data     ZI Data
  ---------------------------------------------  ----------  ----------  ----------  ----------
  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
                                                        928                                    
  fileops.o (libc_v6m_t_le_eabi_balanced.a)             102                                    
  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
                                                        288                                    
  mbops.o (libc_v6m_t_le_eabi_balanced.a)               190         541          20           4
  prinops.o (libc_v6m_t_le_eabi_balanced.a)             366          32                        
  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
                                                         66                      12          12
  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
                                                         74                                    
  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
                                                         36                                    
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (8 members from 4 archives)                2 050         573          32          16
  Objects (6 files)                                   1 836          56           4       1 208
  Linker created (shared data, fills, blocks):                       72                     512
  =============================================  ==========  ==========  ==========  ==========
  Total:                                              3 886         701          36       1 736
  =============================================  ==========  ==========  ==========  ==========

Memory use by linker:

  Description                                       RX Code     RO Data     RW Data     ZI Data
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Initialization table                                               72                        
  Memory for block 'stack'                                                                  512
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (linker created):                                         72                     512
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Objects (6 files)                                   1 836          56           4       1 208
  Archives (4 files)                                  2 050         573          32          16
  =============================================  ==========  ==========  ==========  ==========
  Total:                                              3 886         701          36       1 736
  =============================================  ==========  ==========  ==========  ==========


***********************************************************************************************
***                                                                                         ***
***                                     SECTION DETAIL                                      ***
***                                                                                         ***
***********************************************************************************************

Sections by address:

  Range              Symbol or [section] Name         Size  Al  Init  Ac  Object File
  -----------------  -------------------------  ----------  --  ----  --  -----------
  08000000-080000bf  _vectors                          192  256
                                                                Code  RX  stm32l053xx_Vectors.o
  080000c0-080000cf  AHBPrescTable                      16   4  Cnst  RO  system_stm32l0xx.o
  080000d0-0800023b  SystemCoreClockUpdate             364   4  Code  RX  system_stm32l0xx.o
  0800023c-080002db  _DoInit                           160   4  Code  RX  SEGGER_RTT.o
  080002dc-08000387  SEGGER_RTT_WriteNoLock            172   4  Code  RX  SEGGER_RTT.o
  08000388-080003d3  SEGGER_RTT_Write                   76   4  Code  RX  SEGGER_RTT.o
  080003d4-080003ff  uart_tx                            44   4  Code  RX  main.o
  08000400-0800041b  uart_rx                            28   4  Code  RX  main.o
  0800041c-080004f7  main                              220   4  Code  RX  main.o
  080004f8-08000533  delay_systicks                     60   4  Code  RX  main.o
  08000534-08000547  _start                             20   4  Code  RX  SEGGER_THUMB_Startup.o
  08000548-08000577  HardFault_Handler                  48   4  Code  RX  STM32L0xx_Startup.o
  08000578-08000587  putchar                            16   4  Code  RX  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  08000588-0800059f  __SEGGER_RTL_current_locale
                                                        24   4  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  080005a0-080005bb  __SEGGER_RTL_ascii_isctype
                                                        28   4  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  080005bc-080005d7  __SEGGER_RTL_ascii_iswctype
                                                        28   4  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  080005d8-080005e3  __SEGGER_RTL_c_locale              12   4  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  080005e4-08000603  __SEGGER_RTL_codeset_ascii
                                                        32   4  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000604-0800065b  __SEGGER_RTL_c_locale_data
                                                        88   4  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0800065c-0800068b  __aeabi_lmul                       48   4  Code  RX  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  0800068c-080006c3  __aeabi_uidiv                      56   4  Code  RX  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  080006c4-080006d3  __aeabi_uidivmod                   16   4  Code  RX  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  080006d4-08000773  __aeabi_uldivmod                  160   4  Code  RX  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  08000774-0800077b  __aeabi_idiv0                       8   4  Code  RX  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  0800077c-080007f3  vfprintf_l                        120   4  Code  RX  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  080007f4-0800081b  printf                             40   4  Code  RX  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0800081c-08000bbb  __SEGGER_RTL_vfprintf_int_nwp
                                                       928   4  Code  RX  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
  08000bbc-08000bef  __SEGGER_RTL_X_file_stat           52   4  Code  RX  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  08000bf0-08000bff  memcpy                             16   4  Code  RX  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  08000c00-08000c13  __aeabi_memclr                     20   4  Code  RX  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  08000c14-08000c1c  PLLMulTable                         9   4  Cnst  RO  system_stm32l0xx.o
  08000c1d-08000c73  __SEGGER_RTL_c_locale_month_names
                                                        87   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000c74-08000c7c  [.rodata]                           9   4  Cnst  RO  SEGGER_RTT.o
  08000c7d-08000c83  __SEGGER_RTL_c_locale_am_pm_indicator
                                                         7   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000c84-08000c94  _aInitStr.0                        17   4  Cnst  RO  SEGGER_RTT.o
  08000c95-08000ca3  __SEGGER_RTL_c_locale_date_time_format
                                                        15   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000ca4-08000ca8  [.rodata]                           5   4  Cnst  RO  main.o
  08000ca9-08000cc5  __SEGGER_RTL_c_locale_abbrev_day_names
                                                        29   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000cc6-08000cc7  NMI_Handler                         2   2  Code  RX  stm32l053xx_Vectors.o
  08000cc8-08000cc9  SVC_Handler                         2   2  Code  RX  stm32l053xx_Vectors.o
  08000cca-08000ccb  PendSV_Handler                      2   2  Code  RX  stm32l053xx_Vectors.o
  08000ccc-08000ccd  SysTick_Handler                     2   2  Code  RX  stm32l053xx_Vectors.o
  08000cce-08000ccf  WWDG_IRQHandler                     2   2  Code  RX  stm32l053xx_Vectors.o
  08000cd0-08000cd1  PVD_IRQHandler                      2   2  Code  RX  stm32l053xx_Vectors.o
  08000cd2-08000cd3  RTC_IRQHandler                      2   2  Code  RX  stm32l053xx_Vectors.o
  08000cd4-08000cd5  FLASH_IRQHandler                    2   2  Code  RX  stm32l053xx_Vectors.o
  08000cd6-08000cd7  RCC_CRS_IRQHandler                  2   2  Code  RX  stm32l053xx_Vectors.o
  08000cd8-08000cd9  EXTI0_1_IRQHandler                  2   2  Code  RX  stm32l053xx_Vectors.o
  08000cda-08000cdb  EXTI2_3_IRQHandler                  2   2  Code  RX  stm32l053xx_Vectors.o
  08000cdc-08000cdd  EXTI4_15_IRQHandler                 2   2  Code  RX  stm32l053xx_Vectors.o
  08000cde-08000cdf  TSC_IRQHandler                      2   2  Code  RX  stm32l053xx_Vectors.o
  08000ce0-08000ce1  DMA1_Channel1_IRQHandler            2   2  Code  RX  stm32l053xx_Vectors.o
  08000ce2-08000ce3  DMA1_Channel2_3_IRQHandler
                                                         2   2  Code  RX  stm32l053xx_Vectors.o
  08000ce4-08000ce5  DMA1_Channel4_5_6_7_IRQHandler
                                                         2   2  Code  RX  stm32l053xx_Vectors.o
  08000ce6-08000ce7  ADC1_COMP_IRQHandler                2   2  Code  RX  stm32l053xx_Vectors.o
  08000ce8-08000ce9  LPTIM1_IRQHandler                   2   2  Code  RX  stm32l053xx_Vectors.o
  08000cea-08000ceb  TIM2_IRQHandler                     2   2  Code  RX  stm32l053xx_Vectors.o
  08000cec-08000ced  TIM6_DAC_IRQHandler                 2   2  Code  RX  stm32l053xx_Vectors.o
  08000cee-08000cef  TIM21_IRQHandler                    2   2  Code  RX  stm32l053xx_Vectors.o
  08000cf0-08000cf1  TIM22_IRQHandler                    2   2  Code  RX  stm32l053xx_Vectors.o
  08000cf2-08000cf3  I2C1_IRQHandler                     2   2  Code  RX  stm32l053xx_Vectors.o
  08000cf4-08000cf5  I2C2_IRQHandler                     2   2  Code  RX  stm32l053xx_Vectors.o
  08000cf6-08000cf7  SPI1_IRQHandler                     2   2  Code  RX  stm32l053xx_Vectors.o
  08000cf8-08000cf9  SPI2_IRQHandler                     2   2  Code  RX  stm32l053xx_Vectors.o
  08000cfa-08000cfb  USART1_IRQHandler                   2   2  Code  RX  stm32l053xx_Vectors.o
  08000cfc-08000cfd  USART2_IRQHandler                   2   2  Code  RX  stm32l053xx_Vectors.o
  08000cfe-08000cff  RNG_LPUART1_IRQHandler              2   2  Code  RX  stm32l053xx_Vectors.o
  08000d00-08000d01  LCD_IRQHandler                      2   2  Code  RX  stm32l053xx_Vectors.o
  08000d02-08000d03  USB_IRQHandler                      2   2  Code  RX  stm32l053xx_Vectors.o
  08000d04-08000d05  Dummy_Handler                       2   2  Code  RX  stm32l053xx_Vectors.o
  08000d06-08000d27  fputc                              34   2  Code  RX  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  08000d28-08000d55  __SEGGER_RTL_ascii_mbtowc          46   2  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000d56-08000ddf  __SEGGER_RTL_putc                 138   2  Code  RX  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  08000de0-08000df9  __SEGGER_RTL_prin_flush            26   2  Code  RX  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  08000dfa-08000e13  vfprintf                           26   2  Code  RX  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  08000e14-08000e1d  __SEGGER_RTL_X_file_write          10   2  Code  RX  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  08000e1e-08000e21  SystemInit                          4   2  Code  RX  system_stm32l0xx.o
  08000e22-08000ed5  _WriteBlocking                    180   2  Code  RX  SEGGER_RTT.o
  08000ed6-08000f5d  _WriteNoCheck                     136   2  Code  RX  SEGGER_RTT.o
  08000f5e-08000f99  _GetAvailWriteSpace                60   2  Code  RX  SEGGER_RTT.o
  08000f9a-08000fa1  reset_handler                       8   2  Code  RX  STM32L0xx_Startup.o
  08000fa2-08000fd5  fwrite                             52   2  Code  RX  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  08000fd6-08000fe5  __SEGGER_RTL_ascii_wctomb          16   2  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000fe6-08000ff1  __SEGGER_RTL_ascii_toupper
                                                        12   2  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000ff2-08000ffd  __SEGGER_RTL_ascii_tolower
                                                        12   2  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000ffe-08001009  __SEGGER_RTL_ascii_towupper
                                                        12   2  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0800100a-08001015  __SEGGER_RTL_ascii_towlower
                                                        12   2  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08001016-08001025  __SEGGER_RTL_stream_write          16   2  Code  RX  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  08001026-08001029  __SEGGER_RTL_X_file_bufsize
                                                         4   2  Code  RX  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0800102a-0800102b  [.rodata.libc..L.str]               2   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0800102c-0800102d  __SEGGER_RTL_data_utf8_period
                                                         2   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0800102e-08001067  __SEGGER_RTL_c_locale_day_names
                                                        58   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08001068-08001098  __SEGGER_RTL_c_locale_abbrev_month_names
                                                        49   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08001099-08001099  __SEGGER_RTL_data_empty_string
                                                         1   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0800109a-080010a2  __SEGGER_RTL_c_locale_date_format
                                                         9   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  080010a3-080010ab  __SEGGER_RTL_c_locale_time_format
                                                         9   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  080010ac-080010b8  __SEGGER_RTL_ascii_ctype_mask
                                                        13   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  080010b9-080010bb  ( UNUSED .=.+3 )                    3   -  ----  -   -
  080010bc-080010bf  [.init_array]                       4   4  ----  --  STM32L0xx_Startup.o
  080010c0-0800113f  __SEGGER_RTL_ascii_ctype_map
                                                       128   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08001140-0800114f  __SEGGER_RTL_hex_uc                16   1  Cnst  RO  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  08001150-0800115f  __SEGGER_RTL_hex_lc                16   1  Cnst  RO  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  08001160-08001183  __SEGGER_init_ctors                36   4  Code  RX  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  08001184-080011a7  __SEGGER_init_table__              36   4  Cnst  RO  [ Linker created ]
  080011a8-080011cb  __SEGGER_init_data__               36   4  Cnst  RO  [ Linker created ]
  080011cc-080011dd  __SEGGER_init_zero                 18   2  Code  RX  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  080011de-080011f1  __SEGGER_init_copy                 20   2  Code  RX  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  080011f2-1fffffff  ( UNUSED .=.+402648590 )   402 648 590
                                                             -  ----  -   -
  20000000-200003ff  _acUpBuffer                     1 024   4  Zero  ZI  SEGGER_RTT.o
  20000400-200004a7  _SEGGER_RTT                       168   4  Zero  ZI  SEGGER_RTT.o
  200004a8-200004b7  _acDownBuffer                      16   4  Zero  ZI  SEGGER_RTT.o
  200004b8-200004bb  __SEGGER_RTL_stdout_file            4   4  Zero  ZI  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004bc-200004bf  __SEGGER_RTL_stdin_file             4   4  Zero  ZI  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004c0-200004c3  __SEGGER_RTL_stderr_file            4   4  Zero  ZI  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004c4-200004c7  __SEGGER_RTL_locale_ptr             4   4  Zero  ZI  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  200004c8-200004db  __SEGGER_RTL_global_locale
                                                        20   4  Init  RW  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  200004dc-200004df  stdout                              4   4  Init  RW  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004e0-200004e3  stdin                               4   4  Init  RW  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004e4-200004e7  stderr                              4   4  Init  RW  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004e8-200004eb  SystemCoreClock                     4   4  Init  RW  system_stm32l0xx.o
  200004ec-20001dff  ( UNUSED .=.+6420 )             6 420   -  ----  -   -
  20001e00-20001fff  [.bss.block.stack]                512   8  None  ZI  [ Linker created ]


***********************************************************************************************
***                                                                                         ***
***                                       SYMBOL LIST                                       ***
***                                                                                         ***
***********************************************************************************************

Function symbols by name:

  Symbol name                   Address        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  ADC1_COMP_IRQHandler       0x08000CE7                  2  Code  Wk  stm32l053xx_Vectors.o
  DMA1_Channel1_IRQHandler   0x08000CE1                  2  Code  Wk  stm32l053xx_Vectors.o
  DMA1_Channel2_3_IRQHandler
                             0x08000CE3                  2  Code  Wk  stm32l053xx_Vectors.o
  DMA1_Channel4_5_6_7_IRQHandler
                             0x08000CE5                  2  Code  Wk  stm32l053xx_Vectors.o
  Dummy_Handler              0x08000D05                  2  Code  Wk  stm32l053xx_Vectors.o
  EXTI0_1_IRQHandler         0x08000CD9                  2  Code  Wk  stm32l053xx_Vectors.o
  EXTI2_3_IRQHandler         0x08000CDB                  2  Code  Wk  stm32l053xx_Vectors.o
  EXTI4_15_IRQHandler        0x08000CDD                  2  Code  Wk  stm32l053xx_Vectors.o
  FLASH_IRQHandler           0x08000CD5                  2  Code  Wk  stm32l053xx_Vectors.o
  HardFault_Handler          0x08000549                  4  Code  Wk  STM32L0xx_Startup.o
  I2C1_IRQHandler            0x08000CF3                  2  Code  Wk  stm32l053xx_Vectors.o
  I2C2_IRQHandler            0x08000CF5                  2  Code  Wk  stm32l053xx_Vectors.o
  LCD_IRQHandler             0x08000D01                  2  Code  Wk  stm32l053xx_Vectors.o
  LPTIM1_IRQHandler          0x08000CE9                  2  Code  Wk  stm32l053xx_Vectors.o
  NMI_Handler                0x08000CC7                  2  Code  Wk  stm32l053xx_Vectors.o
  PVD_IRQHandler             0x08000CD1                  2  Code  Wk  stm32l053xx_Vectors.o
  PendSV_Handler             0x08000CCB                  2  Code  Wk  stm32l053xx_Vectors.o
  RCC_CRS_IRQHandler         0x08000CD7                  2  Code  Wk  stm32l053xx_Vectors.o
  RNG_LPUART1_IRQHandler     0x08000CFF                  2  Code  Wk  stm32l053xx_Vectors.o
  RTC_IRQHandler             0x08000CD3                  2  Code  Wk  stm32l053xx_Vectors.o
  Reset_Handler              0x08000F9B                  2  Code  Gb  STM32L0xx_Startup.o
  SEGGER_RTT_Write           0x08000389          76      4  Code  Gb  SEGGER_RTT.o
  SEGGER_RTT_WriteNoLock     0x080002DD         172      4  Code  Gb  SEGGER_RTT.o
  SPI1_IRQHandler            0x08000CF7                  2  Code  Wk  stm32l053xx_Vectors.o
  SPI2_IRQHandler            0x08000CF9                  2  Code  Wk  stm32l053xx_Vectors.o
  SVC_Handler                0x08000CC9                  2  Code  Wk  stm32l053xx_Vectors.o
  SysTick_Handler            0x08000CCD                  2  Code  Wk  stm32l053xx_Vectors.o
  SystemCoreClockUpdate      0x080000D1         364      4  Code  Gb  system_stm32l0xx.o
  SystemInit                 0x08000E1F           4      2  Code  Gb  system_stm32l0xx.o
  TIM21_IRQHandler           0x08000CEF                  2  Code  Wk  stm32l053xx_Vectors.o
  TIM22_IRQHandler           0x08000CF1                  2  Code  Wk  stm32l053xx_Vectors.o
  TIM2_IRQHandler            0x08000CEB                  2  Code  Wk  stm32l053xx_Vectors.o
  TIM6_DAC_IRQHandler        0x08000CED                  2  Code  Wk  stm32l053xx_Vectors.o
  TSC_IRQHandler             0x08000CDF                  2  Code  Wk  stm32l053xx_Vectors.o
  USART1_IRQHandler          0x08000CFB                  2  Code  Wk  stm32l053xx_Vectors.o
  USART2_IRQHandler          0x08000CFD                  2  Code  Wk  stm32l053xx_Vectors.o
  USB_IRQHandler             0x08000D03                  2  Code  Wk  stm32l053xx_Vectors.o
  WWDG_IRQHandler            0x08000CCF                  2  Code  Wk  stm32l053xx_Vectors.o
  _DoInit                    0x0800023D         160      4  Code  Lc  SEGGER_RTT.o
  _GetAvailWriteSpace        0x08000F5F          60      2  Code  Lc  SEGGER_RTT.o
  _WriteBlocking             0x08000E23         180      2  Code  Lc  SEGGER_RTT.o
  _WriteNoCheck              0x08000ED7         136      2  Code  Lc  SEGGER_RTT.o
  __SEGGER_RTL_X_file_bufsize
                             0x08001027           4      2  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_X_file_stat   0x08000BBD          52      4  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_X_file_write  0x08000E15          10      2  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_isctype
                             0x080005A1          28      4  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_iswctype
                             0x080005BD          28      4  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_mbtowc  0x08000D29          46      2  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_tolower
                             0x08000FF3          12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_toupper
                             0x08000FE7          12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_towlower
                             0x0800100B          12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_towupper
                             0x08000FFF          12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_wctomb  0x08000FD7          16      2  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_current_locale
                             0x08000589          24      4  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_prin_flush    0x08000DE1          26      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_putc          0x08000D57         138      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stream_write  0x08001017          16      2  Code  Lc  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_vfprintf      0x0800081D         928      4  Code  Gb  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_vfprintf_int_nwp
                             0x0800081D         928      4  Code  Gb  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_copy         0x080011DF          20      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_ctors        0x08001161          26      4  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_done         0x0800053F                  4  Code  Gb  SEGGER_THUMB_Startup.o
  __SEGGER_init_zero         0x080011CD          18      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  __aeabi_idiv0              0x08000775           6      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __aeabi_lmul               0x0800065D          46      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __aeabi_memclr             0x08000C01          20      4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memclr4            0x08000C01                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memclr8            0x08000C01                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memcpy             0x08000BF1                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memcpy4            0x08000BF1                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memcpy8            0x08000BF1                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memset             0x08000C03                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memset4            0x08000C03                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memset8            0x08000C03                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_uidiv              0x0800068D          56      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __aeabi_uidivmod           0x080006C5          16      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __aeabi_uldivmod           0x080006D5         160      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __startup_complete         0x0800053F                  4  Code  Gb  SEGGER_THUMB_Startup.o
  _start                     0x08000535          14      4  Code  Gb  SEGGER_THUMB_Startup.o
  delay_systicks             0x080004F9          60      4  Code  Gb  main.o
  exit                       0x08000543           2      4  Code  Gb  SEGGER_THUMB_Startup.o
  fputc                      0x08000D07          34      2  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  fwrite                     0x08000FA3          52      2  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  main                       0x0800041D         220      4  Code  Gb  main.o
  memcpy                     0x08000BF1          14      4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  memset                     0x08000C09                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  printf                     0x080007F5          40      4  Code  Wk  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  putchar                    0x08000579          16      4  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  reset_handler              0x08000F9B                  2  Code  Gb  STM32L0xx_Startup.o
  uart_rx                    0x08000401          28      4  Code  Gb  main.o
  uart_tx                    0x080003D5          44      4  Code  Gb  main.o
  vfprintf                   0x08000DFB          26      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  vfprintf_l                 0x0800077D         120      4  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)

Function symbols by address:

     Address  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x080000D1  SystemCoreClockUpdate             364      4  Code  Gb  system_stm32l0xx.o
  0x0800023D  _DoInit                           160      4  Code  Lc  SEGGER_RTT.o
  0x080002DD  SEGGER_RTT_WriteNoLock            172      4  Code  Gb  SEGGER_RTT.o
  0x08000389  SEGGER_RTT_Write                   76      4  Code  Gb  SEGGER_RTT.o
  0x080003D5  uart_tx                            44      4  Code  Gb  main.o
  0x08000401  uart_rx                            28      4  Code  Gb  main.o
  0x0800041D  main                              220      4  Code  Gb  main.o
  0x080004F9  delay_systicks                     60      4  Code  Gb  main.o
  0x08000535  _start                             14      4  Code  Gb  SEGGER_THUMB_Startup.o
  0x0800053F  __startup_complete                         4  Code  Gb  SEGGER_THUMB_Startup.o
  0x0800053F  __SEGGER_init_done                         4  Code  Gb  SEGGER_THUMB_Startup.o
  0x08000543  exit                                2      4  Code  Gb  SEGGER_THUMB_Startup.o
  0x08000549  HardFault_Handler                          4  Code  Wk  STM32L0xx_Startup.o
  0x08000579  putchar                            16      4  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000589  __SEGGER_RTL_current_locale
                                                 24      4  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x080005A1  __SEGGER_RTL_ascii_isctype
                                                 28      4  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x080005BD  __SEGGER_RTL_ascii_iswctype
                                                 28      4  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x0800065D  __aeabi_lmul                       46      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  0x0800068D  __aeabi_uidiv                      56      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  0x080006C5  __aeabi_uidivmod                   16      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  0x080006D5  __aeabi_uldivmod                  160      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000775  __aeabi_idiv0                       6      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  0x0800077D  vfprintf_l                        120      4  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x080007F5  printf                             40      4  Code  Wk  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x0800081D  __SEGGER_RTL_vfprintf_int_nwp
                                                928      4  Code  Gb  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
  0x0800081D  __SEGGER_RTL_vfprintf             928      4  Code  Gb  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000BBD  __SEGGER_RTL_X_file_stat           52      4  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x08000BF1  memcpy                             14      4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000BF1  __aeabi_memcpy8                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000BF1  __aeabi_memcpy4                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000BF1  __aeabi_memcpy                             4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000C01  __aeabi_memclr8                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000C01  __aeabi_memclr4                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000C01  __aeabi_memclr                     20      4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000C03  __aeabi_memset8                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000C03  __aeabi_memset4                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000C03  __aeabi_memset                             4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000C09  memset                                     4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000CC7  NMI_Handler                                2  Code  Wk  stm32l053xx_Vectors.o
  0x08000CC9  SVC_Handler                                2  Code  Wk  stm32l053xx_Vectors.o
  0x08000CCB  PendSV_Handler                             2  Code  Wk  stm32l053xx_Vectors.o
  0x08000CCD  SysTick_Handler                            2  Code  Wk  stm32l053xx_Vectors.o
  0x08000CCF  WWDG_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  0x08000CD1  PVD_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  0x08000CD3  RTC_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  0x08000CD5  FLASH_IRQHandler                           2  Code  Wk  stm32l053xx_Vectors.o
  0x08000CD7  RCC_CRS_IRQHandler                         2  Code  Wk  stm32l053xx_Vectors.o
  0x08000CD9  EXTI0_1_IRQHandler                         2  Code  Wk  stm32l053xx_Vectors.o
  0x08000CDB  EXTI2_3_IRQHandler                         2  Code  Wk  stm32l053xx_Vectors.o
  0x08000CDD  EXTI4_15_IRQHandler                        2  Code  Wk  stm32l053xx_Vectors.o
  0x08000CDF  TSC_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  0x08000CE1  DMA1_Channel1_IRQHandler                   2  Code  Wk  stm32l053xx_Vectors.o
  0x08000CE3  DMA1_Channel2_3_IRQHandler
                                                         2  Code  Wk  stm32l053xx_Vectors.o
  0x08000CE5  DMA1_Channel4_5_6_7_IRQHandler
                                                         2  Code  Wk  stm32l053xx_Vectors.o
  0x08000CE7  ADC1_COMP_IRQHandler                       2  Code  Wk  stm32l053xx_Vectors.o
  0x08000CE9  LPTIM1_IRQHandler                          2  Code  Wk  stm32l053xx_Vectors.o
  0x08000CEB  TIM2_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  0x08000CED  TIM6_DAC_IRQHandler                        2  Code  Wk  stm32l053xx_Vectors.o
  0x08000CEF  TIM21_IRQHandler                           2  Code  Wk  stm32l053xx_Vectors.o
  0x08000CF1  TIM22_IRQHandler                           2  Code  Wk  stm32l053xx_Vectors.o
  0x08000CF3  I2C1_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  0x08000CF5  I2C2_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  0x08000CF7  SPI1_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  0x08000CF9  SPI2_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  0x08000CFB  USART1_IRQHandler                          2  Code  Wk  stm32l053xx_Vectors.o
  0x08000CFD  USART2_IRQHandler                          2  Code  Wk  stm32l053xx_Vectors.o
  0x08000CFF  RNG_LPUART1_IRQHandler                     2  Code  Wk  stm32l053xx_Vectors.o
  0x08000D01  LCD_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  0x08000D03  USB_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  0x08000D05  Dummy_Handler                              2  Code  Wk  stm32l053xx_Vectors.o
  0x08000D07  fputc                              34      2  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000D29  __SEGGER_RTL_ascii_mbtowc          46      2  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000D57  __SEGGER_RTL_putc                 138      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000DE1  __SEGGER_RTL_prin_flush            26      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000DFB  vfprintf                           26      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000E15  __SEGGER_RTL_X_file_write          10      2  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x08000E1F  SystemInit                          4      2  Code  Gb  system_stm32l0xx.o
  0x08000E23  _WriteBlocking                    180      2  Code  Lc  SEGGER_RTT.o
  0x08000ED7  _WriteNoCheck                     136      2  Code  Lc  SEGGER_RTT.o
  0x08000F5F  _GetAvailWriteSpace                60      2  Code  Lc  SEGGER_RTT.o
  0x08000F9B  reset_handler                              2  Code  Gb  STM32L0xx_Startup.o
  0x08000F9B  Reset_Handler                              2  Code  Gb  STM32L0xx_Startup.o
  0x08000FA3  fwrite                             52      2  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000FD7  __SEGGER_RTL_ascii_wctomb          16      2  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000FE7  __SEGGER_RTL_ascii_toupper
                                                 12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000FF3  __SEGGER_RTL_ascii_tolower
                                                 12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000FFF  __SEGGER_RTL_ascii_towupper
                                                 12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x0800100B  __SEGGER_RTL_ascii_towlower
                                                 12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08001017  __SEGGER_RTL_stream_write          16      2  Code  Lc  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08001027  __SEGGER_RTL_X_file_bufsize
                                                  4      2  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x08001161  __SEGGER_init_ctors                26      4  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  0x080011CD  __SEGGER_init_zero                 18      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  0x080011DF  __SEGGER_init_copy                 20      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)

Function symbols by descending size:

  Symbol name                      Size  Align  Type  Bd  Object File
  -------------------------  ----------  -----  ----  --  -----------
  __SEGGER_RTL_vfprintf             928      4  Code  Gb  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_vfprintf_int_nwp
                                    928      4  Code  Gb  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
  SystemCoreClockUpdate             364      4  Code  Gb  system_stm32l0xx.o
  main                              220      4  Code  Gb  main.o
  _WriteBlocking                    180      2  Code  Lc  SEGGER_RTT.o
  SEGGER_RTT_WriteNoLock            172      4  Code  Gb  SEGGER_RTT.o
  _DoInit                           160      4  Code  Lc  SEGGER_RTT.o
  __aeabi_uldivmod                  160      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_putc                 138      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  _WriteNoCheck                     136      2  Code  Lc  SEGGER_RTT.o
  vfprintf_l                        120      4  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  SEGGER_RTT_Write                   76      4  Code  Gb  SEGGER_RTT.o
  _GetAvailWriteSpace                60      2  Code  Lc  SEGGER_RTT.o
  delay_systicks                     60      4  Code  Gb  main.o
  __aeabi_uidiv                      56      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_X_file_stat           52      4  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  fwrite                             52      2  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_mbtowc          46      2  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __aeabi_lmul                       46      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  uart_tx                            44      4  Code  Gb  main.o
  printf                             40      4  Code  Wk  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  fputc                              34      2  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_isctype
                                     28      4  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_iswctype
                                     28      4  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  uart_rx                            28      4  Code  Gb  main.o
  __SEGGER_RTL_prin_flush            26      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_ctors                26      4  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  vfprintf                           26      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_current_locale
                                     24      4  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_copy                 20      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  __aeabi_memclr                     20      4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_zero                 18      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_wctomb          16      2  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stream_write          16      2  Code  Lc  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __aeabi_uidivmod                   16      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  putchar                            16      4  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  _start                             14      4  Code  Gb  SEGGER_THUMB_Startup.o
  memcpy                             14      4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_tolower
                                     12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_toupper
                                     12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_towlower
                                     12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_towupper
                                     12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_X_file_write          10      2  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __aeabi_idiv0                       6      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  SystemInit                          4      2  Code  Gb  system_stm32l0xx.o
  __SEGGER_RTL_X_file_bufsize
                                      4      2  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  exit                                2      4  Code  Gb  SEGGER_THUMB_Startup.o
  ADC1_COMP_IRQHandler                       2  Code  Wk  stm32l053xx_Vectors.o
  DMA1_Channel1_IRQHandler                   2  Code  Wk  stm32l053xx_Vectors.o
  DMA1_Channel2_3_IRQHandler
                                             2  Code  Wk  stm32l053xx_Vectors.o
  DMA1_Channel4_5_6_7_IRQHandler
                                             2  Code  Wk  stm32l053xx_Vectors.o
  Dummy_Handler                              2  Code  Wk  stm32l053xx_Vectors.o
  EXTI0_1_IRQHandler                         2  Code  Wk  stm32l053xx_Vectors.o
  EXTI2_3_IRQHandler                         2  Code  Wk  stm32l053xx_Vectors.o
  EXTI4_15_IRQHandler                        2  Code  Wk  stm32l053xx_Vectors.o
  FLASH_IRQHandler                           2  Code  Wk  stm32l053xx_Vectors.o
  HardFault_Handler                          4  Code  Wk  STM32L0xx_Startup.o
  I2C1_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  I2C2_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  LCD_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  LPTIM1_IRQHandler                          2  Code  Wk  stm32l053xx_Vectors.o
  NMI_Handler                                2  Code  Wk  stm32l053xx_Vectors.o
  PVD_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  PendSV_Handler                             2  Code  Wk  stm32l053xx_Vectors.o
  RCC_CRS_IRQHandler                         2  Code  Wk  stm32l053xx_Vectors.o
  RNG_LPUART1_IRQHandler                     2  Code  Wk  stm32l053xx_Vectors.o
  RTC_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  Reset_Handler                              2  Code  Gb  STM32L0xx_Startup.o
  SPI1_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  SPI2_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  SVC_Handler                                2  Code  Wk  stm32l053xx_Vectors.o
  SysTick_Handler                            2  Code  Wk  stm32l053xx_Vectors.o
  TIM21_IRQHandler                           2  Code  Wk  stm32l053xx_Vectors.o
  TIM22_IRQHandler                           2  Code  Wk  stm32l053xx_Vectors.o
  TIM2_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  TIM6_DAC_IRQHandler                        2  Code  Wk  stm32l053xx_Vectors.o
  TSC_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  USART1_IRQHandler                          2  Code  Wk  stm32l053xx_Vectors.o
  USART2_IRQHandler                          2  Code  Wk  stm32l053xx_Vectors.o
  USB_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  WWDG_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  __SEGGER_init_done                         4  Code  Gb  SEGGER_THUMB_Startup.o
  __aeabi_memclr4                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memclr8                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memcpy                             4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memcpy4                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memcpy8                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memset                             4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memset4                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memset8                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __startup_complete                         4  Code  Gb  SEGGER_THUMB_Startup.o
  memset                                     4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  reset_handler                              2  Code  Gb  STM32L0xx_Startup.o

Read-write data symbols by name:

  Symbol name                   Address        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  SystemCoreClock            0x200004E8           4      4  Init  Gb  system_stm32l0xx.o
  _SEGGER_RTT                0x20000400         168      4  Zero  Gb  SEGGER_RTT.o
  __RAL_global_locale        0x200004C8          20      4  Init  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_global_locale
                             0x200004C8          20      4  Init  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_locale_ptr    0x200004C4           4      4  Zero  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stderr_file   0x200004C0           4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stdin_file    0x200004BC           4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stdout_file   0x200004B8           4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  _acDownBuffer              0x200004A8          16      4  Zero  Lc  SEGGER_RTT.o
  _acUpBuffer                0x20000000       1 024      4  Zero  Lc  SEGGER_RTT.o
  stderr                     0x200004E4           4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  stdin                      0x200004E0           4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  stdout                     0x200004DC           4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)

Read-write data symbols by address:

     Address  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x20000000  _acUpBuffer                     1 024      4  Zero  Lc  SEGGER_RTT.o
  0x20000400  _SEGGER_RTT                       168      4  Zero  Gb  SEGGER_RTT.o
  0x200004A8  _acDownBuffer                      16      4  Zero  Lc  SEGGER_RTT.o
  0x200004B8  __SEGGER_RTL_stdout_file            4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004BC  __SEGGER_RTL_stdin_file             4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004C0  __SEGGER_RTL_stderr_file            4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004C4  __SEGGER_RTL_locale_ptr             4      4  Zero  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x200004C8  __SEGGER_RTL_global_locale
                                                 20      4  Init  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x200004C8  __RAL_global_locale                20      4  Init  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x200004DC  stdout                              4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004E0  stdin                               4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004E4  stderr                              4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004E8  SystemCoreClock                     4      4  Init  Gb  system_stm32l0xx.o

Read-write data symbols by descending size:

  Symbol name                      Size  Align  Type  Bd  Object File
  -------------------------  ----------  -----  ----  --  -----------
  _acUpBuffer                     1 024      4  Zero  Lc  SEGGER_RTT.o
  _SEGGER_RTT                       168      4  Zero  Gb  SEGGER_RTT.o
  __RAL_global_locale                20      4  Init  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_global_locale
                                     20      4  Init  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  _acDownBuffer                      16      4  Zero  Lc  SEGGER_RTT.o
  SystemCoreClock                     4      4  Init  Gb  system_stm32l0xx.o
  __SEGGER_RTL_locale_ptr             4      4  Zero  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stderr_file            4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stdin_file             4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stdout_file            4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  stderr                              4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  stdin                               4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  stdout                              4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)

Read-only data symbols by name:

  Symbol name                   Address        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  AHBPrescTable              0x080000C0          16      4  Cnst  Gb  system_stm32l0xx.o
  PLLMulTable                0x08000C14           9      4  Cnst  Gb  system_stm32l0xx.o
  __SEGGER_RTL_ascii_ctype_map
                             0x080010C0         128         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_ctype_mask
                             0x080010AC          13         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale      0x080005D8          12      4  Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_abbrev_day_names
                             0x08000CA9          29         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_abbrev_month_names
                             0x08001068          49         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_am_pm_indicator
                             0x08000C7D           7         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_data
                             0x08000604          88      4  Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_date_format
                             0x0800109A           9         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_date_time_format
                             0x08000C95          15         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_day_names
                             0x0800102E          58         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_month_names
                             0x08000C1D          87         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_time_format
                             0x080010A3           9         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_codeset_ascii
                             0x080005E4          32      4  Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_data_empty_string
                             0x08001099           1         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_data_utf8_period
                             0x0800102C           2         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_hex_lc        0x08001150          16         Cnst  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_hex_uc        0x08001140          16         Cnst  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_data__       0x080011A8        [36]      4  Cnst  Lc  [ Linker created ]
  __SEGGER_init_table__      0x08001184        [36]      4  Cnst  Lc  [ Linker created ]
  _aInitStr.0                0x08000C84          17      4  Cnst  Lc  SEGGER_RTT.o

Read-only data symbols by address:

     Address  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x080000C0  AHBPrescTable                      16      4  Cnst  Gb  system_stm32l0xx.o
  0x080005D8  __SEGGER_RTL_c_locale              12      4  Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x080005E4  __SEGGER_RTL_codeset_ascii
                                                 32      4  Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000604  __SEGGER_RTL_c_locale_data
                                                 88      4  Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000C14  PLLMulTable                         9      4  Cnst  Gb  system_stm32l0xx.o
  0x08000C1D  __SEGGER_RTL_c_locale_month_names
                                                 87         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000C7D  __SEGGER_RTL_c_locale_am_pm_indicator
                                                  7         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000C84  _aInitStr.0                        17      4  Cnst  Lc  SEGGER_RTT.o
  0x08000C95  __SEGGER_RTL_c_locale_date_time_format
                                                 15         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000CA9  __SEGGER_RTL_c_locale_abbrev_day_names
                                                 29         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x0800102C  __SEGGER_RTL_data_utf8_period
                                                  2         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x0800102E  __SEGGER_RTL_c_locale_day_names
                                                 58         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08001068  __SEGGER_RTL_c_locale_abbrev_month_names
                                                 49         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08001099  __SEGGER_RTL_data_empty_string
                                                  1         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x0800109A  __SEGGER_RTL_c_locale_date_format
                                                  9         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x080010A3  __SEGGER_RTL_c_locale_time_format
                                                  9         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x080010AC  __SEGGER_RTL_ascii_ctype_mask
                                                 13         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x080010C0  __SEGGER_RTL_ascii_ctype_map
                                                128         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08001140  __SEGGER_RTL_hex_uc                16         Cnst  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08001150  __SEGGER_RTL_hex_lc                16         Cnst  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08001184  __SEGGER_init_table__            [36]      4  Cnst  Lc  [ Linker created ]
  0x080011A8  __SEGGER_init_data__             [36]      4  Cnst  Lc  [ Linker created ]

Untyped symbols by name:

  Symbol name                     Value        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  __FLASH1_segment_end__     0x08010000                     ----  Gb  [ Linker created ]
  __FLASH1_segment_size__    0x00010000                     ----  Gb  [ Linker created ]
  __FLASH1_segment_start__   0x08000000                     ----  Gb  [ Linker created ]
  __FLASH1_segment_used_end__
                             0x080011F2                     ----  Gb  [ Linker created ]
  __FLASH1_segment_used_size__
                             0x000011F2                     ----  Gb  [ Linker created ]
  __FLASH1_segment_used_start__
                             0x08000000                     ----  Gb  [ Linker created ]
  __FLASH_segment_end__      0x08010000                     ----  Gb  [ Linker created ]
  __FLASH_segment_size__     0x00010000                     ----  Gb  [ Linker created ]
  __FLASH_segment_start__    0x08000000                     ----  Gb  [ Linker created ]
  __FLASH_segment_used_end__
                             0x080011F2                     ----  Gb  [ Linker created ]
  __FLASH_segment_used_size__
                             0x000011F2                     ----  Gb  [ Linker created ]
  __FLASH_segment_used_start__
                             0x08000000                     ----  Gb  [ Linker created ]
  __HEAPSIZE__               0x00000400                     ----  Gb  [ Linker created ]
  __RAM1_segment_end__       0x20002000                     ----  Gb  [ Linker created ]
  __RAM1_segment_size__      0x00002000                     ----  Gb  [ Linker created ]
  __RAM1_segment_start__     0x20000000                     ----  Gb  [ Linker created ]
  __RAM1_segment_used_end__  0x20002000                     ----  Gb  [ Linker created ]
  __RAM1_segment_used_size__
                             0x00002000                     ----  Gb  [ Linker created ]
  __RAM1_segment_used_start__
                             0x20000000                     ----  Gb  [ Linker created ]
  __RAM_segment_end__        0x20002000                     ----  Gb  [ Linker created ]
  __RAM_segment_size__       0x00002000                     ----  Gb  [ Linker created ]
  __RAM_segment_start__      0x20000000                     ----  Gb  [ Linker created ]
  __RAM_segment_used_end__   0x20002000                     ----  Gb  [ Linker created ]
  __RAM_segment_used_size__  0x00002000                     ----  Gb  [ Linker created ]
  __RAM_segment_used_start__
                             0x20000000                     ----  Gb  [ Linker created ]
  __STACKSIZE_PROCESS__      0x00000000                     ----  Gb  [ Linker created ]
  __STACKSIZE__              0x00000200                     ----  Gb  [ Linker created ]
  __ctors_end__              0x080010C0                     ----  Gb  [ Linker created ]
  __ctors_start__            0x080010BC                     ----  Gb  [ Linker created ]
  __stack_end__              0x20002000                     ----  Gb  [ Linker created ]
  __thread_pointer$          0x00000000                     ----  Gb  [ Linker created ]
  _vectors                   0x08000000       [192]    256  Code  Gb  stm32l053xx_Vectors.o
  _vectors_end               0x080000C0                256  Code  Lc  stm32l053xx_Vectors.o

Untyped symbols by address:

       Value  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x00000000  __thread_pointer$                             ----  Gb  [ Linker created ]
  0x00000000  __STACKSIZE_PROCESS__                         ----  Gb  [ Linker created ]
  0x00000200  __STACKSIZE__                                 ----  Gb  [ Linker created ]
  0x00000400  __HEAPSIZE__                                  ----  Gb  [ Linker created ]
  0x000011F2  __FLASH_segment_used_size__
                                                            ----  Gb  [ Linker created ]
  0x000011F2  __FLASH1_segment_used_size__
                                                            ----  Gb  [ Linker created ]
  0x00002000  __RAM_segment_used_size__                     ----  Gb  [ Linker created ]
  0x00002000  __RAM_segment_size__                          ----  Gb  [ Linker created ]
  0x00002000  __RAM1_segment_used_size__
                                                            ----  Gb  [ Linker created ]
  0x00002000  __RAM1_segment_size__                         ----  Gb  [ Linker created ]
  0x00010000  __FLASH_segment_size__                        ----  Gb  [ Linker created ]
  0x00010000  __FLASH1_segment_size__                       ----  Gb  [ Linker created ]
  0x08000000  _vectors                        [192]    256  Code  Gb  stm32l053xx_Vectors.o
  0x08000000  __FLASH_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x08000000  __FLASH_segment_start__                       ----  Gb  [ Linker created ]
  0x08000000  __FLASH1_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x08000000  __FLASH1_segment_start__                      ----  Gb  [ Linker created ]
  0x080000C0  _vectors_end                             256  Code  Lc  stm32l053xx_Vectors.o
  0x080010BC  __ctors_start__                               ----  Gb  [ Linker created ]
  0x080010C0  __ctors_end__                                 ----  Gb  [ Linker created ]
  0x080011F2  __FLASH_segment_used_end__
                                                            ----  Gb  [ Linker created ]
  0x080011F2  __FLASH1_segment_used_end__
                                                            ----  Gb  [ Linker created ]
  0x08010000  __FLASH_segment_end__                         ----  Gb  [ Linker created ]
  0x08010000  __FLASH1_segment_end__                        ----  Gb  [ Linker created ]
  0x20000000  __RAM_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x20000000  __RAM_segment_start__                         ----  Gb  [ Linker created ]
  0x20000000  __RAM1_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x20000000  __RAM1_segment_start__                        ----  Gb  [ Linker created ]
  0x20002000  __stack_end__                                 ----  Gb  [ Linker created ]
  0x20002000  __RAM_segment_used_end__                      ----  Gb  [ Linker created ]
  0x20002000  __RAM_segment_end__                           ----  Gb  [ Linker created ]
  0x20002000  __RAM1_segment_used_end__                     ----  Gb  [ Linker created ]
  0x20002000  __RAM1_segment_end__                          ----  Gb  [ Linker created ]


***********************************************************************************************
***                                                                                         ***
***                                      LINK SUMMARY                                       ***
***                                                                                         ***
***********************************************************************************************

Memory breakdown:

    3 886 bytes read-only  code    + 
      701 bytes read-only  data    =   4 587 bytes read-only (total)
    1 772 bytes read-write data

Region summary:

  Name        Range                     Size                 Used               Unused       Alignment Loss
  ----------  -----------------  -----------  -------------------  -------------------  -------------------
  FLASH       08000000-0800ffff       65 536        4 591   7.01%       60 945  92.99%            0   0.00%
  RAM         20000000-20001fff        8 192        1 772  21.63%        6 420  78.37%            0   0.00%

Link complete: 0 errors, 0 warnings, 0 remarks
