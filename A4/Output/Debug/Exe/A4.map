***********************************************************************************************
***                                                                                         ***
***                                    LINK INFORMATION                                     ***
***                                                                                         ***
***********************************************************************************************

Linker version:

  SEGGER ARM Linker 4.38.5 compiled Jun 15 2023 00:38:16
  Copyright (c) 2017-2022 SEGGER Microcontroller GmbH    www.segger.com


***********************************************************************************************
***                                                                                         ***
***                                     MODULE SUMMARY                                      ***
***                                                                                         ***
***********************************************************************************************

Memory use by input file:

  Object File                                       RX Code     RO Data     RW Data     ZI Data
  ---------------------------------------------  ----------  ----------  ----------  ----------
  main.o                                                 16           5                        
  SEGGER_RTT.o                                          784          26                   1 208
  SEGGER_THUMB_Startup.o                                 20                                    
  stm32l010x6_Vectors.o                                 230                                    
  STM32L0xx_Startup.o                                    56                                    
  system_stm32l0xx.o                                    368          25           4            
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (6 objects)                                1 474          56           4       1 208
  ---------------------------------------------  ----------  ----------  ----------  ----------
  libc_v6m_t_le_eabi_balanced.a                       1 824         573          20           4
  prinops_rtt_v6m_t_le_eabi_balanced.a                   66                      12          12
  SEGGER_crtinit_v6m_t_le_eabi_balanced.a                74                                    
  strops_v6m_t_le_eabi_balanced.a                        36                                    
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (4 archives)                               2 000         573          32          16
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Linker created (shared data, fills, blocks):                       72                     512
  =============================================  ==========  ==========  ==========  ==========
  Total:                                              3 474         701          36       1 736
  =============================================  ==========  ==========  ==========  ==========

Memory use by archive member:

  Archive member                                    RX Code     RO Data     RW Data     ZI Data
  ---------------------------------------------  ----------  ----------  ----------  ----------
  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
                                                        928                                    
  fileops.o (libc_v6m_t_le_eabi_balanced.a)              52                                    
  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
                                                        288                                    
  mbops.o (libc_v6m_t_le_eabi_balanced.a)               190         541          20           4
  prinops.o (libc_v6m_t_le_eabi_balanced.a)             366          32                        
  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
                                                         66                      12          12
  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
                                                         74                                    
  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
                                                         36                                    
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (8 members from 4 archives)                2 000         573          32          16
  Objects (6 files)                                   1 474          56           4       1 208
  Linker created (shared data, fills, blocks):                       72                     512
  =============================================  ==========  ==========  ==========  ==========
  Total:                                              3 474         701          36       1 736
  =============================================  ==========  ==========  ==========  ==========

Memory use by linker:

  Description                                       RX Code     RO Data     RW Data     ZI Data
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Initialization table                                               72                        
  Memory for block 'stack'                                                                  512
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (linker created):                                         72                     512
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Objects (6 files)                                   1 474          56           4       1 208
  Archives (4 files)                                  2 000         573          32          16
  =============================================  ==========  ==========  ==========  ==========
  Total:                                              3 474         701          36       1 736
  =============================================  ==========  ==========  ==========  ==========


***********************************************************************************************
***                                                                                         ***
***                                     SECTION DETAIL                                      ***
***                                                                                         ***
***********************************************************************************************

Sections by address:

  Range              Symbol or [section] Name         Size  Al  Init  Ac  Object File
  -----------------  -------------------------  ----------  --  ----  --  -----------
  08000000-080000b7  _vectors                          184  256
                                                                Code  RX  stm32l010x6_Vectors.o
  080000b8-080000c7  AHBPrescTable                      16   4  Cnst  RO  system_stm32l0xx.o
  080000c8-08000233  SystemCoreClockUpdate             364   4  Code  RX  system_stm32l0xx.o
  08000234-080002d3  _DoInit                           160   4  Code  RX  SEGGER_RTT.o
  080002d4-0800037f  SEGGER_RTT_WriteNoLock            172   4  Code  RX  SEGGER_RTT.o
  08000380-080003cb  SEGGER_RTT_Write                   76   4  Code  RX  SEGGER_RTT.o
  080003cc-080003db  main                               16   4  Code  RX  main.o
  080003dc-080003ef  _start                             20   4  Code  RX  SEGGER_THUMB_Startup.o
  080003f0-0800041f  HardFault_Handler                  48   4  Code  RX  STM32L0xx_Startup.o
  08000420-08000437  __SEGGER_RTL_current_locale
                                                        24   4  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000438-08000453  __SEGGER_RTL_ascii_isctype
                                                        28   4  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000454-0800046f  __SEGGER_RTL_ascii_iswctype
                                                        28   4  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000470-0800047b  __SEGGER_RTL_c_locale              12   4  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0800047c-0800049b  __SEGGER_RTL_codeset_ascii
                                                        32   4  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0800049c-080004f3  __SEGGER_RTL_c_locale_data
                                                        88   4  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  080004f4-08000523  __aeabi_lmul                       48   4  Code  RX  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  08000524-0800055b  __aeabi_uidiv                      56   4  Code  RX  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  0800055c-0800056b  __aeabi_uidivmod                   16   4  Code  RX  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  0800056c-0800060b  __aeabi_uldivmod                  160   4  Code  RX  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  0800060c-08000613  __aeabi_idiv0                       8   4  Code  RX  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  08000614-0800068b  vfprintf_l                        120   4  Code  RX  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0800068c-080006b3  printf                             40   4  Code  RX  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  080006b4-08000a53  __SEGGER_RTL_vfprintf_int_nwp
                                                       928   4  Code  RX  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
  08000a54-08000a87  __SEGGER_RTL_X_file_stat           52   4  Code  RX  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  08000a88-08000a97  memcpy                             16   4  Code  RX  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  08000a98-08000aab  __aeabi_memclr                     20   4  Code  RX  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  08000aac-08000ab4  PLLMulTable                         9   4  Cnst  RO  system_stm32l0xx.o
  08000ab5-08000b0b  __SEGGER_RTL_c_locale_month_names
                                                        87   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000b0c-08000b14  [.rodata]                           9   4  Cnst  RO  SEGGER_RTT.o
  08000b15-08000b1b  __SEGGER_RTL_c_locale_am_pm_indicator
                                                         7   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000b1c-08000b2c  _aInitStr.0                        17   4  Cnst  RO  SEGGER_RTT.o
  08000b2d-08000b3b  __SEGGER_RTL_c_locale_date_time_format
                                                        15   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000b3c-08000b40  [.rodata]                           5   4  Cnst  RO  main.o
  08000b41-08000b5d  __SEGGER_RTL_c_locale_abbrev_day_names
                                                        29   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000b5e-08000b5f  NMI_Handler                         2   2  Code  RX  stm32l010x6_Vectors.o
  08000b60-08000b61  SVC_Handler                         2   2  Code  RX  stm32l010x6_Vectors.o
  08000b62-08000b63  PendSV_Handler                      2   2  Code  RX  stm32l010x6_Vectors.o
  08000b64-08000b65  SysTick_Handler                     2   2  Code  RX  stm32l010x6_Vectors.o
  08000b66-08000b67  WWDG_IRQHandler                     2   2  Code  RX  stm32l010x6_Vectors.o
  08000b68-08000b69  RTC_IRQHandler                      2   2  Code  RX  stm32l010x6_Vectors.o
  08000b6a-08000b6b  FLASH_IRQHandler                    2   2  Code  RX  stm32l010x6_Vectors.o
  08000b6c-08000b6d  RCC_IRQHandler                      2   2  Code  RX  stm32l010x6_Vectors.o
  08000b6e-08000b6f  EXTI0_1_IRQHandler                  2   2  Code  RX  stm32l010x6_Vectors.o
  08000b70-08000b71  EXTI2_3_IRQHandler                  2   2  Code  RX  stm32l010x6_Vectors.o
  08000b72-08000b73  EXTI4_15_IRQHandler                 2   2  Code  RX  stm32l010x6_Vectors.o
  08000b74-08000b75  DMA1_Channel1_IRQHandler            2   2  Code  RX  stm32l010x6_Vectors.o
  08000b76-08000b77  DMA1_Channel2_3_IRQHandler
                                                         2   2  Code  RX  stm32l010x6_Vectors.o
  08000b78-08000b79  DMA1_Channel4_5_6_7_IRQHandler
                                                         2   2  Code  RX  stm32l010x6_Vectors.o
  08000b7a-08000b7b  ADC1_IRQHandler                     2   2  Code  RX  stm32l010x6_Vectors.o
  08000b7c-08000b7d  LPTIM1_IRQHandler                   2   2  Code  RX  stm32l010x6_Vectors.o
  08000b7e-08000b7f  TIM2_IRQHandler                     2   2  Code  RX  stm32l010x6_Vectors.o
  08000b80-08000b81  TIM21_IRQHandler                    2   2  Code  RX  stm32l010x6_Vectors.o
  08000b82-08000b83  I2C1_IRQHandler                     2   2  Code  RX  stm32l010x6_Vectors.o
  08000b84-08000b85  SPI1_IRQHandler                     2   2  Code  RX  stm32l010x6_Vectors.o
  08000b86-08000b87  USART2_IRQHandler                   2   2  Code  RX  stm32l010x6_Vectors.o
  08000b88-08000b89  LPUART1_IRQHandler                  2   2  Code  RX  stm32l010x6_Vectors.o
  08000b8a-08000b8b  Dummy_Handler                       2   2  Code  RX  stm32l010x6_Vectors.o
  08000b8c-08000bb9  __SEGGER_RTL_ascii_mbtowc          46   2  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000bba-08000c43  __SEGGER_RTL_putc                 138   2  Code  RX  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  08000c44-08000c5d  __SEGGER_RTL_prin_flush            26   2  Code  RX  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  08000c5e-08000c77  vfprintf                           26   2  Code  RX  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  08000c78-08000c81  __SEGGER_RTL_X_file_write          10   2  Code  RX  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  08000c82-08000c85  SystemInit                          4   2  Code  RX  system_stm32l0xx.o
  08000c86-08000d39  _WriteBlocking                    180   2  Code  RX  SEGGER_RTT.o
  08000d3a-08000dc1  _WriteNoCheck                     136   2  Code  RX  SEGGER_RTT.o
  08000dc2-08000dfd  _GetAvailWriteSpace                60   2  Code  RX  SEGGER_RTT.o
  08000dfe-08000e05  reset_handler                       8   2  Code  RX  STM32L0xx_Startup.o
  08000e06-08000e39  fwrite                             52   2  Code  RX  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  08000e3a-08000e49  __SEGGER_RTL_ascii_wctomb          16   2  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000e4a-08000e55  __SEGGER_RTL_ascii_toupper
                                                        12   2  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000e56-08000e61  __SEGGER_RTL_ascii_tolower
                                                        12   2  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000e62-08000e6d  __SEGGER_RTL_ascii_towupper
                                                        12   2  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000e6e-08000e79  __SEGGER_RTL_ascii_towlower
                                                        12   2  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000e7a-08000e89  __SEGGER_RTL_stream_write          16   2  Code  RX  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  08000e8a-08000e8d  __SEGGER_RTL_X_file_bufsize
                                                         4   2  Code  RX  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  08000e8e-08000e8f  [.rodata.libc..L.str]               2   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000e90-08000e91  __SEGGER_RTL_data_utf8_period
                                                         2   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000e92-08000ecb  __SEGGER_RTL_c_locale_day_names
                                                        58   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000ecc-08000efc  __SEGGER_RTL_c_locale_abbrev_month_names
                                                        49   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000efd-08000efd  __SEGGER_RTL_data_empty_string
                                                         1   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000efe-08000f06  __SEGGER_RTL_c_locale_date_format
                                                         9   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000f07-08000f0f  __SEGGER_RTL_c_locale_time_format
                                                         9   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000f10-08000f1c  __SEGGER_RTL_ascii_ctype_mask
                                                        13   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000f1d-08000f1f  ( UNUSED .=.+3 )                    3   -  ----  -   -
  08000f20-08000f23  [.init_array]                       4   4  ----  --  STM32L0xx_Startup.o
  08000f24-08000fa3  __SEGGER_RTL_ascii_ctype_map
                                                       128   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000fa4-08000fb3  __SEGGER_RTL_hex_uc                16   1  Cnst  RO  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  08000fb4-08000fc3  __SEGGER_RTL_hex_lc                16   1  Cnst  RO  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  08000fc4-08000fe7  __SEGGER_init_ctors                36   4  Code  RX  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  08000fe8-0800100b  __SEGGER_init_table__              36   4  Cnst  RO  [ Linker created ]
  0800100c-0800102f  __SEGGER_init_data__               36   4  Cnst  RO  [ Linker created ]
  08001030-08001041  __SEGGER_init_zero                 18   2  Code  RX  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  08001042-08001055  __SEGGER_init_copy                 20   2  Code  RX  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  08001056-1fffffff  ( UNUSED .=.+402649002 )   402 649 002
                                                             -  ----  -   -
  20000000-200003ff  _acUpBuffer                     1 024   4  Zero  ZI  SEGGER_RTT.o
  20000400-200004a7  _SEGGER_RTT                       168   4  Zero  ZI  SEGGER_RTT.o
  200004a8-200004b7  _acDownBuffer                      16   4  Zero  ZI  SEGGER_RTT.o
  200004b8-200004bb  __SEGGER_RTL_stdout_file            4   4  Zero  ZI  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004bc-200004bf  __SEGGER_RTL_stdin_file             4   4  Zero  ZI  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004c0-200004c3  __SEGGER_RTL_stderr_file            4   4  Zero  ZI  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004c4-200004c7  __SEGGER_RTL_locale_ptr             4   4  Zero  ZI  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  200004c8-200004db  __SEGGER_RTL_global_locale
                                                        20   4  Init  RW  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  200004dc-200004df  stdout                              4   4  Init  RW  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004e0-200004e3  stdin                               4   4  Init  RW  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004e4-200004e7  stderr                              4   4  Init  RW  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004e8-200004eb  SystemCoreClock                     4   4  Init  RW  system_stm32l0xx.o
  200004ec-20001dff  ( UNUSED .=.+6420 )             6 420   -  ----  -   -
  20001e00-20001fff  [.bss.block.stack]                512   8  None  ZI  [ Linker created ]


***********************************************************************************************
***                                                                                         ***
***                                       SYMBOL LIST                                       ***
***                                                                                         ***
***********************************************************************************************

Function symbols by name:

  Symbol name                   Address        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  ADC1_IRQHandler            0x08000B7B                  2  Code  Wk  stm32l010x6_Vectors.o
  DMA1_Channel1_IRQHandler   0x08000B75                  2  Code  Wk  stm32l010x6_Vectors.o
  DMA1_Channel2_3_IRQHandler
                             0x08000B77                  2  Code  Wk  stm32l010x6_Vectors.o
  DMA1_Channel4_5_6_7_IRQHandler
                             0x08000B79                  2  Code  Wk  stm32l010x6_Vectors.o
  Dummy_Handler              0x08000B8B                  2  Code  Wk  stm32l010x6_Vectors.o
  EXTI0_1_IRQHandler         0x08000B6F                  2  Code  Wk  stm32l010x6_Vectors.o
  EXTI2_3_IRQHandler         0x08000B71                  2  Code  Wk  stm32l010x6_Vectors.o
  EXTI4_15_IRQHandler        0x08000B73                  2  Code  Wk  stm32l010x6_Vectors.o
  FLASH_IRQHandler           0x08000B6B                  2  Code  Wk  stm32l010x6_Vectors.o
  HardFault_Handler          0x080003F1                  4  Code  Wk  STM32L0xx_Startup.o
  I2C1_IRQHandler            0x08000B83                  2  Code  Wk  stm32l010x6_Vectors.o
  LPTIM1_IRQHandler          0x08000B7D                  2  Code  Wk  stm32l010x6_Vectors.o
  LPUART1_IRQHandler         0x08000B89                  2  Code  Wk  stm32l010x6_Vectors.o
  NMI_Handler                0x08000B5F                  2  Code  Wk  stm32l010x6_Vectors.o
  PendSV_Handler             0x08000B63                  2  Code  Wk  stm32l010x6_Vectors.o
  RCC_IRQHandler             0x08000B6D                  2  Code  Wk  stm32l010x6_Vectors.o
  RTC_IRQHandler             0x08000B69                  2  Code  Wk  stm32l010x6_Vectors.o
  Reset_Handler              0x08000DFF                  2  Code  Gb  STM32L0xx_Startup.o
  SEGGER_RTT_Write           0x08000381          76      4  Code  Gb  SEGGER_RTT.o
  SEGGER_RTT_WriteNoLock     0x080002D5         172      4  Code  Gb  SEGGER_RTT.o
  SPI1_IRQHandler            0x08000B85                  2  Code  Wk  stm32l010x6_Vectors.o
  SVC_Handler                0x08000B61                  2  Code  Wk  stm32l010x6_Vectors.o
  SysTick_Handler            0x08000B65                  2  Code  Wk  stm32l010x6_Vectors.o
  SystemCoreClockUpdate      0x080000C9         364      4  Code  Gb  system_stm32l0xx.o
  SystemInit                 0x08000C83           4      2  Code  Gb  system_stm32l0xx.o
  TIM21_IRQHandler           0x08000B81                  2  Code  Wk  stm32l010x6_Vectors.o
  TIM2_IRQHandler            0x08000B7F                  2  Code  Wk  stm32l010x6_Vectors.o
  USART2_IRQHandler          0x08000B87                  2  Code  Wk  stm32l010x6_Vectors.o
  WWDG_IRQHandler            0x08000B67                  2  Code  Wk  stm32l010x6_Vectors.o
  _DoInit                    0x08000235         160      4  Code  Lc  SEGGER_RTT.o
  _GetAvailWriteSpace        0x08000DC3          60      2  Code  Lc  SEGGER_RTT.o
  _WriteBlocking             0x08000C87         180      2  Code  Lc  SEGGER_RTT.o
  _WriteNoCheck              0x08000D3B         136      2  Code  Lc  SEGGER_RTT.o
  __SEGGER_RTL_X_file_bufsize
                             0x08000E8B           4      2  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_X_file_stat   0x08000A55          52      4  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_X_file_write  0x08000C79          10      2  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_isctype
                             0x08000439          28      4  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_iswctype
                             0x08000455          28      4  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_mbtowc  0x08000B8D          46      2  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_tolower
                             0x08000E57          12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_toupper
                             0x08000E4B          12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_towlower
                             0x08000E6F          12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_towupper
                             0x08000E63          12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_wctomb  0x08000E3B          16      2  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_current_locale
                             0x08000421          24      4  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_prin_flush    0x08000C45          26      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_putc          0x08000BBB         138      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stream_write  0x08000E7B          16      2  Code  Lc  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_vfprintf      0x080006B5         928      4  Code  Gb  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_vfprintf_int_nwp
                             0x080006B5         928      4  Code  Gb  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_copy         0x08001043          20      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_ctors        0x08000FC5          26      4  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_done         0x080003E7                  4  Code  Gb  SEGGER_THUMB_Startup.o
  __SEGGER_init_zero         0x08001031          18      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  __aeabi_idiv0              0x0800060D           6      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __aeabi_lmul               0x080004F5          46      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __aeabi_memclr             0x08000A99          20      4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memclr4            0x08000A99                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memclr8            0x08000A99                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memcpy             0x08000A89                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memcpy4            0x08000A89                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memcpy8            0x08000A89                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memset             0x08000A9B                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memset4            0x08000A9B                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memset8            0x08000A9B                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_uidiv              0x08000525          56      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __aeabi_uidivmod           0x0800055D          16      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __aeabi_uldivmod           0x0800056D         160      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __startup_complete         0x080003E7                  4  Code  Gb  SEGGER_THUMB_Startup.o
  _start                     0x080003DD          14      4  Code  Gb  SEGGER_THUMB_Startup.o
  exit                       0x080003EB           2      4  Code  Gb  SEGGER_THUMB_Startup.o
  fwrite                     0x08000E07          52      2  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  main                       0x080003CD          16      4  Code  Gb  main.o
  memcpy                     0x08000A89          14      4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  memset                     0x08000AA1                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  printf                     0x0800068D          40      4  Code  Wk  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  reset_handler              0x08000DFF                  2  Code  Gb  STM32L0xx_Startup.o
  vfprintf                   0x08000C5F          26      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  vfprintf_l                 0x08000615         120      4  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)

Function symbols by address:

     Address  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x080000C9  SystemCoreClockUpdate             364      4  Code  Gb  system_stm32l0xx.o
  0x08000235  _DoInit                           160      4  Code  Lc  SEGGER_RTT.o
  0x080002D5  SEGGER_RTT_WriteNoLock            172      4  Code  Gb  SEGGER_RTT.o
  0x08000381  SEGGER_RTT_Write                   76      4  Code  Gb  SEGGER_RTT.o
  0x080003CD  main                               16      4  Code  Gb  main.o
  0x080003DD  _start                             14      4  Code  Gb  SEGGER_THUMB_Startup.o
  0x080003E7  __startup_complete                         4  Code  Gb  SEGGER_THUMB_Startup.o
  0x080003E7  __SEGGER_init_done                         4  Code  Gb  SEGGER_THUMB_Startup.o
  0x080003EB  exit                                2      4  Code  Gb  SEGGER_THUMB_Startup.o
  0x080003F1  HardFault_Handler                          4  Code  Wk  STM32L0xx_Startup.o
  0x08000421  __SEGGER_RTL_current_locale
                                                 24      4  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000439  __SEGGER_RTL_ascii_isctype
                                                 28      4  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000455  __SEGGER_RTL_ascii_iswctype
                                                 28      4  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x080004F5  __aeabi_lmul                       46      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000525  __aeabi_uidiv                      56      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  0x0800055D  __aeabi_uidivmod                   16      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  0x0800056D  __aeabi_uldivmod                  160      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  0x0800060D  __aeabi_idiv0                       6      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000615  vfprintf_l                        120      4  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x0800068D  printf                             40      4  Code  Wk  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x080006B5  __SEGGER_RTL_vfprintf_int_nwp
                                                928      4  Code  Gb  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
  0x080006B5  __SEGGER_RTL_vfprintf             928      4  Code  Gb  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000A55  __SEGGER_RTL_X_file_stat           52      4  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x08000A89  memcpy                             14      4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000A89  __aeabi_memcpy8                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000A89  __aeabi_memcpy4                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000A89  __aeabi_memcpy                             4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000A99  __aeabi_memclr8                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000A99  __aeabi_memclr4                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000A99  __aeabi_memclr                     20      4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000A9B  __aeabi_memset8                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000A9B  __aeabi_memset4                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000A9B  __aeabi_memset                             4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000AA1  memset                                     4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000B5F  NMI_Handler                                2  Code  Wk  stm32l010x6_Vectors.o
  0x08000B61  SVC_Handler                                2  Code  Wk  stm32l010x6_Vectors.o
  0x08000B63  PendSV_Handler                             2  Code  Wk  stm32l010x6_Vectors.o
  0x08000B65  SysTick_Handler                            2  Code  Wk  stm32l010x6_Vectors.o
  0x08000B67  WWDG_IRQHandler                            2  Code  Wk  stm32l010x6_Vectors.o
  0x08000B69  RTC_IRQHandler                             2  Code  Wk  stm32l010x6_Vectors.o
  0x08000B6B  FLASH_IRQHandler                           2  Code  Wk  stm32l010x6_Vectors.o
  0x08000B6D  RCC_IRQHandler                             2  Code  Wk  stm32l010x6_Vectors.o
  0x08000B6F  EXTI0_1_IRQHandler                         2  Code  Wk  stm32l010x6_Vectors.o
  0x08000B71  EXTI2_3_IRQHandler                         2  Code  Wk  stm32l010x6_Vectors.o
  0x08000B73  EXTI4_15_IRQHandler                        2  Code  Wk  stm32l010x6_Vectors.o
  0x08000B75  DMA1_Channel1_IRQHandler                   2  Code  Wk  stm32l010x6_Vectors.o
  0x08000B77  DMA1_Channel2_3_IRQHandler
                                                         2  Code  Wk  stm32l010x6_Vectors.o
  0x08000B79  DMA1_Channel4_5_6_7_IRQHandler
                                                         2  Code  Wk  stm32l010x6_Vectors.o
  0x08000B7B  ADC1_IRQHandler                            2  Code  Wk  stm32l010x6_Vectors.o
  0x08000B7D  LPTIM1_IRQHandler                          2  Code  Wk  stm32l010x6_Vectors.o
  0x08000B7F  TIM2_IRQHandler                            2  Code  Wk  stm32l010x6_Vectors.o
  0x08000B81  TIM21_IRQHandler                           2  Code  Wk  stm32l010x6_Vectors.o
  0x08000B83  I2C1_IRQHandler                            2  Code  Wk  stm32l010x6_Vectors.o
  0x08000B85  SPI1_IRQHandler                            2  Code  Wk  stm32l010x6_Vectors.o
  0x08000B87  USART2_IRQHandler                          2  Code  Wk  stm32l010x6_Vectors.o
  0x08000B89  LPUART1_IRQHandler                         2  Code  Wk  stm32l010x6_Vectors.o
  0x08000B8B  Dummy_Handler                              2  Code  Wk  stm32l010x6_Vectors.o
  0x08000B8D  __SEGGER_RTL_ascii_mbtowc          46      2  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000BBB  __SEGGER_RTL_putc                 138      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000C45  __SEGGER_RTL_prin_flush            26      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000C5F  vfprintf                           26      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000C79  __SEGGER_RTL_X_file_write          10      2  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x08000C83  SystemInit                          4      2  Code  Gb  system_stm32l0xx.o
  0x08000C87  _WriteBlocking                    180      2  Code  Lc  SEGGER_RTT.o
  0x08000D3B  _WriteNoCheck                     136      2  Code  Lc  SEGGER_RTT.o
  0x08000DC3  _GetAvailWriteSpace                60      2  Code  Lc  SEGGER_RTT.o
  0x08000DFF  reset_handler                              2  Code  Gb  STM32L0xx_Startup.o
  0x08000DFF  Reset_Handler                              2  Code  Gb  STM32L0xx_Startup.o
  0x08000E07  fwrite                             52      2  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000E3B  __SEGGER_RTL_ascii_wctomb          16      2  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000E4B  __SEGGER_RTL_ascii_toupper
                                                 12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000E57  __SEGGER_RTL_ascii_tolower
                                                 12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000E63  __SEGGER_RTL_ascii_towupper
                                                 12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000E6F  __SEGGER_RTL_ascii_towlower
                                                 12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000E7B  __SEGGER_RTL_stream_write          16      2  Code  Lc  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000E8B  __SEGGER_RTL_X_file_bufsize
                                                  4      2  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x08000FC5  __SEGGER_init_ctors                26      4  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  0x08001031  __SEGGER_init_zero                 18      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  0x08001043  __SEGGER_init_copy                 20      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)

Function symbols by descending size:

  Symbol name                      Size  Align  Type  Bd  Object File
  -------------------------  ----------  -----  ----  --  -----------
  __SEGGER_RTL_vfprintf             928      4  Code  Gb  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_vfprintf_int_nwp
                                    928      4  Code  Gb  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
  SystemCoreClockUpdate             364      4  Code  Gb  system_stm32l0xx.o
  _WriteBlocking                    180      2  Code  Lc  SEGGER_RTT.o
  SEGGER_RTT_WriteNoLock            172      4  Code  Gb  SEGGER_RTT.o
  _DoInit                           160      4  Code  Lc  SEGGER_RTT.o
  __aeabi_uldivmod                  160      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_putc                 138      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  _WriteNoCheck                     136      2  Code  Lc  SEGGER_RTT.o
  vfprintf_l                        120      4  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  SEGGER_RTT_Write                   76      4  Code  Gb  SEGGER_RTT.o
  _GetAvailWriteSpace                60      2  Code  Lc  SEGGER_RTT.o
  __aeabi_uidiv                      56      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_X_file_stat           52      4  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  fwrite                             52      2  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_mbtowc          46      2  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __aeabi_lmul                       46      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  printf                             40      4  Code  Wk  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_isctype
                                     28      4  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_iswctype
                                     28      4  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_prin_flush            26      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_ctors                26      4  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  vfprintf                           26      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_current_locale
                                     24      4  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_copy                 20      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  __aeabi_memclr                     20      4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_zero                 18      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_wctomb          16      2  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stream_write          16      2  Code  Lc  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __aeabi_uidivmod                   16      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  main                               16      4  Code  Gb  main.o
  _start                             14      4  Code  Gb  SEGGER_THUMB_Startup.o
  memcpy                             14      4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_tolower
                                     12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_toupper
                                     12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_towlower
                                     12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_towupper
                                     12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_X_file_write          10      2  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __aeabi_idiv0                       6      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  SystemInit                          4      2  Code  Gb  system_stm32l0xx.o
  __SEGGER_RTL_X_file_bufsize
                                      4      2  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  exit                                2      4  Code  Gb  SEGGER_THUMB_Startup.o
  ADC1_IRQHandler                            2  Code  Wk  stm32l010x6_Vectors.o
  DMA1_Channel1_IRQHandler                   2  Code  Wk  stm32l010x6_Vectors.o
  DMA1_Channel2_3_IRQHandler
                                             2  Code  Wk  stm32l010x6_Vectors.o
  DMA1_Channel4_5_6_7_IRQHandler
                                             2  Code  Wk  stm32l010x6_Vectors.o
  Dummy_Handler                              2  Code  Wk  stm32l010x6_Vectors.o
  EXTI0_1_IRQHandler                         2  Code  Wk  stm32l010x6_Vectors.o
  EXTI2_3_IRQHandler                         2  Code  Wk  stm32l010x6_Vectors.o
  EXTI4_15_IRQHandler                        2  Code  Wk  stm32l010x6_Vectors.o
  FLASH_IRQHandler                           2  Code  Wk  stm32l010x6_Vectors.o
  HardFault_Handler                          4  Code  Wk  STM32L0xx_Startup.o
  I2C1_IRQHandler                            2  Code  Wk  stm32l010x6_Vectors.o
  LPTIM1_IRQHandler                          2  Code  Wk  stm32l010x6_Vectors.o
  LPUART1_IRQHandler                         2  Code  Wk  stm32l010x6_Vectors.o
  NMI_Handler                                2  Code  Wk  stm32l010x6_Vectors.o
  PendSV_Handler                             2  Code  Wk  stm32l010x6_Vectors.o
  RCC_IRQHandler                             2  Code  Wk  stm32l010x6_Vectors.o
  RTC_IRQHandler                             2  Code  Wk  stm32l010x6_Vectors.o
  Reset_Handler                              2  Code  Gb  STM32L0xx_Startup.o
  SPI1_IRQHandler                            2  Code  Wk  stm32l010x6_Vectors.o
  SVC_Handler                                2  Code  Wk  stm32l010x6_Vectors.o
  SysTick_Handler                            2  Code  Wk  stm32l010x6_Vectors.o
  TIM21_IRQHandler                           2  Code  Wk  stm32l010x6_Vectors.o
  TIM2_IRQHandler                            2  Code  Wk  stm32l010x6_Vectors.o
  USART2_IRQHandler                          2  Code  Wk  stm32l010x6_Vectors.o
  WWDG_IRQHandler                            2  Code  Wk  stm32l010x6_Vectors.o
  __SEGGER_init_done                         4  Code  Gb  SEGGER_THUMB_Startup.o
  __aeabi_memclr4                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memclr8                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memcpy                             4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memcpy4                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memcpy8                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memset                             4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memset4                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memset8                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __startup_complete                         4  Code  Gb  SEGGER_THUMB_Startup.o
  memset                                     4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  reset_handler                              2  Code  Gb  STM32L0xx_Startup.o

Read-write data symbols by name:

  Symbol name                   Address        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  SystemCoreClock            0x200004E8           4      4  Init  Gb  system_stm32l0xx.o
  _SEGGER_RTT                0x20000400         168      4  Zero  Gb  SEGGER_RTT.o
  __RAL_global_locale        0x200004C8          20      4  Init  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_global_locale
                             0x200004C8          20      4  Init  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_locale_ptr    0x200004C4           4      4  Zero  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stderr_file   0x200004C0           4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stdin_file    0x200004BC           4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stdout_file   0x200004B8           4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  _acDownBuffer              0x200004A8          16      4  Zero  Lc  SEGGER_RTT.o
  _acUpBuffer                0x20000000       1 024      4  Zero  Lc  SEGGER_RTT.o
  stderr                     0x200004E4           4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  stdin                      0x200004E0           4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  stdout                     0x200004DC           4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)

Read-write data symbols by address:

     Address  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x20000000  _acUpBuffer                     1 024      4  Zero  Lc  SEGGER_RTT.o
  0x20000400  _SEGGER_RTT                       168      4  Zero  Gb  SEGGER_RTT.o
  0x200004A8  _acDownBuffer                      16      4  Zero  Lc  SEGGER_RTT.o
  0x200004B8  __SEGGER_RTL_stdout_file            4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004BC  __SEGGER_RTL_stdin_file             4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004C0  __SEGGER_RTL_stderr_file            4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004C4  __SEGGER_RTL_locale_ptr             4      4  Zero  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x200004C8  __SEGGER_RTL_global_locale
                                                 20      4  Init  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x200004C8  __RAL_global_locale                20      4  Init  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x200004DC  stdout                              4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004E0  stdin                               4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004E4  stderr                              4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004E8  SystemCoreClock                     4      4  Init  Gb  system_stm32l0xx.o

Read-write data symbols by descending size:

  Symbol name                      Size  Align  Type  Bd  Object File
  -------------------------  ----------  -----  ----  --  -----------
  _acUpBuffer                     1 024      4  Zero  Lc  SEGGER_RTT.o
  _SEGGER_RTT                       168      4  Zero  Gb  SEGGER_RTT.o
  __RAL_global_locale                20      4  Init  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_global_locale
                                     20      4  Init  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  _acDownBuffer                      16      4  Zero  Lc  SEGGER_RTT.o
  SystemCoreClock                     4      4  Init  Gb  system_stm32l0xx.o
  __SEGGER_RTL_locale_ptr             4      4  Zero  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stderr_file            4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stdin_file             4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stdout_file            4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  stderr                              4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  stdin                               4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  stdout                              4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)

Read-only data symbols by name:

  Symbol name                   Address        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  AHBPrescTable              0x080000B8          16      4  Cnst  Gb  system_stm32l0xx.o
  PLLMulTable                0x08000AAC           9      4  Cnst  Gb  system_stm32l0xx.o
  __SEGGER_RTL_ascii_ctype_map
                             0x08000F24         128         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_ctype_mask
                             0x08000F10          13         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale      0x08000470          12      4  Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_abbrev_day_names
                             0x08000B41          29         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_abbrev_month_names
                             0x08000ECC          49         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_am_pm_indicator
                             0x08000B15           7         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_data
                             0x0800049C          88      4  Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_date_format
                             0x08000EFE           9         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_date_time_format
                             0x08000B2D          15         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_day_names
                             0x08000E92          58         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_month_names
                             0x08000AB5          87         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_time_format
                             0x08000F07           9         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_codeset_ascii
                             0x0800047C          32      4  Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_data_empty_string
                             0x08000EFD           1         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_data_utf8_period
                             0x08000E90           2         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_hex_lc        0x08000FB4          16         Cnst  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_hex_uc        0x08000FA4          16         Cnst  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_data__       0x0800100C        [36]      4  Cnst  Lc  [ Linker created ]
  __SEGGER_init_table__      0x08000FE8        [36]      4  Cnst  Lc  [ Linker created ]
  _aInitStr.0                0x08000B1C          17      4  Cnst  Lc  SEGGER_RTT.o

Read-only data symbols by address:

     Address  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x080000B8  AHBPrescTable                      16      4  Cnst  Gb  system_stm32l0xx.o
  0x08000470  __SEGGER_RTL_c_locale              12      4  Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x0800047C  __SEGGER_RTL_codeset_ascii
                                                 32      4  Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x0800049C  __SEGGER_RTL_c_locale_data
                                                 88      4  Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000AAC  PLLMulTable                         9      4  Cnst  Gb  system_stm32l0xx.o
  0x08000AB5  __SEGGER_RTL_c_locale_month_names
                                                 87         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000B15  __SEGGER_RTL_c_locale_am_pm_indicator
                                                  7         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000B1C  _aInitStr.0                        17      4  Cnst  Lc  SEGGER_RTT.o
  0x08000B2D  __SEGGER_RTL_c_locale_date_time_format
                                                 15         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000B41  __SEGGER_RTL_c_locale_abbrev_day_names
                                                 29         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000E90  __SEGGER_RTL_data_utf8_period
                                                  2         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000E92  __SEGGER_RTL_c_locale_day_names
                                                 58         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000ECC  __SEGGER_RTL_c_locale_abbrev_month_names
                                                 49         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000EFD  __SEGGER_RTL_data_empty_string
                                                  1         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000EFE  __SEGGER_RTL_c_locale_date_format
                                                  9         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000F07  __SEGGER_RTL_c_locale_time_format
                                                  9         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000F10  __SEGGER_RTL_ascii_ctype_mask
                                                 13         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000F24  __SEGGER_RTL_ascii_ctype_map
                                                128         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000FA4  __SEGGER_RTL_hex_uc                16         Cnst  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000FB4  __SEGGER_RTL_hex_lc                16         Cnst  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000FE8  __SEGGER_init_table__            [36]      4  Cnst  Lc  [ Linker created ]
  0x0800100C  __SEGGER_init_data__             [36]      4  Cnst  Lc  [ Linker created ]

Untyped symbols by name:

  Symbol name                     Value        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  __FLASH1_segment_end__     0x08008000                     ----  Gb  [ Linker created ]
  __FLASH1_segment_size__    0x00008000                     ----  Gb  [ Linker created ]
  __FLASH1_segment_start__   0x08000000                     ----  Gb  [ Linker created ]
  __FLASH1_segment_used_end__
                             0x08001056                     ----  Gb  [ Linker created ]
  __FLASH1_segment_used_size__
                             0x00001056                     ----  Gb  [ Linker created ]
  __FLASH1_segment_used_start__
                             0x08000000                     ----  Gb  [ Linker created ]
  __FLASH_segment_end__      0x08008000                     ----  Gb  [ Linker created ]
  __FLASH_segment_size__     0x00008000                     ----  Gb  [ Linker created ]
  __FLASH_segment_start__    0x08000000                     ----  Gb  [ Linker created ]
  __FLASH_segment_used_end__
                             0x08001056                     ----  Gb  [ Linker created ]
  __FLASH_segment_used_size__
                             0x00001056                     ----  Gb  [ Linker created ]
  __FLASH_segment_used_start__
                             0x08000000                     ----  Gb  [ Linker created ]
  __HEAPSIZE__               0x00000400                     ----  Gb  [ Linker created ]
  __RAM1_segment_end__       0x20002000                     ----  Gb  [ Linker created ]
  __RAM1_segment_size__      0x00002000                     ----  Gb  [ Linker created ]
  __RAM1_segment_start__     0x20000000                     ----  Gb  [ Linker created ]
  __RAM1_segment_used_end__  0x20002000                     ----  Gb  [ Linker created ]
  __RAM1_segment_used_size__
                             0x00002000                     ----  Gb  [ Linker created ]
  __RAM1_segment_used_start__
                             0x20000000                     ----  Gb  [ Linker created ]
  __RAM_segment_end__        0x20002000                     ----  Gb  [ Linker created ]
  __RAM_segment_size__       0x00002000                     ----  Gb  [ Linker created ]
  __RAM_segment_start__      0x20000000                     ----  Gb  [ Linker created ]
  __RAM_segment_used_end__   0x20002000                     ----  Gb  [ Linker created ]
  __RAM_segment_used_size__  0x00002000                     ----  Gb  [ Linker created ]
  __RAM_segment_used_start__
                             0x20000000                     ----  Gb  [ Linker created ]
  __STACKSIZE_PROCESS__      0x00000000                     ----  Gb  [ Linker created ]
  __STACKSIZE__              0x00000200                     ----  Gb  [ Linker created ]
  __ctors_end__              0x08000F24                     ----  Gb  [ Linker created ]
  __ctors_start__            0x08000F20                     ----  Gb  [ Linker created ]
  __stack_end__              0x20002000                     ----  Gb  [ Linker created ]
  __thread_pointer$          0x00000000                     ----  Gb  [ Linker created ]
  _vectors                   0x08000000       [184]    256  Code  Gb  stm32l010x6_Vectors.o
  _vectors_end               0x080000B8                256  Code  Lc  stm32l010x6_Vectors.o

Untyped symbols by address:

       Value  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x00000000  __thread_pointer$                             ----  Gb  [ Linker created ]
  0x00000000  __STACKSIZE_PROCESS__                         ----  Gb  [ Linker created ]
  0x00000200  __STACKSIZE__                                 ----  Gb  [ Linker created ]
  0x00000400  __HEAPSIZE__                                  ----  Gb  [ Linker created ]
  0x00001056  __FLASH_segment_used_size__
                                                            ----  Gb  [ Linker created ]
  0x00001056  __FLASH1_segment_used_size__
                                                            ----  Gb  [ Linker created ]
  0x00002000  __RAM_segment_used_size__                     ----  Gb  [ Linker created ]
  0x00002000  __RAM_segment_size__                          ----  Gb  [ Linker created ]
  0x00002000  __RAM1_segment_used_size__
                                                            ----  Gb  [ Linker created ]
  0x00002000  __RAM1_segment_size__                         ----  Gb  [ Linker created ]
  0x00008000  __FLASH_segment_size__                        ----  Gb  [ Linker created ]
  0x00008000  __FLASH1_segment_size__                       ----  Gb  [ Linker created ]
  0x08000000  _vectors                        [184]    256  Code  Gb  stm32l010x6_Vectors.o
  0x08000000  __FLASH_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x08000000  __FLASH_segment_start__                       ----  Gb  [ Linker created ]
  0x08000000  __FLASH1_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x08000000  __FLASH1_segment_start__                      ----  Gb  [ Linker created ]
  0x080000B8  _vectors_end                             256  Code  Lc  stm32l010x6_Vectors.o
  0x08000F20  __ctors_start__                               ----  Gb  [ Linker created ]
  0x08000F24  __ctors_end__                                 ----  Gb  [ Linker created ]
  0x08001056  __FLASH_segment_used_end__
                                                            ----  Gb  [ Linker created ]
  0x08001056  __FLASH1_segment_used_end__
                                                            ----  Gb  [ Linker created ]
  0x08008000  __FLASH_segment_end__                         ----  Gb  [ Linker created ]
  0x08008000  __FLASH1_segment_end__                        ----  Gb  [ Linker created ]
  0x20000000  __RAM_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x20000000  __RAM_segment_start__                         ----  Gb  [ Linker created ]
  0x20000000  __RAM1_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x20000000  __RAM1_segment_start__                        ----  Gb  [ Linker created ]
  0x20002000  __stack_end__                                 ----  Gb  [ Linker created ]
  0x20002000  __RAM_segment_used_end__                      ----  Gb  [ Linker created ]
  0x20002000  __RAM_segment_end__                           ----  Gb  [ Linker created ]
  0x20002000  __RAM1_segment_used_end__                     ----  Gb  [ Linker created ]
  0x20002000  __RAM1_segment_end__                          ----  Gb  [ Linker created ]


***********************************************************************************************
***                                                                                         ***
***                                      LINK SUMMARY                                       ***
***                                                                                         ***
***********************************************************************************************

Memory breakdown:

    3 474 bytes read-only  code    + 
      701 bytes read-only  data    =   4 175 bytes read-only (total)
    1 772 bytes read-write data

Region summary:

  Name        Range                     Size                 Used               Unused       Alignment Loss
  ----------  -----------------  -----------  -------------------  -------------------  -------------------
  FLASH       08000000-08007fff       32 768        4 179  12.75%       28 589  87.25%            0   0.00%
  RAM         20000000-20001fff        8 192        1 772  21.63%        6 420  78.37%            0   0.00%

Link complete: 0 errors, 0 warnings, 0 remarks
