***********************************************************************************************
***                                                                                         ***
***                                    LINK INFORMATION                                     ***
***                                                                                         ***
***********************************************************************************************

Linker version:

  SEGGER ARM Linker 4.38.5 compiled Jun 15 2023 00:38:16
  Copyright (c) 2017-2022 SEGGER Microcontroller GmbH    www.segger.com


***********************************************************************************************
***                                                                                         ***
***                                     MODULE SUMMARY                                      ***
***                                                                                         ***
***********************************************************************************************

Memory use by input file:

  Object File                                       RX Code     RO Data     RW Data     ZI Data
  ---------------------------------------------  ----------  ----------  ----------  ----------
  main.o                                                500          14                        
  SEGGER_RTT.o                                          784          26                   1 208
  SEGGER_THUMB_Startup.o                                 20                                    
  stm32l010x6_Vectors.o                                 230                                    
  STM32L0xx_Startup.o                                    56                                    
  system_stm32l0xx.o                                    368          25           4            
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (6 objects)                                1 958          65           4       1 208
  ---------------------------------------------  ----------  ----------  ----------  ----------
  libc_v6m_t_le_eabi_balanced.a                       1 824         573          20           4
  prinops_rtt_v6m_t_le_eabi_balanced.a                   66                      12          12
  SEGGER_crtinit_v6m_t_le_eabi_balanced.a                74                                    
  strops_v6m_t_le_eabi_balanced.a                        36                                    
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (4 archives)                               2 000         573          32          16
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Linker created (shared data, fills, blocks):                       72                     512
  =============================================  ==========  ==========  ==========  ==========
  Total:                                              3 958         710          36       1 736
  =============================================  ==========  ==========  ==========  ==========

Memory use by archive member:

  Archive member                                    RX Code     RO Data     RW Data     ZI Data
  ---------------------------------------------  ----------  ----------  ----------  ----------
  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
                                                        928                                    
  fileops.o (libc_v6m_t_le_eabi_balanced.a)              52                                    
  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
                                                        288                                    
  mbops.o (libc_v6m_t_le_eabi_balanced.a)               190         541          20           4
  prinops.o (libc_v6m_t_le_eabi_balanced.a)             366          32                        
  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
                                                         66                      12          12
  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
                                                         74                                    
  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
                                                         36                                    
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (8 members from 4 archives)                2 000         573          32          16
  Objects (6 files)                                   1 958          65           4       1 208
  Linker created (shared data, fills, blocks):                       72                     512
  =============================================  ==========  ==========  ==========  ==========
  Total:                                              3 958         710          36       1 736
  =============================================  ==========  ==========  ==========  ==========

Memory use by linker:

  Description                                       RX Code     RO Data     RW Data     ZI Data
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Initialization table                                               72                        
  Memory for block 'stack'                                                                  512
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (linker created):                                         72                     512
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Objects (6 files)                                   1 958          65           4       1 208
  Archives (4 files)                                  2 000         573          32          16
  =============================================  ==========  ==========  ==========  ==========
  Total:                                              3 958         710          36       1 736
  =============================================  ==========  ==========  ==========  ==========


***********************************************************************************************
***                                                                                         ***
***                                     SECTION DETAIL                                      ***
***                                                                                         ***
***********************************************************************************************

Sections by address:

  Range              Symbol or [section] Name         Size  Al  Init  Ac  Object File
  -----------------  -------------------------  ----------  --  ----  --  -----------
  08000000-080000b7  _vectors                          184  256
                                                                Code  RX  stm32l010x6_Vectors.o
  080000b8-080000c7  AHBPrescTable                      16   4  Cnst  RO  system_stm32l0xx.o
  080000c8-08000233  SystemCoreClockUpdate             364   4  Code  RX  system_stm32l0xx.o
  08000234-080002d3  _DoInit                           160   4  Code  RX  SEGGER_RTT.o
  080002d4-0800037f  SEGGER_RTT_WriteNoLock            172   4  Code  RX  SEGGER_RTT.o
  08000380-080003cb  SEGGER_RTT_Write                   76   4  Code  RX  SEGGER_RTT.o
  080003cc-08000583  main                              440   4  Code  RX  main.o
  08000584-080005bf  delay_systicks                     60   4  Code  RX  main.o
  080005c0-080005d3  _start                             20   4  Code  RX  SEGGER_THUMB_Startup.o
  080005d4-08000603  HardFault_Handler                  48   4  Code  RX  STM32L0xx_Startup.o
  08000604-0800061b  __SEGGER_RTL_current_locale
                                                        24   4  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0800061c-08000637  __SEGGER_RTL_ascii_isctype
                                                        28   4  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000638-08000653  __SEGGER_RTL_ascii_iswctype
                                                        28   4  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000654-0800065f  __SEGGER_RTL_c_locale              12   4  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000660-0800067f  __SEGGER_RTL_codeset_ascii
                                                        32   4  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000680-080006d7  __SEGGER_RTL_c_locale_data
                                                        88   4  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  080006d8-08000707  __aeabi_lmul                       48   4  Code  RX  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  08000708-0800073f  __aeabi_uidiv                      56   4  Code  RX  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  08000740-0800074f  __aeabi_uidivmod                   16   4  Code  RX  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  08000750-080007ef  __aeabi_uldivmod                  160   4  Code  RX  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  080007f0-080007f7  __aeabi_idiv0                       8   4  Code  RX  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  080007f8-0800086f  vfprintf_l                        120   4  Code  RX  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  08000870-08000897  printf                             40   4  Code  RX  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  08000898-08000c37  __SEGGER_RTL_vfprintf_int_nwp
                                                       928   4  Code  RX  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
  08000c38-08000c6b  __SEGGER_RTL_X_file_stat           52   4  Code  RX  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  08000c6c-08000c7b  memcpy                             16   4  Code  RX  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  08000c7c-08000c8f  __aeabi_memclr                     20   4  Code  RX  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  08000c90-08000c98  PLLMulTable                         9   4  Cnst  RO  system_stm32l0xx.o
  08000c99-08000cef  __SEGGER_RTL_c_locale_month_names
                                                        87   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000cf0-08000cf8  [.rodata]                           9   4  Cnst  RO  SEGGER_RTT.o
  08000cf9-08000cff  __SEGGER_RTL_c_locale_am_pm_indicator
                                                         7   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000d00-08000d10  _aInitStr.0                        17   4  Cnst  RO  SEGGER_RTT.o
  08000d11-08000d1f  __SEGGER_RTL_c_locale_date_time_format
                                                        15   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000d20-08000d2d  [.rodata]                          14   4  Cnst  RO  main.o
  08000d2e-08000d2f  NMI_Handler                         2   2  Code  RX  stm32l010x6_Vectors.o
  08000d30-08000d31  SVC_Handler                         2   2  Code  RX  stm32l010x6_Vectors.o
  08000d32-08000d33  PendSV_Handler                      2   2  Code  RX  stm32l010x6_Vectors.o
  08000d34-08000d35  SysTick_Handler                     2   2  Code  RX  stm32l010x6_Vectors.o
  08000d36-08000d37  WWDG_IRQHandler                     2   2  Code  RX  stm32l010x6_Vectors.o
  08000d38-08000d39  RTC_IRQHandler                      2   2  Code  RX  stm32l010x6_Vectors.o
  08000d3a-08000d3b  FLASH_IRQHandler                    2   2  Code  RX  stm32l010x6_Vectors.o
  08000d3c-08000d3d  RCC_IRQHandler                      2   2  Code  RX  stm32l010x6_Vectors.o
  08000d3e-08000d3f  EXTI0_1_IRQHandler                  2   2  Code  RX  stm32l010x6_Vectors.o
  08000d40-08000d41  EXTI2_3_IRQHandler                  2   2  Code  RX  stm32l010x6_Vectors.o
  08000d42-08000d43  EXTI4_15_IRQHandler                 2   2  Code  RX  stm32l010x6_Vectors.o
  08000d44-08000d45  DMA1_Channel1_IRQHandler            2   2  Code  RX  stm32l010x6_Vectors.o
  08000d46-08000d47  DMA1_Channel2_3_IRQHandler
                                                         2   2  Code  RX  stm32l010x6_Vectors.o
  08000d48-08000d49  DMA1_Channel4_5_6_7_IRQHandler
                                                         2   2  Code  RX  stm32l010x6_Vectors.o
  08000d4a-08000d4b  ADC1_IRQHandler                     2   2  Code  RX  stm32l010x6_Vectors.o
  08000d4c-08000d4d  LPTIM1_IRQHandler                   2   2  Code  RX  stm32l010x6_Vectors.o
  08000d4e-08000d4f  TIM2_IRQHandler                     2   2  Code  RX  stm32l010x6_Vectors.o
  08000d50-08000d51  TIM21_IRQHandler                    2   2  Code  RX  stm32l010x6_Vectors.o
  08000d52-08000d53  I2C1_IRQHandler                     2   2  Code  RX  stm32l010x6_Vectors.o
  08000d54-08000d55  SPI1_IRQHandler                     2   2  Code  RX  stm32l010x6_Vectors.o
  08000d56-08000d57  USART2_IRQHandler                   2   2  Code  RX  stm32l010x6_Vectors.o
  08000d58-08000d59  LPUART1_IRQHandler                  2   2  Code  RX  stm32l010x6_Vectors.o
  08000d5a-08000d5b  Dummy_Handler                       2   2  Code  RX  stm32l010x6_Vectors.o
  08000d5c-08000d89  __SEGGER_RTL_ascii_mbtowc          46   2  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000d8a-08000e13  __SEGGER_RTL_putc                 138   2  Code  RX  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  08000e14-08000e2d  __SEGGER_RTL_prin_flush            26   2  Code  RX  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  08000e2e-08000e47  vfprintf                           26   2  Code  RX  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  08000e48-08000e51  __SEGGER_RTL_X_file_write          10   2  Code  RX  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  08000e52-08000e55  SystemInit                          4   2  Code  RX  system_stm32l0xx.o
  08000e56-08000f09  _WriteBlocking                    180   2  Code  RX  SEGGER_RTT.o
  08000f0a-08000f91  _WriteNoCheck                     136   2  Code  RX  SEGGER_RTT.o
  08000f92-08000fcd  _GetAvailWriteSpace                60   2  Code  RX  SEGGER_RTT.o
  08000fce-08000fd5  reset_handler                       8   2  Code  RX  STM32L0xx_Startup.o
  08000fd6-08001009  fwrite                             52   2  Code  RX  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  0800100a-08001019  __SEGGER_RTL_ascii_wctomb          16   2  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0800101a-08001025  __SEGGER_RTL_ascii_toupper
                                                        12   2  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08001026-08001031  __SEGGER_RTL_ascii_tolower
                                                        12   2  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08001032-0800103d  __SEGGER_RTL_ascii_towupper
                                                        12   2  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0800103e-08001049  __SEGGER_RTL_ascii_towlower
                                                        12   2  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0800104a-08001059  __SEGGER_RTL_stream_write          16   2  Code  RX  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0800105a-0800105d  __SEGGER_RTL_X_file_bufsize
                                                         4   2  Code  RX  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0800105e-0800105f  [.rodata.libc..L.str]               2   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08001060-08001061  __SEGGER_RTL_data_utf8_period
                                                         2   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08001062-0800109b  __SEGGER_RTL_c_locale_day_names
                                                        58   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0800109c-080010b8  __SEGGER_RTL_c_locale_abbrev_day_names
                                                        29   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  080010b9-080010e9  __SEGGER_RTL_c_locale_abbrev_month_names
                                                        49   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  080010ea-080010ea  __SEGGER_RTL_data_empty_string
                                                         1   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  080010eb-080010f3  __SEGGER_RTL_c_locale_date_format
                                                         9   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  080010f4-080010fc  __SEGGER_RTL_c_locale_time_format
                                                         9   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  080010fd-08001109  __SEGGER_RTL_ascii_ctype_mask
                                                        13   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0800110a-0800110b  ( UNUSED .=.+2 )                    2   -  ----  -   -
  0800110c-0800110f  [.init_array]                       4   4  ----  --  STM32L0xx_Startup.o
  08001110-0800118f  __SEGGER_RTL_ascii_ctype_map
                                                       128   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08001190-0800119f  __SEGGER_RTL_hex_uc                16   1  Cnst  RO  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  080011a0-080011af  __SEGGER_RTL_hex_lc                16   1  Cnst  RO  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  080011b0-080011d3  __SEGGER_init_ctors                36   4  Code  RX  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  080011d4-080011f7  __SEGGER_init_table__              36   4  Cnst  RO  [ Linker created ]
  080011f8-0800121b  __SEGGER_init_data__               36   4  Cnst  RO  [ Linker created ]
  0800121c-0800122d  __SEGGER_init_zero                 18   2  Code  RX  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  0800122e-08001241  __SEGGER_init_copy                 20   2  Code  RX  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  08001242-1fffffff  ( UNUSED .=.+402648510 )   402 648 510
                                                             -  ----  -   -
  20000000-200003ff  _acUpBuffer                     1 024   4  Zero  ZI  SEGGER_RTT.o
  20000400-200004a7  _SEGGER_RTT                       168   4  Zero  ZI  SEGGER_RTT.o
  200004a8-200004b7  _acDownBuffer                      16   4  Zero  ZI  SEGGER_RTT.o
  200004b8-200004bb  __SEGGER_RTL_stdout_file            4   4  Zero  ZI  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004bc-200004bf  __SEGGER_RTL_stdin_file             4   4  Zero  ZI  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004c0-200004c3  __SEGGER_RTL_stderr_file            4   4  Zero  ZI  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004c4-200004c7  __SEGGER_RTL_locale_ptr             4   4  Zero  ZI  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  200004c8-200004db  __SEGGER_RTL_global_locale
                                                        20   4  Init  RW  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  200004dc-200004df  stdout                              4   4  Init  RW  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004e0-200004e3  stdin                               4   4  Init  RW  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004e4-200004e7  stderr                              4   4  Init  RW  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004e8-200004eb  SystemCoreClock                     4   4  Init  RW  system_stm32l0xx.o
  200004ec-20001dff  ( UNUSED .=.+6420 )             6 420   -  ----  -   -
  20001e00-20001fff  [.bss.block.stack]                512   8  None  ZI  [ Linker created ]


***********************************************************************************************
***                                                                                         ***
***                                       SYMBOL LIST                                       ***
***                                                                                         ***
***********************************************************************************************

Function symbols by name:

  Symbol name                   Address        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  ADC1_IRQHandler            0x08000D4B                  2  Code  Wk  stm32l010x6_Vectors.o
  DMA1_Channel1_IRQHandler   0x08000D45                  2  Code  Wk  stm32l010x6_Vectors.o
  DMA1_Channel2_3_IRQHandler
                             0x08000D47                  2  Code  Wk  stm32l010x6_Vectors.o
  DMA1_Channel4_5_6_7_IRQHandler
                             0x08000D49                  2  Code  Wk  stm32l010x6_Vectors.o
  Dummy_Handler              0x08000D5B                  2  Code  Wk  stm32l010x6_Vectors.o
  EXTI0_1_IRQHandler         0x08000D3F                  2  Code  Wk  stm32l010x6_Vectors.o
  EXTI2_3_IRQHandler         0x08000D41                  2  Code  Wk  stm32l010x6_Vectors.o
  EXTI4_15_IRQHandler        0x08000D43                  2  Code  Wk  stm32l010x6_Vectors.o
  FLASH_IRQHandler           0x08000D3B                  2  Code  Wk  stm32l010x6_Vectors.o
  HardFault_Handler          0x080005D5                  4  Code  Wk  STM32L0xx_Startup.o
  I2C1_IRQHandler            0x08000D53                  2  Code  Wk  stm32l010x6_Vectors.o
  LPTIM1_IRQHandler          0x08000D4D                  2  Code  Wk  stm32l010x6_Vectors.o
  LPUART1_IRQHandler         0x08000D59                  2  Code  Wk  stm32l010x6_Vectors.o
  NMI_Handler                0x08000D2F                  2  Code  Wk  stm32l010x6_Vectors.o
  PendSV_Handler             0x08000D33                  2  Code  Wk  stm32l010x6_Vectors.o
  RCC_IRQHandler             0x08000D3D                  2  Code  Wk  stm32l010x6_Vectors.o
  RTC_IRQHandler             0x08000D39                  2  Code  Wk  stm32l010x6_Vectors.o
  Reset_Handler              0x08000FCF                  2  Code  Gb  STM32L0xx_Startup.o
  SEGGER_RTT_Write           0x08000381          76      4  Code  Gb  SEGGER_RTT.o
  SEGGER_RTT_WriteNoLock     0x080002D5         172      4  Code  Gb  SEGGER_RTT.o
  SPI1_IRQHandler            0x08000D55                  2  Code  Wk  stm32l010x6_Vectors.o
  SVC_Handler                0x08000D31                  2  Code  Wk  stm32l010x6_Vectors.o
  SysTick_Handler            0x08000D35                  2  Code  Wk  stm32l010x6_Vectors.o
  SystemCoreClockUpdate      0x080000C9         364      4  Code  Gb  system_stm32l0xx.o
  SystemInit                 0x08000E53           4      2  Code  Gb  system_stm32l0xx.o
  TIM21_IRQHandler           0x08000D51                  2  Code  Wk  stm32l010x6_Vectors.o
  TIM2_IRQHandler            0x08000D4F                  2  Code  Wk  stm32l010x6_Vectors.o
  USART2_IRQHandler          0x08000D57                  2  Code  Wk  stm32l010x6_Vectors.o
  WWDG_IRQHandler            0x08000D37                  2  Code  Wk  stm32l010x6_Vectors.o
  _DoInit                    0x08000235         160      4  Code  Lc  SEGGER_RTT.o
  _GetAvailWriteSpace        0x08000F93          60      2  Code  Lc  SEGGER_RTT.o
  _WriteBlocking             0x08000E57         180      2  Code  Lc  SEGGER_RTT.o
  _WriteNoCheck              0x08000F0B         136      2  Code  Lc  SEGGER_RTT.o
  __SEGGER_RTL_X_file_bufsize
                             0x0800105B           4      2  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_X_file_stat   0x08000C39          52      4  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_X_file_write  0x08000E49          10      2  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_isctype
                             0x0800061D          28      4  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_iswctype
                             0x08000639          28      4  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_mbtowc  0x08000D5D          46      2  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_tolower
                             0x08001027          12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_toupper
                             0x0800101B          12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_towlower
                             0x0800103F          12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_towupper
                             0x08001033          12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_wctomb  0x0800100B          16      2  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_current_locale
                             0x08000605          24      4  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_prin_flush    0x08000E15          26      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_putc          0x08000D8B         138      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stream_write  0x0800104B          16      2  Code  Lc  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_vfprintf      0x08000899         928      4  Code  Gb  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_vfprintf_int_nwp
                             0x08000899         928      4  Code  Gb  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_copy         0x0800122F          20      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_ctors        0x080011B1          26      4  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_done         0x080005CB                  4  Code  Gb  SEGGER_THUMB_Startup.o
  __SEGGER_init_zero         0x0800121D          18      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  __aeabi_idiv0              0x080007F1           6      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __aeabi_lmul               0x080006D9          46      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __aeabi_memclr             0x08000C7D          20      4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memclr4            0x08000C7D                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memclr8            0x08000C7D                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memcpy             0x08000C6D                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memcpy4            0x08000C6D                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memcpy8            0x08000C6D                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memset             0x08000C7F                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memset4            0x08000C7F                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memset8            0x08000C7F                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_uidiv              0x08000709          56      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __aeabi_uidivmod           0x08000741          16      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __aeabi_uldivmod           0x08000751         160      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __startup_complete         0x080005CB                  4  Code  Gb  SEGGER_THUMB_Startup.o
  _start                     0x080005C1          14      4  Code  Gb  SEGGER_THUMB_Startup.o
  delay_systicks             0x08000585          60      4  Code  Gb  main.o
  exit                       0x080005CF           2      4  Code  Gb  SEGGER_THUMB_Startup.o
  fwrite                     0x08000FD7          52      2  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  main                       0x080003CD         440      4  Code  Gb  main.o
  memcpy                     0x08000C6D          14      4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  memset                     0x08000C85                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  printf                     0x08000871          40      4  Code  Wk  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  reset_handler              0x08000FCF                  2  Code  Gb  STM32L0xx_Startup.o
  vfprintf                   0x08000E2F          26      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  vfprintf_l                 0x080007F9         120      4  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)

Function symbols by address:

     Address  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x080000C9  SystemCoreClockUpdate             364      4  Code  Gb  system_stm32l0xx.o
  0x08000235  _DoInit                           160      4  Code  Lc  SEGGER_RTT.o
  0x080002D5  SEGGER_RTT_WriteNoLock            172      4  Code  Gb  SEGGER_RTT.o
  0x08000381  SEGGER_RTT_Write                   76      4  Code  Gb  SEGGER_RTT.o
  0x080003CD  main                              440      4  Code  Gb  main.o
  0x08000585  delay_systicks                     60      4  Code  Gb  main.o
  0x080005C1  _start                             14      4  Code  Gb  SEGGER_THUMB_Startup.o
  0x080005CB  __startup_complete                         4  Code  Gb  SEGGER_THUMB_Startup.o
  0x080005CB  __SEGGER_init_done                         4  Code  Gb  SEGGER_THUMB_Startup.o
  0x080005CF  exit                                2      4  Code  Gb  SEGGER_THUMB_Startup.o
  0x080005D5  HardFault_Handler                          4  Code  Wk  STM32L0xx_Startup.o
  0x08000605  __SEGGER_RTL_current_locale
                                                 24      4  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x0800061D  __SEGGER_RTL_ascii_isctype
                                                 28      4  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000639  __SEGGER_RTL_ascii_iswctype
                                                 28      4  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x080006D9  __aeabi_lmul                       46      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000709  __aeabi_uidiv                      56      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000741  __aeabi_uidivmod                   16      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000751  __aeabi_uldivmod                  160      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  0x080007F1  __aeabi_idiv0                       6      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  0x080007F9  vfprintf_l                        120      4  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000871  printf                             40      4  Code  Wk  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000899  __SEGGER_RTL_vfprintf_int_nwp
                                                928      4  Code  Gb  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000899  __SEGGER_RTL_vfprintf             928      4  Code  Gb  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000C39  __SEGGER_RTL_X_file_stat           52      4  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x08000C6D  memcpy                             14      4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000C6D  __aeabi_memcpy8                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000C6D  __aeabi_memcpy4                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000C6D  __aeabi_memcpy                             4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000C7D  __aeabi_memclr8                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000C7D  __aeabi_memclr4                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000C7D  __aeabi_memclr                     20      4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000C7F  __aeabi_memset8                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000C7F  __aeabi_memset4                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000C7F  __aeabi_memset                             4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000C85  memset                                     4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000D2F  NMI_Handler                                2  Code  Wk  stm32l010x6_Vectors.o
  0x08000D31  SVC_Handler                                2  Code  Wk  stm32l010x6_Vectors.o
  0x08000D33  PendSV_Handler                             2  Code  Wk  stm32l010x6_Vectors.o
  0x08000D35  SysTick_Handler                            2  Code  Wk  stm32l010x6_Vectors.o
  0x08000D37  WWDG_IRQHandler                            2  Code  Wk  stm32l010x6_Vectors.o
  0x08000D39  RTC_IRQHandler                             2  Code  Wk  stm32l010x6_Vectors.o
  0x08000D3B  FLASH_IRQHandler                           2  Code  Wk  stm32l010x6_Vectors.o
  0x08000D3D  RCC_IRQHandler                             2  Code  Wk  stm32l010x6_Vectors.o
  0x08000D3F  EXTI0_1_IRQHandler                         2  Code  Wk  stm32l010x6_Vectors.o
  0x08000D41  EXTI2_3_IRQHandler                         2  Code  Wk  stm32l010x6_Vectors.o
  0x08000D43  EXTI4_15_IRQHandler                        2  Code  Wk  stm32l010x6_Vectors.o
  0x08000D45  DMA1_Channel1_IRQHandler                   2  Code  Wk  stm32l010x6_Vectors.o
  0x08000D47  DMA1_Channel2_3_IRQHandler
                                                         2  Code  Wk  stm32l010x6_Vectors.o
  0x08000D49  DMA1_Channel4_5_6_7_IRQHandler
                                                         2  Code  Wk  stm32l010x6_Vectors.o
  0x08000D4B  ADC1_IRQHandler                            2  Code  Wk  stm32l010x6_Vectors.o
  0x08000D4D  LPTIM1_IRQHandler                          2  Code  Wk  stm32l010x6_Vectors.o
  0x08000D4F  TIM2_IRQHandler                            2  Code  Wk  stm32l010x6_Vectors.o
  0x08000D51  TIM21_IRQHandler                           2  Code  Wk  stm32l010x6_Vectors.o
  0x08000D53  I2C1_IRQHandler                            2  Code  Wk  stm32l010x6_Vectors.o
  0x08000D55  SPI1_IRQHandler                            2  Code  Wk  stm32l010x6_Vectors.o
  0x08000D57  USART2_IRQHandler                          2  Code  Wk  stm32l010x6_Vectors.o
  0x08000D59  LPUART1_IRQHandler                         2  Code  Wk  stm32l010x6_Vectors.o
  0x08000D5B  Dummy_Handler                              2  Code  Wk  stm32l010x6_Vectors.o
  0x08000D5D  __SEGGER_RTL_ascii_mbtowc          46      2  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000D8B  __SEGGER_RTL_putc                 138      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000E15  __SEGGER_RTL_prin_flush            26      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000E2F  vfprintf                           26      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000E49  __SEGGER_RTL_X_file_write          10      2  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x08000E53  SystemInit                          4      2  Code  Gb  system_stm32l0xx.o
  0x08000E57  _WriteBlocking                    180      2  Code  Lc  SEGGER_RTT.o
  0x08000F0B  _WriteNoCheck                     136      2  Code  Lc  SEGGER_RTT.o
  0x08000F93  _GetAvailWriteSpace                60      2  Code  Lc  SEGGER_RTT.o
  0x08000FCF  reset_handler                              2  Code  Gb  STM32L0xx_Startup.o
  0x08000FCF  Reset_Handler                              2  Code  Gb  STM32L0xx_Startup.o
  0x08000FD7  fwrite                             52      2  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  0x0800100B  __SEGGER_RTL_ascii_wctomb          16      2  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x0800101B  __SEGGER_RTL_ascii_toupper
                                                 12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08001027  __SEGGER_RTL_ascii_tolower
                                                 12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08001033  __SEGGER_RTL_ascii_towupper
                                                 12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x0800103F  __SEGGER_RTL_ascii_towlower
                                                 12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x0800104B  __SEGGER_RTL_stream_write          16      2  Code  Lc  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x0800105B  __SEGGER_RTL_X_file_bufsize
                                                  4      2  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x080011B1  __SEGGER_init_ctors                26      4  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  0x0800121D  __SEGGER_init_zero                 18      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  0x0800122F  __SEGGER_init_copy                 20      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)

Function symbols by descending size:

  Symbol name                      Size  Align  Type  Bd  Object File
  -------------------------  ----------  -----  ----  --  -----------
  __SEGGER_RTL_vfprintf             928      4  Code  Gb  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_vfprintf_int_nwp
                                    928      4  Code  Gb  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
  main                              440      4  Code  Gb  main.o
  SystemCoreClockUpdate             364      4  Code  Gb  system_stm32l0xx.o
  _WriteBlocking                    180      2  Code  Lc  SEGGER_RTT.o
  SEGGER_RTT_WriteNoLock            172      4  Code  Gb  SEGGER_RTT.o
  _DoInit                           160      4  Code  Lc  SEGGER_RTT.o
  __aeabi_uldivmod                  160      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_putc                 138      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  _WriteNoCheck                     136      2  Code  Lc  SEGGER_RTT.o
  vfprintf_l                        120      4  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  SEGGER_RTT_Write                   76      4  Code  Gb  SEGGER_RTT.o
  _GetAvailWriteSpace                60      2  Code  Lc  SEGGER_RTT.o
  delay_systicks                     60      4  Code  Gb  main.o
  __aeabi_uidiv                      56      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_X_file_stat           52      4  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  fwrite                             52      2  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_mbtowc          46      2  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __aeabi_lmul                       46      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  printf                             40      4  Code  Wk  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_isctype
                                     28      4  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_iswctype
                                     28      4  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_prin_flush            26      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_ctors                26      4  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  vfprintf                           26      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_current_locale
                                     24      4  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_copy                 20      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  __aeabi_memclr                     20      4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_zero                 18      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_wctomb          16      2  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stream_write          16      2  Code  Lc  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __aeabi_uidivmod                   16      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  _start                             14      4  Code  Gb  SEGGER_THUMB_Startup.o
  memcpy                             14      4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_tolower
                                     12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_toupper
                                     12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_towlower
                                     12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_towupper
                                     12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_X_file_write          10      2  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __aeabi_idiv0                       6      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  SystemInit                          4      2  Code  Gb  system_stm32l0xx.o
  __SEGGER_RTL_X_file_bufsize
                                      4      2  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  exit                                2      4  Code  Gb  SEGGER_THUMB_Startup.o
  ADC1_IRQHandler                            2  Code  Wk  stm32l010x6_Vectors.o
  DMA1_Channel1_IRQHandler                   2  Code  Wk  stm32l010x6_Vectors.o
  DMA1_Channel2_3_IRQHandler
                                             2  Code  Wk  stm32l010x6_Vectors.o
  DMA1_Channel4_5_6_7_IRQHandler
                                             2  Code  Wk  stm32l010x6_Vectors.o
  Dummy_Handler                              2  Code  Wk  stm32l010x6_Vectors.o
  EXTI0_1_IRQHandler                         2  Code  Wk  stm32l010x6_Vectors.o
  EXTI2_3_IRQHandler                         2  Code  Wk  stm32l010x6_Vectors.o
  EXTI4_15_IRQHandler                        2  Code  Wk  stm32l010x6_Vectors.o
  FLASH_IRQHandler                           2  Code  Wk  stm32l010x6_Vectors.o
  HardFault_Handler                          4  Code  Wk  STM32L0xx_Startup.o
  I2C1_IRQHandler                            2  Code  Wk  stm32l010x6_Vectors.o
  LPTIM1_IRQHandler                          2  Code  Wk  stm32l010x6_Vectors.o
  LPUART1_IRQHandler                         2  Code  Wk  stm32l010x6_Vectors.o
  NMI_Handler                                2  Code  Wk  stm32l010x6_Vectors.o
  PendSV_Handler                             2  Code  Wk  stm32l010x6_Vectors.o
  RCC_IRQHandler                             2  Code  Wk  stm32l010x6_Vectors.o
  RTC_IRQHandler                             2  Code  Wk  stm32l010x6_Vectors.o
  Reset_Handler                              2  Code  Gb  STM32L0xx_Startup.o
  SPI1_IRQHandler                            2  Code  Wk  stm32l010x6_Vectors.o
  SVC_Handler                                2  Code  Wk  stm32l010x6_Vectors.o
  SysTick_Handler                            2  Code  Wk  stm32l010x6_Vectors.o
  TIM21_IRQHandler                           2  Code  Wk  stm32l010x6_Vectors.o
  TIM2_IRQHandler                            2  Code  Wk  stm32l010x6_Vectors.o
  USART2_IRQHandler                          2  Code  Wk  stm32l010x6_Vectors.o
  WWDG_IRQHandler                            2  Code  Wk  stm32l010x6_Vectors.o
  __SEGGER_init_done                         4  Code  Gb  SEGGER_THUMB_Startup.o
  __aeabi_memclr4                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memclr8                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memcpy                             4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memcpy4                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memcpy8                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memset                             4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memset4                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memset8                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __startup_complete                         4  Code  Gb  SEGGER_THUMB_Startup.o
  memset                                     4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  reset_handler                              2  Code  Gb  STM32L0xx_Startup.o

Read-write data symbols by name:

  Symbol name                   Address        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  SystemCoreClock            0x200004E8           4      4  Init  Gb  system_stm32l0xx.o
  _SEGGER_RTT                0x20000400         168      4  Zero  Gb  SEGGER_RTT.o
  __RAL_global_locale        0x200004C8          20      4  Init  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_global_locale
                             0x200004C8          20      4  Init  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_locale_ptr    0x200004C4           4      4  Zero  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stderr_file   0x200004C0           4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stdin_file    0x200004BC           4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stdout_file   0x200004B8           4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  _acDownBuffer              0x200004A8          16      4  Zero  Lc  SEGGER_RTT.o
  _acUpBuffer                0x20000000       1 024      4  Zero  Lc  SEGGER_RTT.o
  stderr                     0x200004E4           4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  stdin                      0x200004E0           4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  stdout                     0x200004DC           4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)

Read-write data symbols by address:

     Address  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x20000000  _acUpBuffer                     1 024      4  Zero  Lc  SEGGER_RTT.o
  0x20000400  _SEGGER_RTT                       168      4  Zero  Gb  SEGGER_RTT.o
  0x200004A8  _acDownBuffer                      16      4  Zero  Lc  SEGGER_RTT.o
  0x200004B8  __SEGGER_RTL_stdout_file            4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004BC  __SEGGER_RTL_stdin_file             4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004C0  __SEGGER_RTL_stderr_file            4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004C4  __SEGGER_RTL_locale_ptr             4      4  Zero  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x200004C8  __SEGGER_RTL_global_locale
                                                 20      4  Init  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x200004C8  __RAL_global_locale                20      4  Init  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x200004DC  stdout                              4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004E0  stdin                               4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004E4  stderr                              4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004E8  SystemCoreClock                     4      4  Init  Gb  system_stm32l0xx.o

Read-write data symbols by descending size:

  Symbol name                      Size  Align  Type  Bd  Object File
  -------------------------  ----------  -----  ----  --  -----------
  _acUpBuffer                     1 024      4  Zero  Lc  SEGGER_RTT.o
  _SEGGER_RTT                       168      4  Zero  Gb  SEGGER_RTT.o
  __RAL_global_locale                20      4  Init  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_global_locale
                                     20      4  Init  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  _acDownBuffer                      16      4  Zero  Lc  SEGGER_RTT.o
  SystemCoreClock                     4      4  Init  Gb  system_stm32l0xx.o
  __SEGGER_RTL_locale_ptr             4      4  Zero  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stderr_file            4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stdin_file             4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stdout_file            4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  stderr                              4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  stdin                               4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  stdout                              4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)

Read-only data symbols by name:

  Symbol name                   Address        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  AHBPrescTable              0x080000B8          16      4  Cnst  Gb  system_stm32l0xx.o
  PLLMulTable                0x08000C90           9      4  Cnst  Gb  system_stm32l0xx.o
  __SEGGER_RTL_ascii_ctype_map
                             0x08001110         128         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_ctype_mask
                             0x080010FD          13         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale      0x08000654          12      4  Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_abbrev_day_names
                             0x0800109C          29         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_abbrev_month_names
                             0x080010B9          49         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_am_pm_indicator
                             0x08000CF9           7         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_data
                             0x08000680          88      4  Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_date_format
                             0x080010EB           9         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_date_time_format
                             0x08000D11          15         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_day_names
                             0x08001062          58         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_month_names
                             0x08000C99          87         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_time_format
                             0x080010F4           9         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_codeset_ascii
                             0x08000660          32      4  Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_data_empty_string
                             0x080010EA           1         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_data_utf8_period
                             0x08001060           2         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_hex_lc        0x080011A0          16         Cnst  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_hex_uc        0x08001190          16         Cnst  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_data__       0x080011F8        [36]      4  Cnst  Lc  [ Linker created ]
  __SEGGER_init_table__      0x080011D4        [36]      4  Cnst  Lc  [ Linker created ]
  _aInitStr.0                0x08000D00          17      4  Cnst  Lc  SEGGER_RTT.o

Read-only data symbols by address:

     Address  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x080000B8  AHBPrescTable                      16      4  Cnst  Gb  system_stm32l0xx.o
  0x08000654  __SEGGER_RTL_c_locale              12      4  Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000660  __SEGGER_RTL_codeset_ascii
                                                 32      4  Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000680  __SEGGER_RTL_c_locale_data
                                                 88      4  Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000C90  PLLMulTable                         9      4  Cnst  Gb  system_stm32l0xx.o
  0x08000C99  __SEGGER_RTL_c_locale_month_names
                                                 87         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000CF9  __SEGGER_RTL_c_locale_am_pm_indicator
                                                  7         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000D00  _aInitStr.0                        17      4  Cnst  Lc  SEGGER_RTT.o
  0x08000D11  __SEGGER_RTL_c_locale_date_time_format
                                                 15         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08001060  __SEGGER_RTL_data_utf8_period
                                                  2         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08001062  __SEGGER_RTL_c_locale_day_names
                                                 58         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x0800109C  __SEGGER_RTL_c_locale_abbrev_day_names
                                                 29         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x080010B9  __SEGGER_RTL_c_locale_abbrev_month_names
                                                 49         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x080010EA  __SEGGER_RTL_data_empty_string
                                                  1         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x080010EB  __SEGGER_RTL_c_locale_date_format
                                                  9         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x080010F4  __SEGGER_RTL_c_locale_time_format
                                                  9         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x080010FD  __SEGGER_RTL_ascii_ctype_mask
                                                 13         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08001110  __SEGGER_RTL_ascii_ctype_map
                                                128         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08001190  __SEGGER_RTL_hex_uc                16         Cnst  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x080011A0  __SEGGER_RTL_hex_lc                16         Cnst  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x080011D4  __SEGGER_init_table__            [36]      4  Cnst  Lc  [ Linker created ]
  0x080011F8  __SEGGER_init_data__             [36]      4  Cnst  Lc  [ Linker created ]

Untyped symbols by name:

  Symbol name                     Value        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  __FLASH1_segment_end__     0x08008000                     ----  Gb  [ Linker created ]
  __FLASH1_segment_size__    0x00008000                     ----  Gb  [ Linker created ]
  __FLASH1_segment_start__   0x08000000                     ----  Gb  [ Linker created ]
  __FLASH1_segment_used_end__
                             0x08001242                     ----  Gb  [ Linker created ]
  __FLASH1_segment_used_size__
                             0x00001242                     ----  Gb  [ Linker created ]
  __FLASH1_segment_used_start__
                             0x08000000                     ----  Gb  [ Linker created ]
  __FLASH_segment_end__      0x08008000                     ----  Gb  [ Linker created ]
  __FLASH_segment_size__     0x00008000                     ----  Gb  [ Linker created ]
  __FLASH_segment_start__    0x08000000                     ----  Gb  [ Linker created ]
  __FLASH_segment_used_end__
                             0x08001242                     ----  Gb  [ Linker created ]
  __FLASH_segment_used_size__
                             0x00001242                     ----  Gb  [ Linker created ]
  __FLASH_segment_used_start__
                             0x08000000                     ----  Gb  [ Linker created ]
  __HEAPSIZE__               0x00000400                     ----  Gb  [ Linker created ]
  __RAM1_segment_end__       0x20002000                     ----  Gb  [ Linker created ]
  __RAM1_segment_size__      0x00002000                     ----  Gb  [ Linker created ]
  __RAM1_segment_start__     0x20000000                     ----  Gb  [ Linker created ]
  __RAM1_segment_used_end__  0x20002000                     ----  Gb  [ Linker created ]
  __RAM1_segment_used_size__
                             0x00002000                     ----  Gb  [ Linker created ]
  __RAM1_segment_used_start__
                             0x20000000                     ----  Gb  [ Linker created ]
  __RAM_segment_end__        0x20002000                     ----  Gb  [ Linker created ]
  __RAM_segment_size__       0x00002000                     ----  Gb  [ Linker created ]
  __RAM_segment_start__      0x20000000                     ----  Gb  [ Linker created ]
  __RAM_segment_used_end__   0x20002000                     ----  Gb  [ Linker created ]
  __RAM_segment_used_size__  0x00002000                     ----  Gb  [ Linker created ]
  __RAM_segment_used_start__
                             0x20000000                     ----  Gb  [ Linker created ]
  __STACKSIZE_PROCESS__      0x00000000                     ----  Gb  [ Linker created ]
  __STACKSIZE__              0x00000200                     ----  Gb  [ Linker created ]
  __ctors_end__              0x08001110                     ----  Gb  [ Linker created ]
  __ctors_start__            0x0800110C                     ----  Gb  [ Linker created ]
  __stack_end__              0x20002000                     ----  Gb  [ Linker created ]
  __thread_pointer$          0x00000000                     ----  Gb  [ Linker created ]
  _vectors                   0x08000000       [184]    256  Code  Gb  stm32l010x6_Vectors.o
  _vectors_end               0x080000B8                256  Code  Lc  stm32l010x6_Vectors.o

Untyped symbols by address:

       Value  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x00000000  __thread_pointer$                             ----  Gb  [ Linker created ]
  0x00000000  __STACKSIZE_PROCESS__                         ----  Gb  [ Linker created ]
  0x00000200  __STACKSIZE__                                 ----  Gb  [ Linker created ]
  0x00000400  __HEAPSIZE__                                  ----  Gb  [ Linker created ]
  0x00001242  __FLASH_segment_used_size__
                                                            ----  Gb  [ Linker created ]
  0x00001242  __FLASH1_segment_used_size__
                                                            ----  Gb  [ Linker created ]
  0x00002000  __RAM_segment_used_size__                     ----  Gb  [ Linker created ]
  0x00002000  __RAM_segment_size__                          ----  Gb  [ Linker created ]
  0x00002000  __RAM1_segment_used_size__
                                                            ----  Gb  [ Linker created ]
  0x00002000  __RAM1_segment_size__                         ----  Gb  [ Linker created ]
  0x00008000  __FLASH_segment_size__                        ----  Gb  [ Linker created ]
  0x00008000  __FLASH1_segment_size__                       ----  Gb  [ Linker created ]
  0x08000000  _vectors                        [184]    256  Code  Gb  stm32l010x6_Vectors.o
  0x08000000  __FLASH_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x08000000  __FLASH_segment_start__                       ----  Gb  [ Linker created ]
  0x08000000  __FLASH1_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x08000000  __FLASH1_segment_start__                      ----  Gb  [ Linker created ]
  0x080000B8  _vectors_end                             256  Code  Lc  stm32l010x6_Vectors.o
  0x0800110C  __ctors_start__                               ----  Gb  [ Linker created ]
  0x08001110  __ctors_end__                                 ----  Gb  [ Linker created ]
  0x08001242  __FLASH_segment_used_end__
                                                            ----  Gb  [ Linker created ]
  0x08001242  __FLASH1_segment_used_end__
                                                            ----  Gb  [ Linker created ]
  0x08008000  __FLASH_segment_end__                         ----  Gb  [ Linker created ]
  0x08008000  __FLASH1_segment_end__                        ----  Gb  [ Linker created ]
  0x20000000  __RAM_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x20000000  __RAM_segment_start__                         ----  Gb  [ Linker created ]
  0x20000000  __RAM1_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x20000000  __RAM1_segment_start__                        ----  Gb  [ Linker created ]
  0x20002000  __stack_end__                                 ----  Gb  [ Linker created ]
  0x20002000  __RAM_segment_used_end__                      ----  Gb  [ Linker created ]
  0x20002000  __RAM_segment_end__                           ----  Gb  [ Linker created ]
  0x20002000  __RAM1_segment_used_end__                     ----  Gb  [ Linker created ]
  0x20002000  __RAM1_segment_end__                          ----  Gb  [ Linker created ]


***********************************************************************************************
***                                                                                         ***
***                                      LINK SUMMARY                                       ***
***                                                                                         ***
***********************************************************************************************

Memory breakdown:

    3 958 bytes read-only  code    + 
      710 bytes read-only  data    =   4 668 bytes read-only (total)
    1 772 bytes read-write data

Region summary:

  Name        Range                     Size                 Used               Unused       Alignment Loss
  ----------  -----------------  -----------  -------------------  -------------------  -------------------
  FLASH       08000000-08007fff       32 768        4 672  14.26%       28 096  85.74%            0   0.00%
  RAM         20000000-20001fff        8 192        1 772  21.63%        6 420  78.37%            0   0.00%

Link complete: 0 errors, 0 warnings, 0 remarks
