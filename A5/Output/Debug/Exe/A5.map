***********************************************************************************************
***                                                                                         ***
***                                    LINK INFORMATION                                     ***
***                                                                                         ***
***********************************************************************************************

Linker version:

  SEGGER ARM Linker 4.38.5 compiled Jun 15 2023 00:38:16
  Copyright (c) 2017-2022 SEGGER Microcontroller GmbH    www.segger.com


***********************************************************************************************
***                                                                                         ***
***                                     MODULE SUMMARY                                      ***
***                                                                                         ***
***********************************************************************************************

Memory use by input file:

  Object File                                       RX Code     RO Data     RW Data     ZI Data
  ---------------------------------------------  ----------  ----------  ----------  ----------
  main.o                                                104           5                        
  SEGGER_RTT.o                                          784          26                   1 208
  SEGGER_THUMB_Startup.o                                 20                                    
  stm32l053xx_Vectors.o                                 256                                    
  STM32L0xx_Startup.o                                    56                                    
  system_stm32l0xx.o                                    368          25           4            
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (6 objects)                                1 588          56           4       1 208
  ---------------------------------------------  ----------  ----------  ----------  ----------
  libc_v6m_t_le_eabi_balanced.a                       1 824         573          20           4
  prinops_rtt_v6m_t_le_eabi_balanced.a                   66                      12          12
  SEGGER_crtinit_v6m_t_le_eabi_balanced.a                74                                    
  strops_v6m_t_le_eabi_balanced.a                        36                                    
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (4 archives)                               2 000         573          32          16
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Linker created (shared data, fills, blocks):                       72                     512
  =============================================  ==========  ==========  ==========  ==========
  Total:                                              3 588         701          36       1 736
  =============================================  ==========  ==========  ==========  ==========

Memory use by archive member:

  Archive member                                    RX Code     RO Data     RW Data     ZI Data
  ---------------------------------------------  ----------  ----------  ----------  ----------
  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
                                                        928                                    
  fileops.o (libc_v6m_t_le_eabi_balanced.a)              52                                    
  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
                                                        288                                    
  mbops.o (libc_v6m_t_le_eabi_balanced.a)               190         541          20           4
  prinops.o (libc_v6m_t_le_eabi_balanced.a)             366          32                        
  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
                                                         66                      12          12
  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
                                                         74                                    
  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
                                                         36                                    
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (8 members from 4 archives)                2 000         573          32          16
  Objects (6 files)                                   1 588          56           4       1 208
  Linker created (shared data, fills, blocks):                       72                     512
  =============================================  ==========  ==========  ==========  ==========
  Total:                                              3 588         701          36       1 736
  =============================================  ==========  ==========  ==========  ==========

Memory use by linker:

  Description                                       RX Code     RO Data     RW Data     ZI Data
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Initialization table                                               72                        
  Memory for block 'stack'                                                                  512
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (linker created):                                         72                     512
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Objects (6 files)                                   1 588          56           4       1 208
  Archives (4 files)                                  2 000         573          32          16
  =============================================  ==========  ==========  ==========  ==========
  Total:                                              3 588         701          36       1 736
  =============================================  ==========  ==========  ==========  ==========


***********************************************************************************************
***                                                                                         ***
***                                     SECTION DETAIL                                      ***
***                                                                                         ***
***********************************************************************************************

Sections by address:

  Range              Symbol or [section] Name         Size  Al  Init  Ac  Object File
  -----------------  -------------------------  ----------  --  ----  --  -----------
  08000000-080000bf  _vectors                          192  256
                                                                Code  RX  stm32l053xx_Vectors.o
  080000c0-080000cf  AHBPrescTable                      16   4  Cnst  RO  system_stm32l0xx.o
  080000d0-0800023b  SystemCoreClockUpdate             364   4  Code  RX  system_stm32l0xx.o
  0800023c-080002db  _DoInit                           160   4  Code  RX  SEGGER_RTT.o
  080002dc-08000387  SEGGER_RTT_WriteNoLock            172   4  Code  RX  SEGGER_RTT.o
  08000388-080003d3  SEGGER_RTT_Write                   76   4  Code  RX  SEGGER_RTT.o
  080003d4-0800043b  main                              104   4  Code  RX  main.o
  0800043c-0800044f  _start                             20   4  Code  RX  SEGGER_THUMB_Startup.o
  08000450-0800047f  HardFault_Handler                  48   4  Code  RX  STM32L0xx_Startup.o
  08000480-08000497  __SEGGER_RTL_current_locale
                                                        24   4  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000498-080004b3  __SEGGER_RTL_ascii_isctype
                                                        28   4  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  080004b4-080004cf  __SEGGER_RTL_ascii_iswctype
                                                        28   4  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  080004d0-080004db  __SEGGER_RTL_c_locale              12   4  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  080004dc-080004fb  __SEGGER_RTL_codeset_ascii
                                                        32   4  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  080004fc-08000553  __SEGGER_RTL_c_locale_data
                                                        88   4  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000554-08000583  __aeabi_lmul                       48   4  Code  RX  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  08000584-080005bb  __aeabi_uidiv                      56   4  Code  RX  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  080005bc-080005cb  __aeabi_uidivmod                   16   4  Code  RX  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  080005cc-0800066b  __aeabi_uldivmod                  160   4  Code  RX  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  0800066c-08000673  __aeabi_idiv0                       8   4  Code  RX  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  08000674-080006eb  vfprintf_l                        120   4  Code  RX  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  080006ec-08000713  printf                             40   4  Code  RX  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  08000714-08000ab3  __SEGGER_RTL_vfprintf_int_nwp
                                                       928   4  Code  RX  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
  08000ab4-08000ae7  __SEGGER_RTL_X_file_stat           52   4  Code  RX  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  08000ae8-08000af7  memcpy                             16   4  Code  RX  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  08000af8-08000b0b  __aeabi_memclr                     20   4  Code  RX  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  08000b0c-08000b14  PLLMulTable                         9   4  Cnst  RO  system_stm32l0xx.o
  08000b15-08000b6b  __SEGGER_RTL_c_locale_month_names
                                                        87   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000b6c-08000b74  [.rodata]                           9   4  Cnst  RO  SEGGER_RTT.o
  08000b75-08000b7b  __SEGGER_RTL_c_locale_am_pm_indicator
                                                         7   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000b7c-08000b8c  _aInitStr.0                        17   4  Cnst  RO  SEGGER_RTT.o
  08000b8d-08000b9b  __SEGGER_RTL_c_locale_date_time_format
                                                        15   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000b9c-08000ba0  [.rodata]                           5   4  Cnst  RO  main.o
  08000ba1-08000bbd  __SEGGER_RTL_c_locale_abbrev_day_names
                                                        29   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000bbe-08000bbf  NMI_Handler                         2   2  Code  RX  stm32l053xx_Vectors.o
  08000bc0-08000bc1  SVC_Handler                         2   2  Code  RX  stm32l053xx_Vectors.o
  08000bc2-08000bc3  PendSV_Handler                      2   2  Code  RX  stm32l053xx_Vectors.o
  08000bc4-08000bc5  SysTick_Handler                     2   2  Code  RX  stm32l053xx_Vectors.o
  08000bc6-08000bc7  WWDG_IRQHandler                     2   2  Code  RX  stm32l053xx_Vectors.o
  08000bc8-08000bc9  PVD_IRQHandler                      2   2  Code  RX  stm32l053xx_Vectors.o
  08000bca-08000bcb  RTC_IRQHandler                      2   2  Code  RX  stm32l053xx_Vectors.o
  08000bcc-08000bcd  FLASH_IRQHandler                    2   2  Code  RX  stm32l053xx_Vectors.o
  08000bce-08000bcf  RCC_CRS_IRQHandler                  2   2  Code  RX  stm32l053xx_Vectors.o
  08000bd0-08000bd1  EXTI0_1_IRQHandler                  2   2  Code  RX  stm32l053xx_Vectors.o
  08000bd2-08000bd3  EXTI2_3_IRQHandler                  2   2  Code  RX  stm32l053xx_Vectors.o
  08000bd4-08000bd5  EXTI4_15_IRQHandler                 2   2  Code  RX  stm32l053xx_Vectors.o
  08000bd6-08000bd7  TSC_IRQHandler                      2   2  Code  RX  stm32l053xx_Vectors.o
  08000bd8-08000bd9  DMA1_Channel1_IRQHandler            2   2  Code  RX  stm32l053xx_Vectors.o
  08000bda-08000bdb  DMA1_Channel2_3_IRQHandler
                                                         2   2  Code  RX  stm32l053xx_Vectors.o
  08000bdc-08000bdd  DMA1_Channel4_5_6_7_IRQHandler
                                                         2   2  Code  RX  stm32l053xx_Vectors.o
  08000bde-08000bdf  ADC1_COMP_IRQHandler                2   2  Code  RX  stm32l053xx_Vectors.o
  08000be0-08000be1  LPTIM1_IRQHandler                   2   2  Code  RX  stm32l053xx_Vectors.o
  08000be2-08000be3  TIM2_IRQHandler                     2   2  Code  RX  stm32l053xx_Vectors.o
  08000be4-08000be5  TIM6_DAC_IRQHandler                 2   2  Code  RX  stm32l053xx_Vectors.o
  08000be6-08000be7  TIM21_IRQHandler                    2   2  Code  RX  stm32l053xx_Vectors.o
  08000be8-08000be9  TIM22_IRQHandler                    2   2  Code  RX  stm32l053xx_Vectors.o
  08000bea-08000beb  I2C1_IRQHandler                     2   2  Code  RX  stm32l053xx_Vectors.o
  08000bec-08000bed  I2C2_IRQHandler                     2   2  Code  RX  stm32l053xx_Vectors.o
  08000bee-08000bef  SPI1_IRQHandler                     2   2  Code  RX  stm32l053xx_Vectors.o
  08000bf0-08000bf1  SPI2_IRQHandler                     2   2  Code  RX  stm32l053xx_Vectors.o
  08000bf2-08000bf3  USART1_IRQHandler                   2   2  Code  RX  stm32l053xx_Vectors.o
  08000bf4-08000bf5  USART2_IRQHandler                   2   2  Code  RX  stm32l053xx_Vectors.o
  08000bf6-08000bf7  RNG_LPUART1_IRQHandler              2   2  Code  RX  stm32l053xx_Vectors.o
  08000bf8-08000bf9  LCD_IRQHandler                      2   2  Code  RX  stm32l053xx_Vectors.o
  08000bfa-08000bfb  USB_IRQHandler                      2   2  Code  RX  stm32l053xx_Vectors.o
  08000bfc-08000bfd  Dummy_Handler                       2   2  Code  RX  stm32l053xx_Vectors.o
  08000bfe-08000c2b  __SEGGER_RTL_ascii_mbtowc          46   2  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000c2c-08000cb5  __SEGGER_RTL_putc                 138   2  Code  RX  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  08000cb6-08000ccf  __SEGGER_RTL_prin_flush            26   2  Code  RX  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  08000cd0-08000ce9  vfprintf                           26   2  Code  RX  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  08000cea-08000cf3  __SEGGER_RTL_X_file_write          10   2  Code  RX  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  08000cf4-08000cf7  SystemInit                          4   2  Code  RX  system_stm32l0xx.o
  08000cf8-08000dab  _WriteBlocking                    180   2  Code  RX  SEGGER_RTT.o
  08000dac-08000e33  _WriteNoCheck                     136   2  Code  RX  SEGGER_RTT.o
  08000e34-08000e6f  _GetAvailWriteSpace                60   2  Code  RX  SEGGER_RTT.o
  08000e70-08000e77  reset_handler                       8   2  Code  RX  STM32L0xx_Startup.o
  08000e78-08000eab  fwrite                             52   2  Code  RX  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  08000eac-08000ebb  __SEGGER_RTL_ascii_wctomb          16   2  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000ebc-08000ec7  __SEGGER_RTL_ascii_toupper
                                                        12   2  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000ec8-08000ed3  __SEGGER_RTL_ascii_tolower
                                                        12   2  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000ed4-08000edf  __SEGGER_RTL_ascii_towupper
                                                        12   2  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000ee0-08000eeb  __SEGGER_RTL_ascii_towlower
                                                        12   2  Code  RX  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000eec-08000efb  __SEGGER_RTL_stream_write          16   2  Code  RX  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  08000efc-08000eff  __SEGGER_RTL_X_file_bufsize
                                                         4   2  Code  RX  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  08000f00-08000f01  [.rodata.libc..L.str]               2   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000f02-08000f03  __SEGGER_RTL_data_utf8_period
                                                         2   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000f04-08000f3d  __SEGGER_RTL_c_locale_day_names
                                                        58   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000f3e-08000f6e  __SEGGER_RTL_c_locale_abbrev_month_names
                                                        49   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000f6f-08000f6f  __SEGGER_RTL_data_empty_string
                                                         1   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000f70-08000f78  __SEGGER_RTL_c_locale_date_format
                                                         9   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000f79-08000f81  __SEGGER_RTL_c_locale_time_format
                                                         9   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000f82-08000f8e  __SEGGER_RTL_ascii_ctype_mask
                                                        13   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08000f8f-08000f8f  ( UNUSED .=.+1 )                    1   -  ----  -   -
  08000f90-08000f93  [.init_array]                       4   4  ----  --  STM32L0xx_Startup.o
  08000f94-08001013  __SEGGER_RTL_ascii_ctype_map
                                                       128   1  Cnst  RO  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  08001014-08001023  __SEGGER_RTL_hex_uc                16   1  Cnst  RO  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  08001024-08001033  __SEGGER_RTL_hex_lc                16   1  Cnst  RO  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  08001034-08001057  __SEGGER_init_ctors                36   4  Code  RX  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  08001058-0800107b  __SEGGER_init_table__              36   4  Cnst  RO  [ Linker created ]
  0800107c-0800109f  __SEGGER_init_data__               36   4  Cnst  RO  [ Linker created ]
  080010a0-080010b1  __SEGGER_init_zero                 18   2  Code  RX  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  080010b2-080010c5  __SEGGER_init_copy                 20   2  Code  RX  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  080010c6-1fffffff  ( UNUSED .=.+402648890 )   402 648 890
                                                             -  ----  -   -
  20000000-200003ff  _acUpBuffer                     1 024   4  Zero  ZI  SEGGER_RTT.o
  20000400-200004a7  _SEGGER_RTT                       168   4  Zero  ZI  SEGGER_RTT.o
  200004a8-200004b7  _acDownBuffer                      16   4  Zero  ZI  SEGGER_RTT.o
  200004b8-200004bb  __SEGGER_RTL_stdout_file            4   4  Zero  ZI  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004bc-200004bf  __SEGGER_RTL_stdin_file             4   4  Zero  ZI  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004c0-200004c3  __SEGGER_RTL_stderr_file            4   4  Zero  ZI  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004c4-200004c7  __SEGGER_RTL_locale_ptr             4   4  Zero  ZI  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  200004c8-200004db  __SEGGER_RTL_global_locale
                                                        20   4  Init  RW  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  200004dc-200004df  stdout                              4   4  Init  RW  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004e0-200004e3  stdin                               4   4  Init  RW  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004e4-200004e7  stderr                              4   4  Init  RW  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  200004e8-200004eb  SystemCoreClock                     4   4  Init  RW  system_stm32l0xx.o
  200004ec-20001dff  ( UNUSED .=.+6420 )             6 420   -  ----  -   -
  20001e00-20001fff  [.bss.block.stack]                512   8  None  ZI  [ Linker created ]


***********************************************************************************************
***                                                                                         ***
***                                       SYMBOL LIST                                       ***
***                                                                                         ***
***********************************************************************************************

Function symbols by name:

  Symbol name                   Address        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  ADC1_COMP_IRQHandler       0x08000BDF                  2  Code  Wk  stm32l053xx_Vectors.o
  DMA1_Channel1_IRQHandler   0x08000BD9                  2  Code  Wk  stm32l053xx_Vectors.o
  DMA1_Channel2_3_IRQHandler
                             0x08000BDB                  2  Code  Wk  stm32l053xx_Vectors.o
  DMA1_Channel4_5_6_7_IRQHandler
                             0x08000BDD                  2  Code  Wk  stm32l053xx_Vectors.o
  Dummy_Handler              0x08000BFD                  2  Code  Wk  stm32l053xx_Vectors.o
  EXTI0_1_IRQHandler         0x08000BD1                  2  Code  Wk  stm32l053xx_Vectors.o
  EXTI2_3_IRQHandler         0x08000BD3                  2  Code  Wk  stm32l053xx_Vectors.o
  EXTI4_15_IRQHandler        0x08000BD5                  2  Code  Wk  stm32l053xx_Vectors.o
  FLASH_IRQHandler           0x08000BCD                  2  Code  Wk  stm32l053xx_Vectors.o
  HardFault_Handler          0x08000451                  4  Code  Wk  STM32L0xx_Startup.o
  I2C1_IRQHandler            0x08000BEB                  2  Code  Wk  stm32l053xx_Vectors.o
  I2C2_IRQHandler            0x08000BED                  2  Code  Wk  stm32l053xx_Vectors.o
  LCD_IRQHandler             0x08000BF9                  2  Code  Wk  stm32l053xx_Vectors.o
  LPTIM1_IRQHandler          0x08000BE1                  2  Code  Wk  stm32l053xx_Vectors.o
  NMI_Handler                0x08000BBF                  2  Code  Wk  stm32l053xx_Vectors.o
  PVD_IRQHandler             0x08000BC9                  2  Code  Wk  stm32l053xx_Vectors.o
  PendSV_Handler             0x08000BC3                  2  Code  Wk  stm32l053xx_Vectors.o
  RCC_CRS_IRQHandler         0x08000BCF                  2  Code  Wk  stm32l053xx_Vectors.o
  RNG_LPUART1_IRQHandler     0x08000BF7                  2  Code  Wk  stm32l053xx_Vectors.o
  RTC_IRQHandler             0x08000BCB                  2  Code  Wk  stm32l053xx_Vectors.o
  Reset_Handler              0x08000E71                  2  Code  Gb  STM32L0xx_Startup.o
  SEGGER_RTT_Write           0x08000389          76      4  Code  Gb  SEGGER_RTT.o
  SEGGER_RTT_WriteNoLock     0x080002DD         172      4  Code  Gb  SEGGER_RTT.o
  SPI1_IRQHandler            0x08000BEF                  2  Code  Wk  stm32l053xx_Vectors.o
  SPI2_IRQHandler            0x08000BF1                  2  Code  Wk  stm32l053xx_Vectors.o
  SVC_Handler                0x08000BC1                  2  Code  Wk  stm32l053xx_Vectors.o
  SysTick_Handler            0x08000BC5                  2  Code  Wk  stm32l053xx_Vectors.o
  SystemCoreClockUpdate      0x080000D1         364      4  Code  Gb  system_stm32l0xx.o
  SystemInit                 0x08000CF5           4      2  Code  Gb  system_stm32l0xx.o
  TIM21_IRQHandler           0x08000BE7                  2  Code  Wk  stm32l053xx_Vectors.o
  TIM22_IRQHandler           0x08000BE9                  2  Code  Wk  stm32l053xx_Vectors.o
  TIM2_IRQHandler            0x08000BE3                  2  Code  Wk  stm32l053xx_Vectors.o
  TIM6_DAC_IRQHandler        0x08000BE5                  2  Code  Wk  stm32l053xx_Vectors.o
  TSC_IRQHandler             0x08000BD7                  2  Code  Wk  stm32l053xx_Vectors.o
  USART1_IRQHandler          0x08000BF3                  2  Code  Wk  stm32l053xx_Vectors.o
  USART2_IRQHandler          0x08000BF5                  2  Code  Wk  stm32l053xx_Vectors.o
  USB_IRQHandler             0x08000BFB                  2  Code  Wk  stm32l053xx_Vectors.o
  WWDG_IRQHandler            0x08000BC7                  2  Code  Wk  stm32l053xx_Vectors.o
  _DoInit                    0x0800023D         160      4  Code  Lc  SEGGER_RTT.o
  _GetAvailWriteSpace        0x08000E35          60      2  Code  Lc  SEGGER_RTT.o
  _WriteBlocking             0x08000CF9         180      2  Code  Lc  SEGGER_RTT.o
  _WriteNoCheck              0x08000DAD         136      2  Code  Lc  SEGGER_RTT.o
  __SEGGER_RTL_X_file_bufsize
                             0x08000EFD           4      2  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_X_file_stat   0x08000AB5          52      4  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_X_file_write  0x08000CEB          10      2  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_isctype
                             0x08000499          28      4  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_iswctype
                             0x080004B5          28      4  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_mbtowc  0x08000BFF          46      2  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_tolower
                             0x08000EC9          12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_toupper
                             0x08000EBD          12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_towlower
                             0x08000EE1          12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_towupper
                             0x08000ED5          12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_wctomb  0x08000EAD          16      2  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_current_locale
                             0x08000481          24      4  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_prin_flush    0x08000CB7          26      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_putc          0x08000C2D         138      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stream_write  0x08000EED          16      2  Code  Lc  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_vfprintf      0x08000715         928      4  Code  Gb  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_vfprintf_int_nwp
                             0x08000715         928      4  Code  Gb  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_copy         0x080010B3          20      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_ctors        0x08001035          26      4  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_done         0x08000447                  4  Code  Gb  SEGGER_THUMB_Startup.o
  __SEGGER_init_zero         0x080010A1          18      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  __aeabi_idiv0              0x0800066D           6      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __aeabi_lmul               0x08000555          46      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __aeabi_memclr             0x08000AF9          20      4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memclr4            0x08000AF9                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memclr8            0x08000AF9                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memcpy             0x08000AE9                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memcpy4            0x08000AE9                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memcpy8            0x08000AE9                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memset             0x08000AFB                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memset4            0x08000AFB                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memset8            0x08000AFB                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_uidiv              0x08000585          56      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __aeabi_uidivmod           0x080005BD          16      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __aeabi_uldivmod           0x080005CD         160      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __startup_complete         0x08000447                  4  Code  Gb  SEGGER_THUMB_Startup.o
  _start                     0x0800043D          14      4  Code  Gb  SEGGER_THUMB_Startup.o
  exit                       0x0800044B           2      4  Code  Gb  SEGGER_THUMB_Startup.o
  fwrite                     0x08000E79          52      2  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  main                       0x080003D5         104      4  Code  Gb  main.o
  memcpy                     0x08000AE9          14      4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  memset                     0x08000B01                  4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  printf                     0x080006ED          40      4  Code  Wk  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  reset_handler              0x08000E71                  2  Code  Gb  STM32L0xx_Startup.o
  vfprintf                   0x08000CD1          26      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  vfprintf_l                 0x08000675         120      4  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)

Function symbols by address:

     Address  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x080000D1  SystemCoreClockUpdate             364      4  Code  Gb  system_stm32l0xx.o
  0x0800023D  _DoInit                           160      4  Code  Lc  SEGGER_RTT.o
  0x080002DD  SEGGER_RTT_WriteNoLock            172      4  Code  Gb  SEGGER_RTT.o
  0x08000389  SEGGER_RTT_Write                   76      4  Code  Gb  SEGGER_RTT.o
  0x080003D5  main                              104      4  Code  Gb  main.o
  0x0800043D  _start                             14      4  Code  Gb  SEGGER_THUMB_Startup.o
  0x08000447  __startup_complete                         4  Code  Gb  SEGGER_THUMB_Startup.o
  0x08000447  __SEGGER_init_done                         4  Code  Gb  SEGGER_THUMB_Startup.o
  0x0800044B  exit                                2      4  Code  Gb  SEGGER_THUMB_Startup.o
  0x08000451  HardFault_Handler                          4  Code  Wk  STM32L0xx_Startup.o
  0x08000481  __SEGGER_RTL_current_locale
                                                 24      4  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000499  __SEGGER_RTL_ascii_isctype
                                                 28      4  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x080004B5  __SEGGER_RTL_ascii_iswctype
                                                 28      4  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000555  __aeabi_lmul                       46      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000585  __aeabi_uidiv                      56      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  0x080005BD  __aeabi_uidivmod                   16      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  0x080005CD  __aeabi_uldivmod                  160      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  0x0800066D  __aeabi_idiv0                       6      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000675  vfprintf_l                        120      4  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x080006ED  printf                             40      4  Code  Wk  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000715  __SEGGER_RTL_vfprintf_int_nwp
                                                928      4  Code  Gb  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000715  __SEGGER_RTL_vfprintf             928      4  Code  Gb  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000AB5  __SEGGER_RTL_X_file_stat           52      4  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x08000AE9  memcpy                             14      4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000AE9  __aeabi_memcpy8                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000AE9  __aeabi_memcpy4                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000AE9  __aeabi_memcpy                             4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000AF9  __aeabi_memclr8                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000AF9  __aeabi_memclr4                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000AF9  __aeabi_memclr                     20      4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000AFB  __aeabi_memset8                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000AFB  __aeabi_memset4                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000AFB  __aeabi_memset                             4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000B01  memset                                     4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  0x08000BBF  NMI_Handler                                2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BC1  SVC_Handler                                2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BC3  PendSV_Handler                             2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BC5  SysTick_Handler                            2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BC7  WWDG_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BC9  PVD_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BCB  RTC_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BCD  FLASH_IRQHandler                           2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BCF  RCC_CRS_IRQHandler                         2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BD1  EXTI0_1_IRQHandler                         2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BD3  EXTI2_3_IRQHandler                         2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BD5  EXTI4_15_IRQHandler                        2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BD7  TSC_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BD9  DMA1_Channel1_IRQHandler                   2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BDB  DMA1_Channel2_3_IRQHandler
                                                         2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BDD  DMA1_Channel4_5_6_7_IRQHandler
                                                         2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BDF  ADC1_COMP_IRQHandler                       2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BE1  LPTIM1_IRQHandler                          2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BE3  TIM2_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BE5  TIM6_DAC_IRQHandler                        2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BE7  TIM21_IRQHandler                           2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BE9  TIM22_IRQHandler                           2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BEB  I2C1_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BED  I2C2_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BEF  SPI1_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BF1  SPI2_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BF3  USART1_IRQHandler                          2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BF5  USART2_IRQHandler                          2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BF7  RNG_LPUART1_IRQHandler                     2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BF9  LCD_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BFB  USB_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BFD  Dummy_Handler                              2  Code  Wk  stm32l053xx_Vectors.o
  0x08000BFF  __SEGGER_RTL_ascii_mbtowc          46      2  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000C2D  __SEGGER_RTL_putc                 138      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000CB7  __SEGGER_RTL_prin_flush            26      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000CD1  vfprintf                           26      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000CEB  __SEGGER_RTL_X_file_write          10      2  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x08000CF5  SystemInit                          4      2  Code  Gb  system_stm32l0xx.o
  0x08000CF9  _WriteBlocking                    180      2  Code  Lc  SEGGER_RTT.o
  0x08000DAD  _WriteNoCheck                     136      2  Code  Lc  SEGGER_RTT.o
  0x08000E35  _GetAvailWriteSpace                60      2  Code  Lc  SEGGER_RTT.o
  0x08000E71  reset_handler                              2  Code  Gb  STM32L0xx_Startup.o
  0x08000E71  Reset_Handler                              2  Code  Gb  STM32L0xx_Startup.o
  0x08000E79  fwrite                             52      2  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000EAD  __SEGGER_RTL_ascii_wctomb          16      2  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000EBD  __SEGGER_RTL_ascii_toupper
                                                 12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000EC9  __SEGGER_RTL_ascii_tolower
                                                 12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000ED5  __SEGGER_RTL_ascii_towupper
                                                 12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000EE1  __SEGGER_RTL_ascii_towlower
                                                 12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000EED  __SEGGER_RTL_stream_write          16      2  Code  Lc  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000EFD  __SEGGER_RTL_X_file_bufsize
                                                  4      2  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x08001035  __SEGGER_init_ctors                26      4  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  0x080010A1  __SEGGER_init_zero                 18      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  0x080010B3  __SEGGER_init_copy                 20      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)

Function symbols by descending size:

  Symbol name                      Size  Align  Type  Bd  Object File
  -------------------------  ----------  -----  ----  --  -----------
  __SEGGER_RTL_vfprintf             928      4  Code  Gb  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_vfprintf_int_nwp
                                    928      4  Code  Gb  __SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_balanced.a)
  SystemCoreClockUpdate             364      4  Code  Gb  system_stm32l0xx.o
  _WriteBlocking                    180      2  Code  Lc  SEGGER_RTT.o
  SEGGER_RTT_WriteNoLock            172      4  Code  Gb  SEGGER_RTT.o
  _DoInit                           160      4  Code  Lc  SEGGER_RTT.o
  __aeabi_uldivmod                  160      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_putc                 138      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  _WriteNoCheck                     136      2  Code  Lc  SEGGER_RTT.o
  vfprintf_l                        120      4  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  main                              104      4  Code  Gb  main.o
  SEGGER_RTT_Write                   76      4  Code  Gb  SEGGER_RTT.o
  _GetAvailWriteSpace                60      2  Code  Lc  SEGGER_RTT.o
  __aeabi_uidiv                      56      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_X_file_stat           52      4  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  fwrite                             52      2  Code  Wk  fileops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_mbtowc          46      2  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __aeabi_lmul                       46      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  printf                             40      4  Code  Wk  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_isctype
                                     28      4  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_iswctype
                                     28      4  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_prin_flush            26      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_ctors                26      4  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  vfprintf                           26      2  Code  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_current_locale
                                     24      4  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_copy                 20      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  __aeabi_memclr                     20      4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_zero                 18      2  Code  Wk  SEGGER_crtinit.o (SEGGER_crtinit_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_wctomb          16      2  Code  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stream_write          16      2  Code  Lc  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __aeabi_uidivmod                   16      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  _start                             14      4  Code  Gb  SEGGER_THUMB_Startup.o
  memcpy                             14      4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_tolower
                                     12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_toupper
                                     12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_towlower
                                     12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_towupper
                                     12      2  Code  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_X_file_write          10      2  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __aeabi_idiv0                       6      4  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_balanced.a)
  SystemInit                          4      2  Code  Gb  system_stm32l0xx.o
  __SEGGER_RTL_X_file_bufsize
                                      4      2  Code  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  exit                                2      4  Code  Gb  SEGGER_THUMB_Startup.o
  ADC1_COMP_IRQHandler                       2  Code  Wk  stm32l053xx_Vectors.o
  DMA1_Channel1_IRQHandler                   2  Code  Wk  stm32l053xx_Vectors.o
  DMA1_Channel2_3_IRQHandler
                                             2  Code  Wk  stm32l053xx_Vectors.o
  DMA1_Channel4_5_6_7_IRQHandler
                                             2  Code  Wk  stm32l053xx_Vectors.o
  Dummy_Handler                              2  Code  Wk  stm32l053xx_Vectors.o
  EXTI0_1_IRQHandler                         2  Code  Wk  stm32l053xx_Vectors.o
  EXTI2_3_IRQHandler                         2  Code  Wk  stm32l053xx_Vectors.o
  EXTI4_15_IRQHandler                        2  Code  Wk  stm32l053xx_Vectors.o
  FLASH_IRQHandler                           2  Code  Wk  stm32l053xx_Vectors.o
  HardFault_Handler                          4  Code  Wk  STM32L0xx_Startup.o
  I2C1_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  I2C2_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  LCD_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  LPTIM1_IRQHandler                          2  Code  Wk  stm32l053xx_Vectors.o
  NMI_Handler                                2  Code  Wk  stm32l053xx_Vectors.o
  PVD_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  PendSV_Handler                             2  Code  Wk  stm32l053xx_Vectors.o
  RCC_CRS_IRQHandler                         2  Code  Wk  stm32l053xx_Vectors.o
  RNG_LPUART1_IRQHandler                     2  Code  Wk  stm32l053xx_Vectors.o
  RTC_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  Reset_Handler                              2  Code  Gb  STM32L0xx_Startup.o
  SPI1_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  SPI2_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  SVC_Handler                                2  Code  Wk  stm32l053xx_Vectors.o
  SysTick_Handler                            2  Code  Wk  stm32l053xx_Vectors.o
  TIM21_IRQHandler                           2  Code  Wk  stm32l053xx_Vectors.o
  TIM22_IRQHandler                           2  Code  Wk  stm32l053xx_Vectors.o
  TIM2_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  TIM6_DAC_IRQHandler                        2  Code  Wk  stm32l053xx_Vectors.o
  TSC_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  USART1_IRQHandler                          2  Code  Wk  stm32l053xx_Vectors.o
  USART2_IRQHandler                          2  Code  Wk  stm32l053xx_Vectors.o
  USB_IRQHandler                             2  Code  Wk  stm32l053xx_Vectors.o
  WWDG_IRQHandler                            2  Code  Wk  stm32l053xx_Vectors.o
  __SEGGER_init_done                         4  Code  Gb  SEGGER_THUMB_Startup.o
  __aeabi_memclr4                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memclr8                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memcpy                             4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memcpy4                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memcpy8                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memset                             4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memset4                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __aeabi_memset8                            4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  __startup_complete                         4  Code  Gb  SEGGER_THUMB_Startup.o
  memset                                     4  Code  Wk  strasmops_arm.o (strops_v6m_t_le_eabi_balanced.a)
  reset_handler                              2  Code  Gb  STM32L0xx_Startup.o

Read-write data symbols by name:

  Symbol name                   Address        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  SystemCoreClock            0x200004E8           4      4  Init  Gb  system_stm32l0xx.o
  _SEGGER_RTT                0x20000400         168      4  Zero  Gb  SEGGER_RTT.o
  __RAL_global_locale        0x200004C8          20      4  Init  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_global_locale
                             0x200004C8          20      4  Init  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_locale_ptr    0x200004C4           4      4  Zero  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stderr_file   0x200004C0           4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stdin_file    0x200004BC           4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stdout_file   0x200004B8           4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  _acDownBuffer              0x200004A8          16      4  Zero  Lc  SEGGER_RTT.o
  _acUpBuffer                0x20000000       1 024      4  Zero  Lc  SEGGER_RTT.o
  stderr                     0x200004E4           4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  stdin                      0x200004E0           4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  stdout                     0x200004DC           4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)

Read-write data symbols by address:

     Address  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x20000000  _acUpBuffer                     1 024      4  Zero  Lc  SEGGER_RTT.o
  0x20000400  _SEGGER_RTT                       168      4  Zero  Gb  SEGGER_RTT.o
  0x200004A8  _acDownBuffer                      16      4  Zero  Lc  SEGGER_RTT.o
  0x200004B8  __SEGGER_RTL_stdout_file            4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004BC  __SEGGER_RTL_stdin_file             4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004C0  __SEGGER_RTL_stderr_file            4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004C4  __SEGGER_RTL_locale_ptr             4      4  Zero  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x200004C8  __SEGGER_RTL_global_locale
                                                 20      4  Init  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x200004C8  __RAL_global_locale                20      4  Init  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x200004DC  stdout                              4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004E0  stdin                               4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004E4  stderr                              4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  0x200004E8  SystemCoreClock                     4      4  Init  Gb  system_stm32l0xx.o

Read-write data symbols by descending size:

  Symbol name                      Size  Align  Type  Bd  Object File
  -------------------------  ----------  -----  ----  --  -----------
  _acUpBuffer                     1 024      4  Zero  Lc  SEGGER_RTT.o
  _SEGGER_RTT                       168      4  Zero  Gb  SEGGER_RTT.o
  __RAL_global_locale                20      4  Init  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_global_locale
                                     20      4  Init  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  _acDownBuffer                      16      4  Zero  Lc  SEGGER_RTT.o
  SystemCoreClock                     4      4  Init  Gb  system_stm32l0xx.o
  __SEGGER_RTL_locale_ptr             4      4  Zero  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stderr_file            4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stdin_file             4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stdout_file            4      4  Zero  Lc  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  stderr                              4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  stdin                               4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)
  stdout                              4      4  Init  Gb  prinops_rtt.o (prinops_rtt_v6m_t_le_eabi_balanced.a)

Read-only data symbols by name:

  Symbol name                   Address        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  AHBPrescTable              0x080000C0          16      4  Cnst  Gb  system_stm32l0xx.o
  PLLMulTable                0x08000B0C           9      4  Cnst  Gb  system_stm32l0xx.o
  __SEGGER_RTL_ascii_ctype_map
                             0x08000F94         128         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ascii_ctype_mask
                             0x08000F82          13         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale      0x080004D0          12      4  Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_abbrev_day_names
                             0x08000BA1          29         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_abbrev_month_names
                             0x08000F3E          49         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_am_pm_indicator
                             0x08000B75           7         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_data
                             0x080004FC          88      4  Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_date_format
                             0x08000F70           9         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_date_time_format
                             0x08000B8D          15         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_day_names
                             0x08000F04          58         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_month_names
                             0x08000B15          87         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_c_locale_time_format
                             0x08000F79           9         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_codeset_ascii
                             0x080004DC          32      4  Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_data_empty_string
                             0x08000F6F           1         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_data_utf8_period
                             0x08000F02           2         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_hex_lc        0x08001024          16         Cnst  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_RTL_hex_uc        0x08001014          16         Cnst  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  __SEGGER_init_data__       0x0800107C        [36]      4  Cnst  Lc  [ Linker created ]
  __SEGGER_init_table__      0x08001058        [36]      4  Cnst  Lc  [ Linker created ]
  _aInitStr.0                0x08000B7C          17      4  Cnst  Lc  SEGGER_RTT.o

Read-only data symbols by address:

     Address  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x080000C0  AHBPrescTable                      16      4  Cnst  Gb  system_stm32l0xx.o
  0x080004D0  __SEGGER_RTL_c_locale              12      4  Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x080004DC  __SEGGER_RTL_codeset_ascii
                                                 32      4  Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x080004FC  __SEGGER_RTL_c_locale_data
                                                 88      4  Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000B0C  PLLMulTable                         9      4  Cnst  Gb  system_stm32l0xx.o
  0x08000B15  __SEGGER_RTL_c_locale_month_names
                                                 87         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000B75  __SEGGER_RTL_c_locale_am_pm_indicator
                                                  7         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000B7C  _aInitStr.0                        17      4  Cnst  Lc  SEGGER_RTT.o
  0x08000B8D  __SEGGER_RTL_c_locale_date_time_format
                                                 15         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000BA1  __SEGGER_RTL_c_locale_abbrev_day_names
                                                 29         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000F02  __SEGGER_RTL_data_utf8_period
                                                  2         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000F04  __SEGGER_RTL_c_locale_day_names
                                                 58         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000F3E  __SEGGER_RTL_c_locale_abbrev_month_names
                                                 49         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000F6F  __SEGGER_RTL_data_empty_string
                                                  1         Cnst  Gb  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000F70  __SEGGER_RTL_c_locale_date_format
                                                  9         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000F79  __SEGGER_RTL_c_locale_time_format
                                                  9         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000F82  __SEGGER_RTL_ascii_ctype_mask
                                                 13         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08000F94  __SEGGER_RTL_ascii_ctype_map
                                                128         Cnst  Lc  mbops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08001014  __SEGGER_RTL_hex_uc                16         Cnst  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08001024  __SEGGER_RTL_hex_lc                16         Cnst  Gb  prinops.o (libc_v6m_t_le_eabi_balanced.a)
  0x08001058  __SEGGER_init_table__            [36]      4  Cnst  Lc  [ Linker created ]
  0x0800107C  __SEGGER_init_data__             [36]      4  Cnst  Lc  [ Linker created ]

Untyped symbols by name:

  Symbol name                     Value        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  __FLASH1_segment_end__     0x08010000                     ----  Gb  [ Linker created ]
  __FLASH1_segment_size__    0x00010000                     ----  Gb  [ Linker created ]
  __FLASH1_segment_start__   0x08000000                     ----  Gb  [ Linker created ]
  __FLASH1_segment_used_end__
                             0x080010C6                     ----  Gb  [ Linker created ]
  __FLASH1_segment_used_size__
                             0x000010C6                     ----  Gb  [ Linker created ]
  __FLASH1_segment_used_start__
                             0x08000000                     ----  Gb  [ Linker created ]
  __FLASH_segment_end__      0x08010000                     ----  Gb  [ Linker created ]
  __FLASH_segment_size__     0x00010000                     ----  Gb  [ Linker created ]
  __FLASH_segment_start__    0x08000000                     ----  Gb  [ Linker created ]
  __FLASH_segment_used_end__
                             0x080010C6                     ----  Gb  [ Linker created ]
  __FLASH_segment_used_size__
                             0x000010C6                     ----  Gb  [ Linker created ]
  __FLASH_segment_used_start__
                             0x08000000                     ----  Gb  [ Linker created ]
  __HEAPSIZE__               0x00000400                     ----  Gb  [ Linker created ]
  __RAM1_segment_end__       0x20002000                     ----  Gb  [ Linker created ]
  __RAM1_segment_size__      0x00002000                     ----  Gb  [ Linker created ]
  __RAM1_segment_start__     0x20000000                     ----  Gb  [ Linker created ]
  __RAM1_segment_used_end__  0x20002000                     ----  Gb  [ Linker created ]
  __RAM1_segment_used_size__
                             0x00002000                     ----  Gb  [ Linker created ]
  __RAM1_segment_used_start__
                             0x20000000                     ----  Gb  [ Linker created ]
  __RAM_segment_end__        0x20002000                     ----  Gb  [ Linker created ]
  __RAM_segment_size__       0x00002000                     ----  Gb  [ Linker created ]
  __RAM_segment_start__      0x20000000                     ----  Gb  [ Linker created ]
  __RAM_segment_used_end__   0x20002000                     ----  Gb  [ Linker created ]
  __RAM_segment_used_size__  0x00002000                     ----  Gb  [ Linker created ]
  __RAM_segment_used_start__
                             0x20000000                     ----  Gb  [ Linker created ]
  __STACKSIZE_PROCESS__      0x00000000                     ----  Gb  [ Linker created ]
  __STACKSIZE__              0x00000200                     ----  Gb  [ Linker created ]
  __ctors_end__              0x08000F94                     ----  Gb  [ Linker created ]
  __ctors_start__            0x08000F90                     ----  Gb  [ Linker created ]
  __stack_end__              0x20002000                     ----  Gb  [ Linker created ]
  __thread_pointer$          0x00000000                     ----  Gb  [ Linker created ]
  _vectors                   0x08000000       [192]    256  Code  Gb  stm32l053xx_Vectors.o
  _vectors_end               0x080000C0                256  Code  Lc  stm32l053xx_Vectors.o

Untyped symbols by address:

       Value  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x00000000  __thread_pointer$                             ----  Gb  [ Linker created ]
  0x00000000  __STACKSIZE_PROCESS__                         ----  Gb  [ Linker created ]
  0x00000200  __STACKSIZE__                                 ----  Gb  [ Linker created ]
  0x00000400  __HEAPSIZE__                                  ----  Gb  [ Linker created ]
  0x000010C6  __FLASH_segment_used_size__
                                                            ----  Gb  [ Linker created ]
  0x000010C6  __FLASH1_segment_used_size__
                                                            ----  Gb  [ Linker created ]
  0x00002000  __RAM_segment_used_size__                     ----  Gb  [ Linker created ]
  0x00002000  __RAM_segment_size__                          ----  Gb  [ Linker created ]
  0x00002000  __RAM1_segment_used_size__
                                                            ----  Gb  [ Linker created ]
  0x00002000  __RAM1_segment_size__                         ----  Gb  [ Linker created ]
  0x00010000  __FLASH_segment_size__                        ----  Gb  [ Linker created ]
  0x00010000  __FLASH1_segment_size__                       ----  Gb  [ Linker created ]
  0x08000000  _vectors                        [192]    256  Code  Gb  stm32l053xx_Vectors.o
  0x08000000  __FLASH_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x08000000  __FLASH_segment_start__                       ----  Gb  [ Linker created ]
  0x08000000  __FLASH1_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x08000000  __FLASH1_segment_start__                      ----  Gb  [ Linker created ]
  0x080000C0  _vectors_end                             256  Code  Lc  stm32l053xx_Vectors.o
  0x08000F90  __ctors_start__                               ----  Gb  [ Linker created ]
  0x08000F94  __ctors_end__                                 ----  Gb  [ Linker created ]
  0x080010C6  __FLASH_segment_used_end__
                                                            ----  Gb  [ Linker created ]
  0x080010C6  __FLASH1_segment_used_end__
                                                            ----  Gb  [ Linker created ]
  0x08010000  __FLASH_segment_end__                         ----  Gb  [ Linker created ]
  0x08010000  __FLASH1_segment_end__                        ----  Gb  [ Linker created ]
  0x20000000  __RAM_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x20000000  __RAM_segment_start__                         ----  Gb  [ Linker created ]
  0x20000000  __RAM1_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x20000000  __RAM1_segment_start__                        ----  Gb  [ Linker created ]
  0x20002000  __stack_end__                                 ----  Gb  [ Linker created ]
  0x20002000  __RAM_segment_used_end__                      ----  Gb  [ Linker created ]
  0x20002000  __RAM_segment_end__                           ----  Gb  [ Linker created ]
  0x20002000  __RAM1_segment_used_end__                     ----  Gb  [ Linker created ]
  0x20002000  __RAM1_segment_end__                          ----  Gb  [ Linker created ]


***********************************************************************************************
***                                                                                         ***
***                                      LINK SUMMARY                                       ***
***                                                                                         ***
***********************************************************************************************

Memory breakdown:

    3 588 bytes read-only  code    + 
      701 bytes read-only  data    =   4 289 bytes read-only (total)
    1 772 bytes read-write data

Region summary:

  Name        Range                     Size                 Used               Unused       Alignment Loss
  ----------  -----------------  -----------  -------------------  -------------------  -------------------
  FLASH       08000000-0800ffff       65 536        4 293   6.55%       61 243  93.45%            0   0.00%
  RAM         20000000-20001fff        8 192        1 772  21.63%        6 420  78.37%            0   0.00%

Link complete: 0 errors, 0 warnings, 0 remarks
